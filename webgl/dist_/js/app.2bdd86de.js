(function(){"use strict";var t={6729:function(t,e,r){var i=r(9242),o=r(3396);function s(t,e,r,i,s,n){const a=(0,o.up)("router-view");return(0,o.wg)(),(0,o.j4)(a)}var n={name:"App"},a=r(89);const l=(0,a.Z)(n,[["render",s]]);var h=l;function u(t,e,r,i,s,n){const a=(0,o.up)("webgl-component");return(0,o.wg)(),(0,o.j4)(a)}var c=r(7139);const f=t=>((0,o.dD)("data-v-25fdf0ba"),t=t(),(0,o.Cn)(),t),d={class:"dev-tool",style:{right:"0px",bottom:"0px"},oncontextmenu:"return false",ondragstart:"return false",onselectstart:"return false"},m={class:"header"},b=f((()=>(0,o._)("h3",null,"Dev Console",-1))),p=f((()=>(0,o._)("pre",{class:"console"},null,-1))),g=[p],x={key:0,class:"dev-tool",style:{left:"0px",top:"0px"},oncontextmenu:"return false",ondragstart:"return false",onselectstart:"return false"},v={class:"header"},y=f((()=>(0,o._)("h3",null,"Options",-1))),E={class:"block-group"},S=f((()=>(0,o._)("h2",null,"OBJECT OPTIONS",-1))),B={class:"block-group"},M=f((()=>(0,o._)("label",null,"SCALE",-1))),O={class:"block-group"},T=f((()=>(0,o._)("label",null,"HEADING",-1))),w={class:"block-group"},C=f((()=>(0,o._)("label",null,"PITCH",-1))),A={class:"block-group"},R=f((()=>(0,o._)("label",null,"ROLL",-1))),F=f((()=>(0,o._)("h2",null,"CAMERA OPTIONS",-1))),V={class:"block-group"},L=f((()=>(0,o._)("label",null,"FOVY",-1))),P={class:"block-group"},_=f((()=>(0,o._)("label",null,"NEAR",-1))),N={class:"block-group"},D=f((()=>(0,o._)("label",null,"FAR",-1))),G=f((()=>(0,o._)("h2",null,"WEBGL OPTIONS",-1))),I={class:"block-group"},j=f((()=>(0,o._)("label",null,"CULL-FACE",-1))),U=f((()=>(0,o._)("label",null,"DEPTH-TEST",-1))),z=f((()=>(0,o._)("label",null,"DEBUG-MODE",-1))),Z=f((()=>(0,o._)("h2",null,"RENDER OPTIONS",-1))),k={class:"block-group"},X=f((()=>(0,o._)("label",null,"ENABLE-SSAO",-1))),H=f((()=>(0,o._)("label",null,"ENABLE-SHADOW",-1))),K=f((()=>(0,o._)("label",null,"ENABLE-EDGE",-1))),Y=f((()=>(0,o._)("h2",null,"RENDER OPTIONS",-1))),W=(0,o.uE)('<option value="4" data-v-25fdf0ba>4X4</option><option value="8" data-v-25fdf0ba>8X8</option><option value="16" data-v-25fdf0ba>16X16</option><option value="32" data-v-25fdf0ba>32X32</option><option value="64" data-v-25fdf0ba>64X64</option><option value="128" data-v-25fdf0ba>128X128</option><option value="256" data-v-25fdf0ba>256X256</option>',7),$=[W],q={class:"dev-tool",style:{left:"0px",bottom:"0px"},oncontextmenu:"return false",ondragstart:"return false",onselectstart:"return false"},J={class:"header"},Q=f((()=>(0,o._)("h3",null,"Renders",-1))),tt=f((()=>(0,o._)("h2",null,"OBJECT INFO",-1))),et=["change"],rt=f((()=>(0,o._)("div",{id:"home",oncontextmenu:"return false",ondragstart:"return false",onselectstart:"return false"},[(0,o._)("canvas",{id:"glcanvas",width:"1024",height:"800"},"SAMPLE")],-1)));function it(t,e,r,s,n,a){const l=(0,o.up)("first-person-controller-component"),h=(0,o.up)("third-person-controller-component");return(0,o.wg)(),(0,o.iD)(o.HY,null,[(0,o.wy)((0,o._)("div",d,[(0,o._)("div",m,[b,(0,o._)("div",{class:"show-hide",onClick:e[0]||(e[0]=t=>n.showConsole=!n.showConsole)},"show/hide")]),(0,o.wy)((0,o._)("div",null,g,512),[[i.F8,n.showConsole]])],512),[[i.F8,n.consoleTools]]),n.drawTools?((0,o.wg)(),(0,o.iD)("div",x,[(0,o._)("div",v,[y,(0,o._)("div",{class:"show-hide",onClick:e[1]||(e[1]=t=>n.showDraw=!n.showDraw)},"show/hide")]),(0,o.wy)((0,o._)("div",null,[(0,o._)("div",E,[(0,o._)("button",{class:"mini-btn",onClick:e[2]||(e[2]=t=>a.initPosition())},"InitPosition"),(0,o._)("button",{class:"mini-btn",onClick:e[3]||(e[3]=t=>a.getExtrusion())},"Extrusion"),(0,o._)("button",{class:"mini-btn",onClick:e[4]||(e[4]=t=>a.removeAll())},"RemoveAll"),(0,o._)("button",{class:"mini-btn",onClick:e[5]||(e[5]=t=>n.consoleTools=!n.consoleTools)},"Console/Render")]),S,(0,o._)("input",{type:"file",class:"mini-btn",id:"fileUpload",accept:".obj",onChange:e[6]||(e[6]=(...t)=>a.uploadObj&&a.uploadObj(...t))},null,32),(0,o._)("div",B,[M,(0,o.wy)((0,o._)("input",{type:"range","onUpdate:modelValue":e[7]||(e[7]=t=>n.localOptions.scale=t),min:"1",max:"20",step:"1"},null,512),[[i.nr,n.localOptions.scale]])]),(0,o._)("div",O,[T,(0,o.wy)((0,o._)("input",{type:"range","onUpdate:modelValue":e[8]||(e[8]=t=>n.localOptions.rotationZ=t),min:"0",max:"360",step:"1",onInput:e[9]||(e[9]=(...t)=>a.rotateSelectedObject&&a.rotateSelectedObject(...t))},null,544),[[i.nr,n.localOptions.rotationZ]])]),(0,o._)("div",w,[C,(0,o.wy)((0,o._)("input",{type:"range","onUpdate:modelValue":e[10]||(e[10]=t=>n.localOptions.rotationX=t),min:"0",max:"360",step:"1",onInput:e[11]||(e[11]=(...t)=>a.rotateSelectedObject&&a.rotateSelectedObject(...t))},null,544),[[i.nr,n.localOptions.rotationX]])]),(0,o._)("div",A,[R,(0,o.wy)((0,o._)("input",{type:"range","onUpdate:modelValue":e[12]||(e[12]=t=>n.localOptions.rotationY=t),min:"0",max:"360",step:"1",onInput:e[13]||(e[13]=(...t)=>a.rotateSelectedObject&&a.rotateSelectedObject(...t))},null,544),[[i.nr,n.localOptions.rotationY]])]),F,(0,o._)("button",{class:"mini-btn",onClick:e[14]||(e[14]=t=>n.thirdMode=!1)},"FirstPerson"),(0,o._)("button",{class:"mini-btn",onClick:e[15]||(e[15]=t=>n.thirdMode=!0)},"ThirdPerson"),(0,o._)("div",V,[L,(0,o.wy)((0,o._)("input",{type:"range","onUpdate:modelValue":e[16]||(e[16]=t=>n.globalOptions.fovyDegree=t),min:"15",max:"180",step:"1"},null,512),[[i.nr,n.globalOptions.fovyDegree]])]),(0,o._)("div",P,[_,(0,o.wy)((0,o._)("input",{type:"range","onUpdate:modelValue":e[17]||(e[17]=t=>n.globalOptions.near=t),min:"0.1",max:"10000.0",step:"1"},null,512),[[i.nr,n.globalOptions.near]])]),(0,o._)("div",N,[D,(0,o.wy)((0,o._)("input",{type:"range","onUpdate:modelValue":e[18]||(e[18]=t=>n.globalOptions.far=t),min:"0.1",max:"200000.0",step:"1"},null,512),[[i.nr,n.globalOptions.far]])]),G,(0,o._)("div",I,[(0,o.wy)((0,o._)("input",{type:"checkbox","onUpdate:modelValue":e[19]||(e[19]=t=>n.globalOptions.cullFace=t)},null,512),[[i.e8,n.globalOptions.cullFace]]),j,(0,o.wy)((0,o._)("input",{type:"checkbox","onUpdate:modelValue":e[20]||(e[20]=t=>n.globalOptions.depthTest=t)},null,512),[[i.e8,n.globalOptions.depthTest]]),U,(0,o.wy)((0,o._)("input",{type:"checkbox","onUpdate:modelValue":e[21]||(e[21]=t=>n.globalOptions.debugMode=t)},null,512),[[i.e8,n.globalOptions.debugMode]]),z]),Z,(0,o._)("div",k,[(0,o.wy)((0,o._)("input",{type:"checkbox","onUpdate:modelValue":e[22]||(e[22]=t=>n.globalOptions.enableSsao=t)},null,512),[[i.e8,n.globalOptions.enableSsao]]),X,(0,o.wy)((0,o._)("input",{type:"checkbox","onUpdate:modelValue":e[23]||(e[23]=t=>n.globalOptions.enableGlobalLight=t)},null,512),[[i.e8,n.globalOptions.enableGlobalLight]]),H,(0,o.wy)((0,o._)("input",{type:"checkbox","onUpdate:modelValue":e[24]||(e[24]=t=>n.globalOptions.enableEdge=t)},null,512),[[i.e8,n.globalOptions.enableEdge]]),K]),Y,(0,o.wy)((0,o._)("select",{"onUpdate:modelValue":e[25]||(e[25]=t=>n.localOptions.blockSize=t),class:"mini-btn"},$,512),[[i.bM,n.localOptions.blockSize]]),(0,o._)("button",{class:"mini-btn",onClick:e[26]||(e[26]=t=>a.reload(!1))},"ReloadBlocks"),(0,o._)("button",{class:"mini-btn",onClick:e[27]||(e[27]=t=>a.reload(!0))},"ReloadBatchedBlocks")],512),[[i.F8,n.showDraw]])])):(0,o.kq)("",!0),(0,o.wy)((0,o._)("div",q,[(0,o._)("div",J,[Q,(0,o._)("div",{class:"show-hide",onClick:e[28]||(e[28]=t=>n.showRender=!n.showRender)},"show/hide")]),(0,o.wy)((0,o._)("div",null,[tt,(0,o.wy)((0,o._)("input",{type:"number",class:"mini-btn","onUpdate:modelValue":e[29]||(e[29]=t=>a.renderableObject.length=t),change:a.uploadObj,readonly:""},null,8,et),[[i.nr,a.renderableObject.length]]),(0,o._)("ul",null,[((0,o.wg)(!0),(0,o.iD)(o.HY,null,(0,o.Ko)(a.renderableObject,((t,e)=>((0,o.wg)(),(0,o.iD)("li",{key:t.id,class:(0,c.C_)({selected:t==n.selectedObject})},(0,c.zw)(`[${e}] : ${t.name}, ${t.id}`),3)))),128))])],512),[[i.F8,n.showRender]])],512),[[i.F8,!n.consoleTools]]),rt,n.thirdMode?(0,o.kq)("",!0):((0,o.wg)(),(0,o.j4)(l,{key:1,"web-gl":n.webGl,blocks:n.blocks},null,8,["web-gl","blocks"])),n.thirdMode?((0,o.wg)(),(0,o.j4)(h,{key:2,"web-gl":n.webGl,blocks:n.blocks},null,8,["web-gl","blocks"])):(0,o.kq)("",!0)],64)}function ot(t,e,r,i,s,n){return(0,o.wg)(),(0,o.iD)("div")}const{mat2:st,mat3:nt,mat4:at,vec2:lt,vec3:ht,vec4:ut}=self.glMatrix;var ct={name:"FirstPerson",props:{webGl:Object},data(){return{keyEvent:void 0,controllerStatus:{mouseStatus:!1,keyStatus:{}},globalOptions:{cameraZAxis:!1,BLOCK_SIZE:16,MOVE_FACTOR:2,ROTATE_FACTOR:.1}}},mounted(){this.init()},unmounted(){clearInterval(this.keyEvent)},methods:{init(){this.initKey(),this.initMouse()},initMouse(){let t=document.getElementById("glcanvas");t.onmousedown=e=>{2==e.button&&(this.controllerStatus.mouseStatus?(this.controllerStatus.mouseStatus=!1,document.exitPointerLock()):(this.controllerStatus.mouseStatus=!0,t.requestPointerLock()))},t.onmousemove=t=>{if(this.controllerStatus.mouseStatus){const e=this.webGl,r=e.camera,i=this.globalOptions.ROTATE_FACTOR;let o=t.movementX*i;0!=o&&(this.globalOptions.cameraZAxis?r.rotate(-o,0,0):r.rotate(0,0,o));let s=t.movementY*i;0!=s&&r.rotate(0,-s,0)}},t.onmouseup=()=>{}},initKey(){const t=16;this.keyEvent=setInterval((()=>{let t=this.globalOptions.MOVE_FACTOR;const e=this.webGl,r=e.camera;let i=this.controllerStatus.keyStatus;!0===i.w?(r.moveForward(-t),i.s=!1):!0===i.s&&(r.moveForward(t),i.w=!1),!0===i.a?(r.moveRight(-t),i.d=!1):!0===i.d&&(r.moveRight(t),i.a=!1),!0===i.q?(r.moveUp(t),i.e=!1):!0===i.e&&(r.moveUp(-t),i.q=!1)}),t),window.onkeydown=t=>{this.controllerStatus.ctrlStatus=t.ctrlKey,this.controllerStatus.keyStatus[t.key]=!0},window.onkeyup=t=>{this.controllerStatus.ctrlStatus=t.ctrlKey,this.controllerStatus.keyStatus[t.key]=!1,"Escape"==t.key&&(this.controllerStatus.mouseStatus=!1)}}}};const ft=(0,a.Z)(ct,[["render",ot]]);var dt=ft;function mt(t,e,r,i,s,n){return(0,o.wg)(),(0,o.iD)("div")}var bt=r(2482);const{vec3:pt,mat4:gt}=self.glMatrix;class xt{constructor(t,e){(0,bt.Z)(this,"position",void 0),(0,bt.Z)(this,"direction",void 0),this.position=t,this.direction=e}}const{vec3:vt}=self.glMatrix;class yt{constructor(t,e){(0,bt.Z)(this,"position",void 0),(0,bt.Z)(this,"normal",void 0),(0,bt.Z)(this,"distance",void 0),this.set(t,e)}set(t,e){this.normal=e,this.position=t,this.distance=-(e[0]*t[0]+e[1]*t[1]+e[2]*t[2])}getIntersection(t){let e=this.normal,r=t.position,i=t.direction,o=e[0]*i[0]+e[1]*i[1]+e[2]*i[2];if(Math.abs(o)>Number.MIN_VALUE){let t=-(e[0]*r[0]+e[1]*r[1]+e[2]*r[2]+this.distance)/o,s=r[0]+t*i[0],n=r[1]+t*i[1],a=r[2]+t*i[2];return vt.fromValues(s,n,a)}}}const{mat2:Et,mat3:St,mat4:Bt,vec2:Mt,vec3:Ot,vec4:Tt}=self.glMatrix;var wt={name:"FirstPerson",props:{webGl:Object,blocks:Object},data(){return{controllerStatus:{moveStatus:!1,moveObject:!1,moveObjectOffset:void 0,movePlane:void 0,moveCameraPosition:void 0,rotateStatus:!1,rotateObject:!1,pivotPosition:void 0,zoomStatus:!1,zoomCameraPosition:void 0,zoomCameraRay:void 0,altStatus:!1,ctrlStatus:!1,shiftStatus:!1},globalOptions:{BLOCK_SIZE:16,MOVE_FACTOR:15,ROTATE_FACTOR:.004}}},mounted(){this.init()},methods:{init(){this.initKey(),this.initMouse()},initMouse(){let t=document.getElementById("glcanvas");t.ontouchstart=e=>{const r=this.webGl,i=r.camera,o=e.changedTouches[0];this.touchStartPosition=[o.clientX,o.clientY];const s=o.clientX,n=t.height-o.clientY,a=s/t.width,l=n/t.height;let h=r.depthFbo.getDepth(s,n),u=this.getScreenPosition(a,l,t.width,t.height,h);e.changedTouches.length>=2?(console.log(e.changedTouches),this.controllerStatus.zoomStatus=!0,this.controllerStatus.zoomCameraPosition=i.position,this.controllerStatus.zoomCameraRay=this.getRay(a,l,t.width,t.height)):1==e.changedTouches.length&&(this.controllerStatus.moveStatus=!0,this.controllerStatus.movePlane=new yt(u,Ot.fromValues(0,0,1)),this.controllerStatus.moveCameraPosition=i.position),e.preventDefault()},t.ontouchmove=e=>{const r=this.webGl,i=r.camera,o=e.targetTouches[0],s=this.touchStartPosition;let n=[s[0]-o.clientX,s[1]-o.clientY];const a=o.clientX,l=t.height-o.clientY,h=a/t.width,u=l/t.height,c=n[0]*this.globalOptions.ROTATE_FACTOR,f=n[1]*this.globalOptions.ROTATE_FACTOR;if(this.controllerStatus.moveStatus){let e=this.getRay(h,u,t.width,t.height),r=new xt(i.position,e),o=this.controllerStatus.movePlane.getIntersection(r);if(this.controllerStatus.moveObject){let t=this.controllerStatus.moveObjectOffset,e=this.$parent.getSelectedObject();e.position[0]=o[0]-t[0],e.position[1]=o[1]-t[1],e.dirty=!0}else i.moveCamera(this.controllerStatus.moveCameraPosition,this.controllerStatus.movePlane.position,o)}else if(this.controllerStatus.zoomStatus){let t=r.depthFbo.getDepth(a,l),e=this.controllerStatus.zoomCameraRay,o=Ot.scale(Ot.create(),e,(c+f)*t),s=Ot.add(Ot.create(),i.position,o);i.setPosition(s[0],s[1],s[2])}e.preventDefault()},t.ontouchend=t=>{console.log("touch end",t),this.controllerStatus.moveObject=!1,this.controllerStatus.moveObjectOffset=void 0,this.controllerStatus.moveStatus=!1,this.controllerStatus.movePlane=void 0,this.controllerStatus.moveCameraPosition=void 0,this.controllerStatus.rotateStatus=!1,this.controllerStatus.pivotPosition=void 0,this.controllerStatus.rotateObject=!1,this.controllerStatus.zoomStatus=!1,this.controllerStatus.zoomCameraPosition=void 0,t.preventDefault()},t.onwheel=e=>{const r=this.webGl,i=r.camera,o=e.x,s=t.height-e.y,n=o/t.width,a=s/t.height;let l=r.depthFbo.getDepth(o,s),h=r.selectionFbo.getColor(o,s);if(4294967295==h)return;let u=20*l/-e.deltaY,c=this.getScreenPosition(n,a,t.width,t.height,u);i.setPosition(c[0],c[1],c[2])},t.ondblclick=e=>{const r=this.webGl,i=r.camera,o=e.x,s=t.height-e.y;let n=o/t.width,a=s/t.height,l=r.selectionFbo.getColor(o,s);if(4294967295!=l&&0==e.button)if(this.controllerStatus.ctrlStatus){let e=r.normalFbo.getNormal(o,s),l=r.depthFbo.getDepth(o,s),h=this.getScreenPosition(n,a,t.width,t.height,l),u=i.getRotationMatrix(),c=Tt.fromValues(e[0],e[1],e[2],1),f=Tt.transformMat4(Tt.create(),c,u),d=Math.atan2(f[0],f[2]),m=-Math.asin(f[1]);d=Math.degree(d),m=Math.degree(m),this.$parent.createObject({position:{x:h[0],y:h[1],z:h[2]},rotation:{heading:0,pitch:m,roll:d}})}else{let t=this.$parent.getSelectedObject();t&&t.id==l?this.$parent.diselectObj():this.$parent.selectObj(l)}},t.onmousedown=e=>{const r=this.webGl,i=r.camera,o=this.blocks,s=e.x,n=t.height-e.y;let a=r.depthFbo.getDepth(s,n),l=s/t.width,h=n/t.height,u=r.selectionFbo.getColor(s,n);if(4294967295==u)return;const c=this.blocks.BLOCK_SIZE/2;if(2==e.button){a=r.depthFbo.getDepth(s,n)-1;let e=this.getScreenPosition(l,h,t.width,t.height,a);if(this.controllerStatus.altStatus)console.log("empty");else if(this.controllerStatus.shiftStatus){let t=Math.floor(e[0]/128),r=Math.floor(e[1]/128),i=Math.floor(e[2]/128),s=128*t,n=128*r,a=128*i,l=Ot.fromValues(s,n,a),h=o.pos[t+c][r+c][i];if(void 0===h||0!=h)return;let u=this.$parent.createDirt(l);o.pos[t+c][r+c][i]=u}else this.controllerStatus.ctrlStatus?console.log("rotate2"):(this.controllerStatus.zoomStatus=!0,this.controllerStatus.zoomCameraPosition=i.position,this.controllerStatus.zoomCameraRay=this.getRay(l,h,t.width,t.height))}else if(1==e.button){a=r.depthFbo.getDepth(s,n);let e=this.getScreenPosition(l,h,t.width,t.height,a);this.controllerStatus.pivotPosition=e,this.controllerStatus.rotateStatus=!0}else if(0==e.button){a=r.depthFbo.getDepth(s,n)+5;let e=this.getScreenPosition(l,h,t.width,t.height,a);if(this.controllerStatus.altStatus){let t=this.$parent.getSelectedObject();t&&(this.controllerStatus.moveObject=!0,this.controllerStatus.moveObjectOffset=Ot.sub(Ot.create(),e,t.position),this.controllerStatus.moveStatus=!0,this.controllerStatus.movePlane=new yt(e,Ot.fromValues(0,0,1)),this.controllerStatus.moveCameraPosition=i.position)}else if(this.controllerStatus.shiftStatus){let t=Math.floor(e[0]/128),r=Math.floor(e[1]/128),i=Math.floor(e[2]/128),s=this.blocks.pos[t+c][r+c][i];if(void 0===s)return;if(0!=s)return this.$parent.removeObj(s),void(o.pos[t+c][r+c][i]=0)}else if(this.controllerStatus.ctrlStatus){if(console.log("rotate1"),this.$parent.getSelectedObject()){a=r.depthFbo.getDepth(s,n);let e=this.getScreenPosition(l,h,t.width,t.height,a);this.controllerStatus.pivotPosition=e,this.controllerStatus.rotateStatus=!0,this.controllerStatus.rotateObject=!0}}else this.controllerStatus.moveStatus=!0,this.controllerStatus.movePlane=new yt(e,Ot.fromValues(0,0,1)),this.controllerStatus.moveCameraPosition=i.position}},t.onmousemove=e=>{const r=this.webGl,i=r.camera,o=e.movementX*this.globalOptions.ROTATE_FACTOR,s=e.movementY*this.globalOptions.ROTATE_FACTOR,n=e.x,a=t.height-e.y,l=n/t.width,h=a/t.height;if(this.controllerStatus.moveStatus){let e=this.getRay(l,h,t.width,t.height),r=new xt(i.position,e),o=this.controllerStatus.movePlane.getIntersection(r);if(this.controllerStatus.moveObject){let t=this.controllerStatus.moveObjectOffset,e=this.$parent.getSelectedObject();e.position[0]=o[0]-t[0],e.position[1]=o[1]-t[1],e.dirty=!0}else i.moveCamera(this.controllerStatus.moveCameraPosition,this.controllerStatus.movePlane.position,o)}else if(this.controllerStatus.rotateStatus)this.controllerStatus.rotateObject?(this.$parent.getSelectedObject().rotation[2]+=Math.degree(o-s),this.$parent.getSelectedObject().dirty=!0):i.rotationOrbit(-o,-s,this.controllerStatus.pivotPosition);else if(this.controllerStatus.zoomStatus){let t=r.depthFbo.getDepth(n,a),e=this.controllerStatus.zoomCameraRay,o=Ot.scale(Ot.create(),e,s*t),l=Ot.add(Ot.create(),i.position,o);i.setPosition(l[0],l[1],l[2])}},t.onmouseup=t=>{0==t.button?(this.controllerStatus.moveObject=!1,this.controllerStatus.moveObjectOffset=void 0,this.controllerStatus.moveStatus=!1,this.controllerStatus.movePlane=void 0,this.controllerStatus.moveCameraPosition=void 0,this.controllerStatus.rotateStatus=!1,this.controllerStatus.pivotPosition=void 0,this.controllerStatus.rotateObject=!1):1==t.button?(this.controllerStatus.rotateStatus=!1,this.controllerStatus.pivotPosition=void 0,this.controllerStatus.rotateObject=!1):2==t.button&&(this.controllerStatus.zoomStatus=!1,this.controllerStatus.zoomCameraPosition=void 0)}},initKey(){window.onkeydown=t=>{this.controllerStatus.ctrlStatus=t.ctrlKey,this.controllerStatus.shiftStatus=t.shiftKey,this.controllerStatus.altStatus=t.altKey},window.onkeyup=t=>{this.controllerStatus.ctrlStatus=t.ctrlKey,this.controllerStatus.shiftStatus=t.shiftKey,this.controllerStatus.altStatus=t.altKey}},getRay(t,e,r,i){const o=this.webGl,s=o.camera;let n=s.getViewRay({x:t,y:e,width:r,height:i},1),a=s.getRotationMatrix(),l=Tt.transformMat4(Tt.create(),Tt.fromValues(n[0],n[1],n[2],1),a);return Ot.fromValues(l[0],l[1],l[2])},getScreenPosition(t,e,r,i,o){const s=this.webGl,n=s.camera;let a=this.getRay(t,e,r,i,o);return Ot.scale(a,a,o),Ot.add(a,n.position,a),a}}};const Ct=(0,a.Z)(wt,[["render",mt]]);var At=Ct;r(1703);const{mat2:Rt,mat3:Ft,mat4:Vt,vec2:Lt,vec3:Pt,vec4:_t}=self.glMatrix;class Nt{constructor(t){(0,bt.Z)(this,"gl",void 0),(0,bt.Z)(this,"shaderInfo",void 0),this.gl=t}get shaderInfo(){return this.shaderInfo}init(t){const e=this.gl,r=this.createShader(e.VERTEX_SHADER,t.vertexShaderSource),i=this.createShader(e.FRAGMENT_SHADER,t.fragmentShaderSource),o=this.createShaderProgram(r,i);if(!e.getProgramParameter(o,e.LINK_STATUS))return void console.error("Unable to initialize the shader program.");e.useProgram(o);let s={};t.attributes.forEach((t=>{if("a"!==t[0])throw"Shader: attribute variable name is incorrect.";let r=t.replace("a","");r=r.replace(/^[A-Z]/,(t=>t.toLowerCase())),s[r]=e.getAttribLocation(o,t)}));let n={};t.uniforms.forEach((t=>{if("u"!==t[0])throw"Shader: uniform variable name is incorrect.";let r=t.replace("u","");r=r.replace(/^[A-Z]/,(t=>t.toLowerCase())),n[r]=e.getUniformLocation(o,t)})),this.shaderInfo={shaderProgram:o,fragmentShader:i,vertexShader:r,attributeLocations:s,uniformLocations:n}}createShader(t,e){const r=this.gl,i=r.createShader(t);r.shaderSource(i,e),r.compileShader(i);const o=r.getShaderParameter(i,r.COMPILE_STATUS);return o?i:(console.error(`An error occurred compiling the shaders:  ${r.getShaderInfoLog(i)}`),null)}createShaderProgram(t,e){const r=this.gl,i=r.createProgram();return r.attachShader(i,t),r.attachShader(i,e),r.linkProgram(i),i}useProgram(){this.gl.useProgram(this.shaderInfo.shaderProgram)}}const{mat2:Dt,mat3:Gt,mat4:It,vec2:jt,vec3:Ut,vec4:zt}=self.glMatrix;class Zt{constructor(t){(0,bt.Z)(this,"transformMatrix",void 0),(0,bt.Z)(this,"modelViewMatrix",void 0),(0,bt.Z)(this,"rotationMatrix",void 0),(0,bt.Z)(this,"position",void 0),(0,bt.Z)(this,"rotation",void 0),(0,bt.Z)(this,"direction",void 0),(0,bt.Z)(this,"up",void 0),(0,bt.Z)(this,"right",void 0),this.init(t),this.getTransformMatrix()}get transformMatrix(){return this.getTransformMatrix(),this.transformMatrix}init(t){this.position=Ut.fromValues(0,0,0),this.rotation=Ut.fromValues(0,0,0),this.direction=Ut.fromValues(0,0,-1),this.up=Ut.fromValues(0,1,0),this.right=Ut.fromValues(1,0,0),t?.fovyDegree&&(this.fovyDegree=t.fovyDegree,this.fovyRadian=Math.radian(t.fovyDegree)),this.position=t?.position?Ut.set(this.position,t.position.x,t.position.y,t.position.z):Ut.set(this.position,0,0,0),this.rotation=t?.rotation?Ut.set(this.rotation,t.rotation.heading,t.rotation.pitch,t.rotation.roll):Ut.set(this.rotation,0,0,0),this.dirty=!0}syncFovyDegree(t=this.fovyDegree){this.fovyDegree=t,this.fovyRadian=Math.radian(this.fovyDegree)}moveCamera(t,e,r){let i=Ut.subtract(Ut.create(),e,r);Ut.add(this.position,t,i),this.dirty=!0}rotationOrbit(t,e,r){let i=this.right,o=It.fromZRotation(It.create(),t),s=It.fromRotation(It.create(),e,i),n=It.multiply(It.create(),o,s),a=Ut.subtract(Ut.create(),this.position,r),l=zt.fromValues(a[0],a[1],a[2],1),h=zt.transformMat4(zt.create(),l,n),u=Ut.fromValues(h[0],h[1],h[2]),c=Ut.add(zt.create(),u,r);this.position=c;let f=Gt.fromMat4(Gt.create(),n),d=Ut.transformMat3(Ut.create(),this.direction,f);this.direction=d;let m=Ut.transformMat3(Ut.create(),this.up,f);this.up=m,this.dirty=!0}rotate(t,e,r){this.rotation[0]+=t,this.rotation[1]+=e,this.rotation[2]+=r;let i=It.identity(It.create());It.rotate(i,i,Math.radian(this.rotation[0]),[0,1,0]);let o=It.identity(It.create());It.rotate(o,o,Math.radian(this.rotation[2]),[0,0,-1]);let s=It.identity(It.create());It.rotate(s,s,Math.radian(this.rotation[1]),[1,0,0]);let n=It.identity(It.create());It.multiply(n,n,i),It.multiply(n,n,o),It.multiply(n,n,s);let a=Gt.fromMat4(Gt.create(),n),l=Ut.transformMat3(Ut.create(),[0,0,-1],a);this.direction=l;let h=Ut.transformMat3(Ut.create(),[0,1,0],a);this.up=h,this.dirty=!0}lookAt(t){let e=Ut.normalize(Ut.create(),Ut.subtract(Ut.create(),this.position,t)),r=Ut.normalize(Ut.create(),Ut.cross(Ut.create(),this.up,e)),i=Ut.normalize(Ut.create(),Ut.cross(Ut.create(),e,r)),o=It.fromValues(r[0],r[1],r[2],0,i[0],i[1],i[2],0,e[0],e[1],e[2],0,this.position[0],this.position[1],this.position[2],1);return this.transformMatrix=o,o}moveForward(t){let e=It.create();It.identity(e),It.translate(e,e,[0,0,t]),It.multiply(this.transformMatrix,this.transformMatrix,e),this.setPositionSync()}moveRight(t){let e=It.create();It.identity(e),It.translate(e,e,[t,0,0]),It.multiply(this.transformMatrix,this.transformMatrix,e),this.setPositionSync()}moveUp(t){let e=It.create();It.identity(e),It.translate(e,e,[0,t,0]),It.multiply(this.transformMatrix,this.transformMatrix,e),this.setPositionSync()}setPositionSync(){this.position[0]=this.transformMatrix[12],this.position[1]=this.transformMatrix[13],this.position[2]=this.transformMatrix[14]}setRotationSync(){this.right[0]=this.transformMatrix[0],this.right[1]=this.transformMatrix[1],this.right[2]=this.transformMatrix[2],this.up[0]=this.transformMatrix[4],this.up[1]=this.transformMatrix[5],this.up[2]=this.transformMatrix[6],this.direction[0]=-this.transformMatrix[8],this.direction[1]=-this.transformMatrix[9],this.direction[2]=-this.transformMatrix[10]}translate(t,e,r){this.position[0]+=t,this.position[1]+=e,this.position[2]+=r,this.dirty=!0}setPosition(t,e,r){this.position[0]=t,this.position[1]=e,this.position[2]=r,this.dirty=!0}getModelViewMatrix(){let t=this.getTransformMatrix(),e=It.create();return It.invert(e,t),e}getTransformMatrix(){return this.transformMatrix&&!this.dirty||(this.calcRight(),this.transformMatrix=It.fromValues(this.right[0],this.right[1],this.right[2],0,this.up[0],this.up[1],this.up[2],0,-this.direction[0],-this.direction[1],-this.direction[2],0,this.position[0],this.position[1],this.position[2],1)),this.transformMatrix}calcRight(){this.right=Ut.cross(this.right,this.direction,this.up)}getRotationMatrix(){return this.rotationMatrix=It.clone(this.transformMatrix),this.rotationMatrix[12]=0,this.rotationMatrix[13]=0,this.rotationMatrix[14]=0,this.rotationMatrix}getNormalMatrix(){let t=It.create(),e=this.getModelViewMatrix();return It.invert(e,e),It.transpose(t,e),t[3]=0,t[7]=0,t[11]=0,t}getViewRay(t,e=1){const r=Math.radian(this.fovyDegree);let i=t.width/t.height,o=Math.tan(r/2),s=2*o*e,n=s*i,a=Ut.fromValues(n*(t.x-.5),s*(t.y-.5),-e);return a}}const{mat2:kt,mat3:Xt,mat4:Ht,vec2:Kt,vec3:Yt,vec4:Wt}=self.glMatrix;class $t{constructor(t){(0,bt.Z)(this,"transformMatrix",void 0),(0,bt.Z)(this,"modelViewMatrix",void 0),(0,bt.Z)(this,"rotationMatrix",void 0),(0,bt.Z)(this,"position",void 0),(0,bt.Z)(this,"rotation",void 0),(0,bt.Z)(this,"direction",void 0),(0,bt.Z)(this,"up",void 0),(0,bt.Z)(this,"right",void 0),this.init(t),this.getTransformMatrix()}get transformMatrix(){return this.getTransformMatrix(),this.transformMatrix}init(t){this.position=Yt.fromValues(0,0,0),this.rotation=Yt.fromValues(0,0,0),this.direction=Yt.fromValues(0,0,-1),this.up=Yt.fromValues(0,1,0),this.right=Yt.fromValues(1,0,0),t?.fovyDegree&&(this.fovyDegree=t.fovyDegree,this.fovyRadian=Math.radian(t.fovyDegree)),this.position=t?.position?Yt.set(this.position,t.position.x,t.position.y,t.position.z):Yt.set(this.position,0,0,0),this.rotation=t?.rotation?Yt.set(this.rotation,t.rotation.heading,t.rotation.pitch,t.rotation.roll):Yt.set(this.rotation,0,0,0),this.dirty=!0}moveCamera(t,e,r){let i=Yt.subtract(Yt.create(),e,r);Yt.add(this.position,t,i),this.dirty=!0}rotationOrbit(t,e,r){let i=this.right,o=Ht.fromZRotation(Ht.create(),t),s=Ht.fromRotation(Ht.create(),e,i),n=Ht.multiply(Ht.create(),o,s),a=Yt.subtract(Yt.create(),this.position,r),l=Wt.fromValues(a[0],a[1],a[2],1),h=Wt.transformMat4(Wt.create(),l,n),u=Yt.fromValues(h[0],h[1],h[2]),c=Yt.add(Wt.create(),u,r);this.position=c;let f=Xt.fromMat4(Xt.create(),n),d=Yt.transformMat3(Yt.create(),this.direction,f);this.direction=d;let m=Yt.transformMat3(Yt.create(),this.up,f);this.up=m,this.dirty=!0}rotate(t,e,r){this.rotation[0]+=t,this.rotation[1]+=e,this.rotation[2]+=r;let i=Ht.identity(Ht.create());Ht.rotate(i,i,Math.radian(this.rotation[0]),[0,1,0]);let o=Ht.identity(Ht.create());Ht.rotate(o,o,Math.radian(this.rotation[2]),[0,0,-1]);let s=Ht.identity(Ht.create());Ht.rotate(s,s,Math.radian(this.rotation[1]),[1,0,0]);let n=Ht.identity(Ht.create());Ht.multiply(n,n,i),Ht.multiply(n,n,o),Ht.multiply(n,n,s);let a=Xt.fromMat4(Xt.create(),n),l=Yt.transformMat3(Yt.create(),[0,0,-1],a);this.direction=l;let h=Yt.transformMat3(Yt.create(),[0,1,0],a);this.up=h,this.dirty=!0}lookAt(t){let e=Yt.normalize(Yt.create(),Yt.subtract(Yt.create(),this.position,t)),r=Yt.normalize(Yt.create(),Yt.cross(Yt.create(),this.up,e)),i=Yt.normalize(Yt.create(),Yt.cross(Yt.create(),e,r)),o=Ht.fromValues(r[0],r[1],r[2],0,i[0],i[1],i[2],0,e[0],e[1],e[2],0,this.position[0],this.position[1],this.position[2],1);return this.transformMatrix=o,o}moveForward(t){let e=Ht.create();Ht.identity(e),Ht.translate(e,e,[0,0,t]),Ht.multiply(this.transformMatrix,this.transformMatrix,e),this.setPositionSync()}moveRight(t){let e=Ht.create();Ht.identity(e),Ht.translate(e,e,[t,0,0]),Ht.multiply(this.transformMatrix,this.transformMatrix,e),this.setPositionSync()}moveUp(t){let e=Ht.create();Ht.identity(e),Ht.translate(e,e,[0,t,0]),Ht.multiply(this.transformMatrix,this.transformMatrix,e),this.setPositionSync()}setPositionSync(){this.position[0]=this.transformMatrix[12],this.position[1]=this.transformMatrix[13],this.position[2]=this.transformMatrix[14]}setRotationSync(){this.right[0]=this.transformMatrix[0],this.right[1]=this.transformMatrix[1],this.right[2]=this.transformMatrix[2],this.up[0]=this.transformMatrix[4],this.up[1]=this.transformMatrix[5],this.up[2]=this.transformMatrix[6],this.direction[0]=-this.transformMatrix[8],this.direction[1]=-this.transformMatrix[9],this.direction[2]=-this.transformMatrix[10]}translate(t,e,r){this.position[0]+=t,this.position[1]+=e,this.position[2]+=r,this.dirty=!0}setPosition(t,e,r){this.position[0]=t,this.position[1]=e,this.position[2]=r,this.dirty=!0}getModelViewMatrix(){let t=this.getTransformMatrix(),e=Ht.create();return Ht.invert(e,t),e}getTransformMatrix(){return this.transformMatrix&&!this.dirty||(this.calcRight(),this.transformMatrix=Ht.fromValues(this.right[0],this.right[1],this.right[2],0,this.up[0],this.up[1],this.up[2],0,-this.direction[0],-this.direction[1],-this.direction[2],0,this.position[0],this.position[1],this.position[2],1)),this.transformMatrix}calcRight(){this.right=Yt.cross(this.right,this.direction,this.up)}getRotationMatrix(){return this.rotationMatrix=Ht.clone(this.transformMatrix),this.rotationMatrix[12]=0,this.rotationMatrix[13]=0,this.rotationMatrix[14]=0,this.rotationMatrix}getNormalMatrix(){let t=Ht.create(),e=this.getModelViewMatrix();return Ht.invert(e,e),Ht.transpose(t,e),t[3]=0,t[7]=0,t[11]=0,t}getViewRay(t,e){const r=Math.radian(this.fovyDegree);let i=t.width/t.height,o=Math.tan(r/2),s=2*o*e,n=s*i,a=Yt.fromValues(n*(t.x-.5),s*(t.y-.5),-e);return a}}r(8675),r(3462);const{vec3:qt}=self.glMatrix;class Jt{constructor(t,e,r,i,o){(0,bt.Z)(this,"gl",void 0),(0,bt.Z)(this,"frameBuffer",void 0),(0,bt.Z)(this,"depthBuffer",void 0),(0,bt.Z)(this,"texture",void 0),(0,bt.Z)(this,"height",void 0),this.gl=t,this.canvas=e,this.shaderInfo=r,this.frameBuffer=t.createFramebuffer(),this.depthBuffer=t.createRenderbuffer(),this.texture=t.createTexture(),this.options=i,this.globalOptions=o,this.init()}init(){const t=this.gl,e=this.canvas;if(this.textureType=this.options?.textureType?this.options.textureType:0,this.clearColor=this.options?.clearColor?this.options.clearColor:qt.fromValues(1,1,1),this.name=this.options?.name?this.options.name:"Untitled FrameBuffer",this.width=new Int32Array([this.options?.width?this.options.width:e.width]),this.height=new Int32Array([this.options?.height?this.options.height:e.height]),t.activeTexture(t.TEXTURE0),t.bindTexture(t.TEXTURE_2D,this.texture),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.LINEAR),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.LINEAR),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),t.texImage2D(t.TEXTURE_2D,0,t.RGBA,this.width[0],this.height[0],0,t.RGBA,t.UNSIGNED_BYTE,null),t.bindFramebuffer(t.FRAMEBUFFER,this.frameBuffer),t.bindRenderbuffer(t.RENDERBUFFER,this.depthBuffer),t.renderbufferStorage(t.RENDERBUFFER,t.DEPTH_COMPONENT16,this.width[0],this.height[0]),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.RENDERBUFFER,this.depthBuffer),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,this.texture,0),t.checkFramebufferStatus(t.FRAMEBUFFER)!==t.FRAMEBUFFER_COMPLETE)throw new Error("Incomplete frame buffer object.");t.bindFramebuffer(t.FRAMEBUFFER,null)}clear(){const t=this.gl;t.bindFramebuffer(t.FRAMEBUFFER,this.frameBuffer),t.clearColor(this.clearColor[0],this.clearColor[1],this.clearColor[2],1),t.clear(t.COLOR_BUFFER_BIT|t.DEPTH_BUFFER_BIT),t.bindFramebuffer(t.FRAMEBUFFER,null)}bind(t=this.shaderInfo){const e=this.gl;e.uniform1i(t.uniformLocations.textureType,this.textureType),e.bindFramebuffer(e.FRAMEBUFFER,this.frameBuffer)}unbind(){const t=this.gl;t.bindFramebuffer(t.FRAMEBUFFER,null)}getNormal(t,e){const r=this.gl;r.bindFramebuffer(r.FRAMEBUFFER,this.frameBuffer);const i=new Uint8Array(4);r.bindTexture(r.TEXTURE_2D,this.texture),r.readPixels(t,e,1,1,r.RGBA,r.UNSIGNED_BYTE,i),r.bindFramebuffer(r.FRAMEBUFFER,null);const o=new Float32Array([i[0]/255,i[1]/255,i[2]/255,i[3]/255]);return this.decodeNormal(o)}getColor(t,e){const r=this.gl;r.bindFramebuffer(r.FRAMEBUFFER,this.frameBuffer);const i=new Uint8Array(4);return r.bindTexture(r.TEXTURE_2D,this.texture),r.readPixels(t,e,1,1,r.RGBA,r.UNSIGNED_BYTE,i),r.bindFramebuffer(r.FRAMEBUFFER,null),this.convertColorToId(i)}getDepth(t,e){const r=this.gl;r.bindFramebuffer(r.FRAMEBUFFER,this.frameBuffer);const i=new Uint8Array(4);r.bindTexture(r.TEXTURE_2D,this.texture),r.readPixels(t,e,1,1,r.RGBA,r.UNSIGNED_BYTE,i),r.bindFramebuffer(r.FRAMEBUFFER,null);const o=new Float32Array([i[0]/255,i[1]/255,i[2]/255,i[3]/255]),s=this.unpackDepth(o)*this.globalOptions.far;return s}convertIdToColor(t){const e=(t,e)=>Math.floor(t/e)%256/255;return[e(t,16777216),e(t,65536),e(t,256),e(t,1)]}convertColorToId(t){return 16777216*t[0]+65536*t[1]+256*t[2]+t[3]}convertColor255ToId(t){return 16777216*t[0]*255+65536*t[1]*255+256*t[2]*255+255*t[3]}unpackDepth(t){return t[0]+1*t[1]/255+1*t[2]/65025+1*t[3]/16581375}decodeNormal(t){let e=qt.fromValues(2*t[0]-1,2*t[1]-1,2*t[2]-1);return qt.normalize(e,e),e}}class Qt{constructor(){(0,bt.Z)(this,"renderableObjects",void 0),(0,bt.Z)(this,"length",void 0),this.init()}init(){this.renderableObjects=[]}findById(t){return this.renderableObjects.find((e=>e.id===t))}set(t){this.renderableObjects=t}get(){return this.renderableObjects}push(t){this.renderableObjects.push(t)}pop(){return this.renderableObjects.pop()}size(){return this.renderableObjects.length}removeAll(){this.renderableObjects.length=0}}const te=["aVertexPosition","aVertexColor","aVertexSelectionColor","aVertexNormal","aTextureCoordinate"],ee=["uModelViewMatrix","uProjectionMatrix","uOrthographicMatrix","uObjectMatrix","uRotationMatrix","uNormalMatrix","uPointSize","uNearFar","uPositionType","uTexture","uTextureType"],re="\n  attribute vec3 aVertexPosition;\n  attribute vec4 aVertexColor;\n  attribute vec4 aVertexSelectionColor;\n  attribute vec3 aVertexNormal;\n  attribute vec2 aTextureCoordinate;\n  \n  uniform mat4 uModelViewMatrix;\n  uniform mat4 uProjectionMatrix;\n  uniform mat4 uOrthographicMatrix;\n  uniform mat4 uObjectMatrix;\n  uniform mat4 uRotationMatrix;\n  uniform mat4 uNormalMatrix;\n  uniform float uPointSize;\n  uniform vec2 uNearFar;\n  uniform int uPositionType; // 1: plane, 2: depth, basic\n\n  varying vec4 vColor;\n  varying vec4 vSelectionColor;\n  varying vec3 vTransformedNormal;\n  varying vec2 vTextureCoordinate;\n  varying float vDepth;\n\n  vec4 getOrthoPosition() {\n    vec4 transformedPosition = uObjectMatrix * vec4(aVertexPosition, 1.0);\n    vec4 orthoPosition = uModelViewMatrix * vec4(transformedPosition.xyz, 1.0);\n    return orthoPosition;\n  }\n  vec3 getRotatedNormal() {\n    vec3 rotatedModelNormal = (uRotationMatrix * vec4(aVertexNormal, 1.0)).xyz;\n    vec3 rotatedNormal = normalize(uNormalMatrix * vec4(rotatedModelNormal, 1.0)).xyz;\n    return rotatedNormal;\n  }\n  float calcDepth(float zValue) {\n    return -(zValue / uNearFar.y);\n  }\n\n  void main(void) {\n    vColor = aVertexColor;\n    vSelectionColor = aVertexSelectionColor;\n    gl_PointSize = uPointSize;\n\n    vec4 orthoPosition = getOrthoPosition();\n    vTransformedNormal = getRotatedNormal();\n\n    vDepth = calcDepth(orthoPosition.z);\n    gl_Position = uProjectionMatrix * orthoPosition;\n    \n    vTextureCoordinate = aTextureCoordinate;\n  }\n",ie="\n  precision highp float;\n\n  varying vec4 vColor;\n  varying vec4 vSelectionColor;\n  varying vec2 vTextureCoordinate;\n  varying vec3 vTransformedNormal;\n  varying float vDepth;\n\n  uniform sampler2D uTexture;\n  uniform int uTextureType; // default : color, 1 : texture, 2 : reverseY, 3 : depth\n  \n  vec3 encodeNormal(in vec3 normal) {\n    return normal.xyz * 0.5 + 0.5;\n  }\n  vec3 decodeNormal(in vec3 normal){\n    return normal * 2.0 - 1.0;\n  }\n  vec4 packDepth(float depth) {\n    vec4 enc = vec4(1.0, 255.0, 65025.0, 16581375.0) * depth;\n    enc = fract(enc);\n    enc -= enc.yzww * vec4(1.0/255.0, 1.0/255.0, 1.0/255.0, 0.0);\n    return enc;\n  }\n\n  void main(void) {\n    if (uTextureType == 1) {\n      //gl_FragColor = vec4(vColor.xyz, vColor.a);\n      gl_FragColor = texture2D(uTexture, vec2(vTextureCoordinate.x, 1.0 - vTextureCoordinate.y));\n    } else if (uTextureType == 2) {\n      gl_FragColor = vec4(vSelectionColor.xyz, vSelectionColor.a);\n    } else if (uTextureType == 3) {\n      gl_FragColor = packDepth(vDepth);\n    } else if (uTextureType == 4) {\n      gl_FragColor = vec4(encodeNormal(vTransformedNormal), 1.0);\n    } else if (uTextureType == 5) {\n      gl_FragColor = vec4(vColor.xyz, vColor.a);\n    }  else {\n      gl_FragColor = vec4(vColor.xyz, vColor.a);\n    }\n  }\n",oe={attributes:te,uniforms:ee,vertexShaderSource:re,fragmentShaderSource:ie},{mat2:se,mat3:ne,mat4:ae,vec2:le,vec3:he,vec4:ue}=self.glMatrix;class ce{constructor(t,e){let r=t,i=e;this.getGl=()=>r,this.getCanvas=()=>r.canvas,this.getShader=()=>i,this.getShaderInfo=()=>i.shaderInfo}preprocess(){throw new Error("preprocess() is abstract method. Abstract methods must be overriding.")}process(){throw new Error("process() is abstract method. Abstract methods must be overriding.")}postprocess(){throw new Error("postprocess() is abstract method. Abstract methods must be overriding.")}}var fe=ce;const{mat2:de,mat3:me,mat4:be,vec2:pe,vec3:ge,vec4:xe}=self.glMatrix;class ve extends fe{constructor(t,e,r,i,o){super(t,e),(0,bt.Z)(this,"renderableList",void 0),(0,bt.Z)(this,"frameBufferObjs",void 0),this.camera=r,this.frameBufferObjs=i,this.renderableList=o}preprocess(){}process(t){const e=this.getGl(),r=this.getShader().shaderInfo;this.getShader().useProgram();let i=be.create();be.perspective(i,this.camera.fovyRadian,t.aspect,parseFloat(t.near),parseFloat(t.far));let o=this.camera.getModelViewMatrix(),s=this.camera.getNormalMatrix();e.uniformMatrix4fv(r.uniformLocations.projectionMatrix,!1,i),e.uniformMatrix4fv(r.uniformLocations.modelViewMatrix,!1,o),e.uniformMatrix4fv(r.uniformLocations.normalMatrix,!1,s),e.uniform2fv(r.uniformLocations.nearFar,pe.fromValues(parseFloat(t.near),parseFloat(t.far))),e.uniform1f(r.uniformLocations.pointSize,t.pointSize),e.uniform1i(r.uniformLocations.textureType,0),this.frameBufferObjs.forEach((t=>{t.clear()})),this.renderableList.get().forEach((t=>{void 0===t.getId()&&t.createRenderableObjectId(this.renderableList),t.render(e,r,this.frameBufferObjs)}))}postprocess(){}}var ye=ve;const Ee=["aVertexPosition","aTextureCoordinate"],Se=["uIsMain","uSsaoKernel","uScreenSize","uNoiseScale","uAspectRatio","uProjectionMatrix","uTangentOfHalfFovy","uNearFar","uMainTexture","uAlbedoTexture","uSelectionTexture","uNormalTexture","uDepthTexture","uNoiseTexture","uLightMapTexture","uCameraTransformMatrix","uSunModelViewMatrix","uOrthographicMatrix","uSunNormalMatrix","uEnableGlobalLight","uEnableEdge","uEnableSsao","uSelectedObjectId"],Be="\n  #pragma vscode_glsllint_stage : vert\n  attribute vec3 aVertexPosition;\n  attribute vec2 aTextureCoordinate;\n\n  varying vec2 vTextureCoordinate;\n  void main(void) {\n    vTextureCoordinate = aTextureCoordinate;\n    gl_Position = vec4(aVertexPosition.xy * 2.0 - 1.0, 0.0, 1.0);\n  }\n",Me="\n  #pragma vscode_glsllint_stage : frag\n  precision highp float;\n  \n  uniform int uIsMain;\n  uniform float uTangentOfHalfFovy;\n  uniform float uAspectRatio;\n\n  uniform vec2 uScreenSize;  \n  uniform vec2 uNearFar;\n  uniform vec2 uNoiseScale;\n  uniform mat4 uProjectionMatrix;\n  uniform mat4 uCameraTransformMatrix;\n  uniform mat4 uSunModelViewMatrix;\n  uniform mat4 uOrthographicMatrix;\n  uniform mat4 uSunNormalMatrix;\n\n  uniform sampler2D uMainTexture;\n  uniform sampler2D uAlbedoTexture;\n  uniform sampler2D uSelectionTexture;\n  uniform sampler2D uNormalTexture;\n  uniform sampler2D uDepthTexture;\n  uniform sampler2D uLightMapTexture;\n  uniform sampler2D uNoiseTexture;\n  uniform vec3 uSsaoKernel[16];\n\n  uniform int uEnableGlobalLight;\n  uniform int uEnableEdge;\n  uniform int uEnableSsao;\n  uniform float uSelectedObjectId;\n\n  varying vec2 vTextureCoordinate;\n  \n  const int kernelSize = 16;\n  const float fKernelSize = float(kernelSize);\n\n  vec4 decodeNormal(in vec4 normal) {\n    return vec4(normal.xyz * 2.0 - 1.0, normal.w);\n  }\n  float convertColorToId(vec4 color) {\n    return (color.r * 255.0 * 16777216.0) + (color.g * 255.0 * 65536.0) + (color.b * 255.0 * 256.0) + (color.a * 255.0);\n  }\n  float unpackDepth(vec4 packedDepth) {\n    return dot(packedDepth, vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0));\n  }\n  vec3 getViewRay(vec2 tc, in float relFar) {\n    float hfar = 2.0 * uTangentOfHalfFovy * relFar;\n    float wfar = hfar * uAspectRatio;    \n    vec3 ray = vec3(wfar * (tc.x - 0.5), hfar * (tc.y - 0.5), -relFar);    \n    return ray;\n  }\n  vec4 getAlbedo(vec2 screenPos) {\n    return texture2D(uAlbedoTexture, screenPos);\n  }\n  vec4 getSelection(vec2 screenPos) {\n    return texture2D(uSelectionTexture, screenPos);\n  }\n  vec4 getNormal(vec2 screenPos) {\n    return texture2D(uNormalTexture, screenPos);\n  }\n  vec4 getDepth(vec2 screenPos) {\n    //return texture2D(uLightMapTexture, screenPos);\n    return texture2D(uDepthTexture, screenPos);\n  }\n\n  float getOcclusion(vec3 origin, vec3 rotatedKernel, float radius) {\n    float resultOcclusion = 1.0;\n    vec3 sample = origin + (rotatedKernel * radius);\n    vec4 offset = uProjectionMatrix * vec4(sample, 1.0);\n    vec3 offsetCoord = vec3(offset.xyz);\t\t\t\t\n    offsetCoord.xyz /= offset.w;\n    offsetCoord.xyz = offsetCoord.xyz * 0.5 + 0.5;\n    if ((abs(offsetCoord.x) > 1.0 || abs(offsetCoord.y) > 1.0) && (abs(offsetCoord.x) < 0.0 || abs(offsetCoord.y) < 0.0)) {\n        resultOcclusion = 0.0;\n    } else {\n      float depthBufferValue = unpackDepth(texture2D(uDepthTexture, offsetCoord.xy));\n      float sampleZ = -sample.z;\n      float bufferZ = depthBufferValue * uNearFar.y;\n      float zDiff = abs(bufferZ - sampleZ);\n      if (zDiff < radius) {\n        if (bufferZ < sampleZ) {\n          resultOcclusion = 0.0;\n        }\n      }\n    }\n    return resultOcclusion;\n  }\n\n  vec4 getSSAO(in vec2 screenPos) {\n    float occlusionA = 0.0;\n    float occlusionB = 0.0;\n    float occlusionC = 0.0;\n\n    float linearDepth = unpackDepth(getDepth(screenPos));\n    float originDepth = linearDepth * uNearFar.y;\n    vec3 origin = getViewRay(screenPos, originDepth);\n    vec3 normal = decodeNormal(texture2D(uNormalTexture, screenPos)).xyz;\n\n    vec3 rvec = texture2D(uNoiseTexture, screenPos.xy * uNoiseScale).xyz * 2.0 - 1.0;\n\t\tvec3 tangent = normalize(rvec - normal * dot(rvec, normal));\n\t\tvec3 bitangent = normalize(cross(normal, tangent));\n\t\tmat3 tbn = mat3(tangent, bitangent, normal);   \n\t\tfor (int i = 0; i < kernelSize; i++) {    \t\n      vec3 rotatedKernel = tbn * vec3(uSsaoKernel[i].x, uSsaoKernel[i].y, uSsaoKernel[i].z);\n      occlusionA += getOcclusion(origin, rotatedKernel, 8.5);\n      occlusionB += getOcclusion(origin, rotatedKernel, 16.0);\n      occlusionC += getOcclusion(origin, rotatedKernel, 32.0);\n    }\n\n    float tolerance = 0.80;\n    float result = (occlusionA + occlusionB + occlusionC) / (fKernelSize * 3.0);\n    if (result > tolerance) {\n      result = 1.0;\n    }\n    //return result;\n\n    return vec4(occlusionA / fKernelSize, occlusionB / fKernelSize, occlusionC / fKernelSize, 1.0);\n  }\n\n  float compareNormalOffset(in vec4 normalA, in vec4 normalB) {\n    float result = 0.0; \n    result += abs(normalA.x - normalB.x);\n    result += abs(normalA.y - normalB.y);\n    result += abs(normalA.z - normalB.z);\n    return result;\n  }\n\n  bool isEdge(vec2 screenPos) {\n    float width = 1.0 / uScreenSize.x;\n\t  float height = 1.0 / uScreenSize.y;\n    vec2 rightPos = vec2(screenPos.x + width, screenPos.y);\n    vec2 bottomPos = vec2(screenPos.x, screenPos.y + height);\n    vec2 crossPos = vec2(screenPos.x + width, screenPos.y + height);\n    vec2 leftPos = vec2(screenPos.x - width, screenPos.y);\n    \n    float selection = convertColorToId(getSelection(screenPos));\n    float selectionRight = convertColorToId(getSelection(rightPos));\n    float selectionBottom = convertColorToId(getSelection(bottomPos));\n    float selectionCross = convertColorToId(getSelection(crossPos));\n    float selectionLeft = convertColorToId(getSelection(leftPos));\n\n    vec4 normal = decodeNormal(getNormal(screenPos));\n    vec4 normalRight = decodeNormal(getNormal(rightPos));\n    vec4 normalBottom = decodeNormal(getNormal(bottomPos));\n    vec4 normalCross = decodeNormal(getNormal(crossPos));\n\n    float compareOffset = 0.3;\n    bool normalCompareRight = compareOffset < compareNormalOffset(normal, normalRight);\n    bool normalCompareBottom = compareOffset < compareNormalOffset(normal, normalBottom);\n    bool normalCompareCross = compareOffset < compareNormalOffset(normal, normalCross);\n\n    bool isEdgeByNormalCompare = normalCompareRight || normalCompareBottom || normalCompareCross;\n    bool isEdgeBySelection = selection != selectionBottom || selection != selectionRight || selection != selectionCross || selection != selectionLeft;\n\n    return isEdgeByNormalCompare || isEdgeBySelection;\n  }\n\n  bool isShadow(vec2 screenPos) {\n    bool result = false;\n\n    float linearDepth = unpackDepth(getDepth(screenPos));\n    float originDepth = linearDepth * uNearFar.y;\n    vec3 positionCC = getViewRay(screenPos, originDepth);\n    vec4 positionWC = uCameraTransformMatrix * vec4(positionCC, 1.0);\n    vec4 positionSC = uSunModelViewMatrix * vec4(positionWC.xyz, 1.0);\n\n    positionSC = uOrthographicMatrix * positionSC;\n    vec3 positionUnitarySCaux = positionSC.xyz / positionSC.w; // Range : -1.0 ~ 1.0\n    vec3 positionUnitarySC = positionUnitarySCaux * 0.5 + 0.5; // Range = 0.0 ~ 1.0\n\n    if (positionUnitarySC.z > 0.9999) {\n      return result;\n    }\n    if (positionUnitarySC.x > 1.0 || positionUnitarySC.x < 0.0 || positionUnitarySC.y > 1.0 || positionUnitarySC.y < 0.0) {\n      return result;\n    }\n\n    vec4 fromDepthSunTextureVec4 = texture2D(uLightMapTexture, positionUnitarySC.xy) ;\n    fromDepthSunTextureVec4 = fromDepthSunTextureVec4 * 1.001;\n    float fromDepthSunTexture = unpackDepth(fromDepthSunTextureVec4);\n\n    result = positionUnitarySC.z > fromDepthSunTexture;\n    return result;\n  }\n\n  void main(void) {\n    float width = 1.0 / uScreenSize.x;\n\t  float height = 1.0 / uScreenSize.y;\n    vec2 screenPos = vec2(gl_FragCoord.x / uScreenSize.x, gl_FragCoord.y / uScreenSize.y);\n\n    vec4 albedo = getAlbedo(screenPos);\n    vec4 normal = decodeNormal(getNormal(screenPos));\n\n    vec4 selectionColor = getSelection(screenPos);\n    float selection = convertColorToId(getSelection(screenPos));\n\n    vec3 ambientLight = vec3(0.3, 0.3, 0.3);\n    vec3 directionalLightColor = vec3(0.9, 0.9, 0.9);\n    vec3 directionalVector = normalize(vec3(0.6, 0.6, 0.9));\n    float directional = max(dot(normal.xyz, directionalVector), 0.0);\n    vec3 vLighting = ambientLight + (directionalLightColor * directional);\n\n    if (uIsMain == 1) {\n      vec3 result = albedo.xyz;\n      \n      if (uEnableSsao == 1) {\n        //float ssaoResult = getSSAO(screenPos);\n        float tolerance = 0.80;\n        vec4 ssaoResult = getSSAO(screenPos);\n\n        if (ssaoResult.x < tolerance) {\n          result = result * ssaoResult.x;\n        }\n        if (ssaoResult.y < tolerance) {\n          result = result * (ssaoResult.y + 0.1);\n        }\n        if (ssaoResult.z < tolerance) {\n          result = result * (ssaoResult.z + 0.2);\n        }\n        //result = result * ssaoResult;\n      }\n\n      //result = result * vLighting;\n      if (uEnableGlobalLight == 1 && isShadow(screenPos)) {\n        result = result * 0.5;\n      }\n\n      if (selection == uSelectedObjectId) {\n        result.b = result.b * 1.5;\n      }\n      if (uEnableEdge == 1 && isEdge(screenPos)) {\n        result = result * 0.5;\n        if (selection == uSelectedObjectId) {\n          result.b = 1.0;\n        }\n      }\n      gl_FragColor = vec4(result, 1.0);\n    } else {\n      vec4 textureColor = texture2D(uMainTexture, vTextureCoordinate);\n      gl_FragColor = vec4(textureColor.rgb, textureColor.a);\n    }\n  }\n",Oe={attributes:Ee,uniforms:Se,vertexShaderSource:Be,fragmentShaderSource:Me};class Te{constructor(t){(0,bt.Z)(this,"gl",void 0),(0,bt.Z)(this,"buffers",{}),this.gl=t}get buffers(){return this.buffers}init(){const t={};this.buffers=t}bindBuffer(t,e=3,r){let i=this.gl;i.bindBuffer(i.ARRAY_BUFFER,t),i.vertexAttribPointer(r,e,i.FLOAT,!1,0,0)}createBuffer(t){let e=this.gl,r=e.createBuffer();return e.bindBuffer(e.ARRAY_BUFFER,r),e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW),r}createIndexBuffer(t){let e=this.gl,r=e.createBuffer();return e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,r),e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW),r}createTexture(t){let e=this.gl,r=e.CLAMP_TO_EDGE,i=e.createTexture();return e.bindTexture(e.TEXTURE_2D,i),e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL,!1),e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,t),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,r),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,r),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST_MIPMAP_NEAREST),e.generateMipmap(e.TEXTURE_2D),i}createNoiseTexture(){let t=new Uint8Array(64);for(var e=0;e<4;e++)for(var r=0;r<4;r++)t[4*(4*e+r)+0]=Math.floor(255*Math.random()),t[4*(4*e+r)+1]=Math.floor(255*Math.random()),t[4*(4*e+r)+2]=Math.floor(255*Math.random()),t[4*(4*e+r)+3]=Math.floor(255*Math.random());let i=this.gl,o=i.createTexture();return i.bindTexture(i.TEXTURE_2D,o),i.texImage2D(i.TEXTURE_2D,0,i.RGBA,4,4,0,i.RGBA,i.UNSIGNED_BYTE,t),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_MAG_FILTER,i.LINEAR),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_MIN_FILTER,i.LINEAR),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_WRAP_S,i.REPEAT),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_WRAP_T,i.REPEAT),i.bindTexture(i.TEXTURE_2D,null),o}convertFaceColor(t){let e=[];return t.forEach((t=>{e=e.concat(t,t,t,t)})),e}}const{mat2:we,mat3:Ce,mat4:Ae,vec2:Re,vec3:Fe,vec4:Ve}=self.glMatrix;class Le{constructor(){if((0,bt.Z)(this,"id",void 0),(0,bt.Z)(this,"name",void 0),(0,bt.Z)(this,"buffer",void 0),(0,bt.Z)(this,"position",void 0),(0,bt.Z)(this,"rotation",void 0),(0,bt.Z)(this,"color",void 0),(0,bt.Z)(this,"selectionColor",void 0),(0,bt.Z)(this,"transformMatrix",void 0),(0,bt.Z)(this,"rotationMatrix",void 0),this.constructor===Le)throw new Error("Renderable is abstract class. Created an instance of an abstract class.");this.name="Untitled",this.position=Fe.fromValues(0,0,0),this.rotation=Fe.fromValues(0,0,0),this.color=Ve.fromValues(.4,.4,.4,1),this.selectionColor=Ve.fromValues(0,0,0,1),this.dirty=!1}render(){throw new Error("render() is abstract method. Abstract methods must be overriding.")}getBuffer(){throw new Error("render() is abstract method. Abstract methods must be overriding.")}getTransformMatrix(){if(!this.transformMatrix||!0===this.dirty){let t=Ae.create();Ae.identity(t),Ae.rotate(t,t,Math.radian(this.rotation[1]),Fe.fromValues(0,1,0)),Ae.rotate(t,t,Math.radian(this.rotation[2]),Fe.fromValues(0,0,1)),Ae.rotate(t,t,Math.radian(this.rotation[0]),Fe.fromValues(1,0,0)),t[12]=this.position[0],t[13]=this.position[1],t[14]=this.position[2],this.transformMatrix=t}return this.transformMatrix}getRotationMatrix(){return this.rotationMatrix&&!0!==this.dirty||(this.rotationMatrix=Ae.clone(this.getTransformMatrix()),this.rotationMatrix[12]=0,this.rotationMatrix[13]=0,this.rotationMatrix[14]=0),this.rotationMatrix}getId(){return this.id}calcNormal(t,e,r){let i=Fe.create(),o=Fe.create();i=Fe.subtract(i,e,t),o=Fe.subtract(o,r,e);let s=Fe.create();return Fe.cross(s,i,o),Fe.normalize(s,s),s}intersection(t,e,r,i){let o=this.dot(this.cross(t,e,r),this.cross(t,e,i)),s=this.dot(this.cross(r,i,t),this.cross(r,i,e));return o<=0&&s<=0}cross(t,e,r){let i=Fe.subtract(Fe.create(),e,t),o=Fe.subtract(Fe.create(),r,e);return Fe.cross(Fe.create(),i,o)}dot(t,e){return Fe.dot(t,e)}normal(t,e,r){let i=this.cross(t,e,r);return Fe.normalize(i,i)}getMinMax(t){let e=Number.MAX_SAFE_INTEGER,r=Number.MAX_SAFE_INTEGER,i=Number.MIN_SAFE_INTEGER,o=Number.MIN_SAFE_INTEGER;return t.forEach((t=>{e=t[0]<e?t[0]:e,r=t[1]<r?t[1]:r,i=t[0]>i?t[0]:i,o=t[1]>o?t[1]:o})),{minx:e,miny:r,maxx:i,maxy:o}}convertIdToColor(t=this.id){const e=(t,e)=>Math.floor(t/e)%256/255;return Ve.fromValues(e(t,16777216),e(t,65536),e(t,256),e(t,1))}convertColorToId(t){return 16777216*t[0]+65536*t[1]+256*t[2]+t[3]}createRenderableObjectId(t){let e=this.id;while(void 0===e){const r=1e7;let i=Math.ceil(Math.random()*r),o=t.get().find((t=>t.id==i));o||(e=i,this.id=i,this.selectionColor=this.convertIdToColor(i))}return e}}const{vec3:Pe}=self.glMatrix;class _e{constructor(t,e,r){(0,bt.Z)(this,"positions",void 0),(0,bt.Z)(this,"normal",void 0),(0,bt.Z)(this,"plane",void 0),this.positions=[t,e,r],this.getNormal()}get(t){return this.positions[t]}getNormal(){if(void 0===this.normal){let t=Pe.subtract(Pe.create(),this.positions[1],this.positions[0]),e=Pe.subtract(Pe.create(),this.positions[2],this.positions[1]),r=Pe.cross(Pe.create(),t,e);Pe.normalize(r,r),this.normal=r}return this.normal}getPlane(){return this.plane||(this.plane=new yt(this.positions[0],this.normal)),this.plane}}const{mat2:Ne,mat3:De,mat4:Ge,vec2:Ie,vec3:je,vec4:Ue}=self.glMatrix;class ze extends Le{constructor(t,e){super(),(0,bt.Z)(this,"coordinates",void 0),(0,bt.Z)(this,"texture",void 0),(0,bt.Z)(this,"forDebug",void 0),(0,bt.Z)(this,"uniformLocation",void 0),this.forDebug=!1,this.init(t,e)}init(t,e){this.length=0,this.name="Untitled Screen",t&&(this.coordinates=t),e?.position&&(this.position=je.set(this.position,e.position.x,e.position.y,e.position.z)),e?.color&&(this.color=Ue.set(this.color,e?.color.r,e?.color.g,e?.color.b,e?.color.a)),e?.texture&&(this.texture=e.texture),e?.forDebug&&(this.forDebug=e.forDebug),e?.uniformLocation&&(this.uniformLocation=e.uniformLocation)}render(t,e){let r=this.getBuffer(t,!1);t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,r.indicesGlBuffer),t.bindTexture(t.TEXTURE_2D,r.texture),t.enableVertexAttribArray(e.attributeLocations.textureCoordinate),r.bindBuffer(r.textureGlBuffer,2,e.attributeLocations.textureCoordinate),t.enableVertexAttribArray(e.attributeLocations.vertexPosition),r.bindBuffer(r.postionsGlBuffer,3,e.attributeLocations.vertexPosition),t.drawElements(t.TRIANGLES,r.indicesLength,t.UNSIGNED_SHORT,0),t.uniform1i(e.uniformLocations.textureType,0)}getBuffer(t){if(this.dirty=void 0===this.buffer||this.length!=this.coordinates.length,!0===this.dirty){this.buffer=new Te(t);let e=this.color,r=this.selectionColor,i=[],o=[],s=[],n=[],a=[],l=this.coordinates.map((t=>je.fromValues(t[0],t[1],this.position[2]))),h=this.getMinMax(l),u=new _e(l[0],l[2],l[3]),c=new _e(l[0],l[1],l[2]),f=[u,c];f.forEach((t=>{let l=t.positions,u=t.getNormal();l.forEach((t=>{t.forEach((t=>{s.push(t)})),u.forEach((t=>n.push(t))),e.forEach((t=>i.push(t))),r.forEach((t=>o.push(t)));let l=h.maxx-h.minx,c=h.maxy-h.miny;a.push((t[0]-h.minx)/l),a.push((t[1]-h.miny)/c)}))})),this.length=this.coordinates.length;let d=new Uint16Array(s.length/3);this.buffer.indicesVBO=d.map(((t,e)=>e)),this.buffer.positionsVBO=new Float32Array(s),this.buffer.colorVBO=new Float32Array(i),this.buffer.selectionColorVBO=new Float32Array(o),this.buffer.normalVBO=new Float32Array(n),this.buffer.textureVBO=new Float32Array(a),this.buffer.texture=this.texture,this.buffer.postionsGlBuffer=this.buffer.createBuffer(this.buffer.positionsVBO),this.buffer.colorGlBuffer=this.buffer.createBuffer(this.buffer.colorVBO),this.buffer.selectionColorGlBuffer=this.buffer.createBuffer(this.buffer.selectionColorVBO),this.buffer.normalGlBuffer=this.buffer.createBuffer(this.buffer.normalVBO),this.buffer.indicesGlBuffer=this.buffer.createIndexBuffer(this.buffer.indicesVBO),this.buffer.textureGlBuffer=this.buffer.createBuffer(this.buffer.textureVBO),this.buffer.indicesLength=this.buffer.indicesVBO.length,this.dirty=!1}return this.buffer}}const{mat2:Ze,mat3:ke,mat4:Xe,vec2:He,vec3:Ke,vec4:Ye}=self.glMatrix;class We extends fe{constructor(t,e,r,i,o){super(t,e),(0,bt.Z)(this,"screens",void 0),(0,bt.Z)(this,"frameBufferObjs",void 0),this.camera=r,this.frameBufferObjs=i,this.buffer=new Te(t),this.sun=o}preprocess(){const t=this.getShader().shaderInfo;this.screens=[],this.mainScreen=new ze([[0,0],[1,0],[1,1],[0,1]],{reverse:!0,forDebug:!1,uniformLocation:t.uniformLocations.mainTexture}),this.albedoScreen=new ze([[.85,.85],[1,.85],[1,1],[.85,1]],{reverse:!0,forDebug:!0,uniformLocation:t.uniformLocations.albedoTexture}),this.selectionScreen=new ze([[.85,.7],[1,.7],[1,.85],[.85,.85]],{reverse:!0,forDebug:!0,uniformLocation:t.uniformLocations.selectionTexture}),this.normalScreen=new ze([[.85,.55],[1,.55],[1,.7],[.85,.7]],{reverse:!0,forDebug:!0,uniformLocation:t.uniformLocations.normalTexture}),this.depthScreen=new ze([[.85,.4],[1,.4],[1,.55],[.85,.55]],{reverse:!0,forDebug:!0,uniformLocation:t.uniformLocations.depthTexture}),this.lightMapDepthScreen=new ze([[.92,.25],[1,.25],[1,.4],[.92,.4]],{reverse:!0,forDebug:!0,uniformLocation:t.uniformLocations.lightMapTexture}),this.screens.push(this.mainScreen),this.screens.push(this.albedoScreen),this.screens.push(this.selectionScreen),this.screens.push(this.normalScreen),this.screens.push(this.depthScreen),this.screens.push(this.lightMapDepthScreen),this.noiseTexture=this.buffer.createNoiseTexture()}process(t){const e=this.getGl(),r=this.getCanvas(),i=this.getShader().shaderInfo;this.getShader().useProgram(),e.viewport(0,0,r.width,r.height),e.enable(e.CULL_FACE),e.frontFace(e.CCW),e.lineWidth(t.lineWidth);const o=Math.radian(this.camera.fovyDegree);let s=Math.tan(o/2),n=Xe.create();Xe.ortho(n,-8192,8192,-8192,8192,0,8192),e.uniformMatrix4fv(i.uniformLocations.orthographicMatrix,!1,n);let a=Xe.create();Xe.perspective(a,o,t.aspect,parseFloat(t.near),parseFloat(t.far)),e.uniformMatrix4fv(i.uniformLocations.projectionMatrix,!1,a);let l=this.camera.getTransformMatrix();e.uniformMatrix4fv(i.uniformLocations.cameraTransformMatrix,!1,l);let h=this.sun.getModelViewMatrix();e.uniformMatrix4fv(i.uniformLocations.sunModelViewMatrix,!1,h);let u=this.sun.getNormalMatrix();e.uniformMatrix4fv(i.uniformLocations.sunNormalMatrix,!1,u),e.uniform1i(i.uniformLocations.isMain,0),e.uniform1f(i.uniformLocations.selectedObjectId,t.selectedObjectId),e.uniform1f(i.uniformLocations.aspectRatio,t.aspect),e.uniform1i(i.uniformLocations.enableSsao,t.enableSsao?1:0),e.uniform1i(i.uniformLocations.enableEdge,t.enableEdge?1:0),e.uniform1i(i.uniformLocations.enableGlobalLight,t.enableGlobalLight?1:0),e.uniform1f(i.uniformLocations.tangentOfHalfFovy,s),e.uniform2fv(i.uniformLocations.screenSize,He.fromValues(r.width,r.height)),e.uniform2fv(i.uniformLocations.nearFar,He.fromValues(parseFloat(t.near),parseFloat(t.far))),e.uniform2fv(i.uniformLocations.noiseScale,He.fromValues(r.width/4,r.height/4));const c=[.33,0,.85,.25,.3,.5,.1,.3,.85,-.15,.2,.85,-.33,.05,.6,-.1,-.15,.85,-.05,-.32,.25,.2,-.15,.85,.6,0,.55,.5,.6,.45,-.01,.7,.35,-.33,.5,.45,-.45,0,.55,-.65,-.5,.7,0,-.5,.55,.33,.3,.35],f=new Float32Array(c);e.uniform3fv(i.uniformLocations.ssaoKernel,f),this.screens.forEach(((t,r)=>{const i=e["TEXTURE"+r];e.activeTexture(i),e.bindTexture(e.TEXTURE_2D,t.texture),e.uniform1i(t.uniformLocation,r)})),e.activeTexture(e["TEXTURE"+this.screens.length]),e.bindTexture(e.TEXTURE_2D,this.noiseTexture),e.uniform1i(i.uniformLocations.noiseTexture,this.screens.length)}postprocess(t){const e=this.getGl(),r=this.getShader().shaderInfo;e.disable(e.DEPTH_TEST),e.uniform1i(r.uniformLocations.isMain,0),this.screens.forEach(((i,o)=>{0==o?e.uniform1i(r.uniformLocations.isMain,1):e.uniform1i(r.uniformLocations.isMain,0),e.activeTexture(e.TEXTURE0),e.bindTexture(e.TEXTURE_2D,i.texture),i.texture=this.frameBufferObjs[o].texture,!t.debugMode&&i.forDebug||i.render(e,r)})),e.enable(e.DEPTH_TEST)}}var $e=We;const qe=["aVertexPosition","aVertexColor","aVertexSelectionColor","aVertexNormal","aTextureCoordinate"],Je=["uModelViewMatrix","uProjectionMatrix","uOrthographicMatrix","uObjectMatrix","uRotationMatrix","uNormalMatrix","uPointSize","uPositionType","uNearFar","uTexture","uTextureType"],Qe="\n  attribute vec3 aVertexPosition;\n  attribute vec4 aVertexColor;\n  attribute vec4 aVertexSelectionColor;\n  attribute vec3 aVertexNormal;\n  attribute vec2 aTextureCoordinate;\n  \n  uniform mat4 uModelViewMatrix;\n  uniform mat4 uProjectionMatrix;\n  uniform mat4 uOrthographicMatrix;\n  uniform mat4 uObjectMatrix;\n  uniform mat4 uRotationMatrix;\n  uniform mat4 uNormalMatrix;\n  uniform float uPointSize;\n  uniform vec2 uNearFar;\n\n  varying vec4 vColor;\n  varying vec4 vSelectionColor;\n  varying vec3 vTransformedNormal;\n  varying float vDepth;\n\n  vec4 getOrthoPosition() {\n    vec4 transformedPosition = uObjectMatrix * vec4(aVertexPosition, 1.0);\n    vec4 orthoPosition = uModelViewMatrix * vec4(transformedPosition.xyz, 1.0);\n    return orthoPosition;\n  }\n  vec3 getRotatedNormal() {\n    vec3 rotatedModelNormal = (uRotationMatrix * vec4(aVertexNormal, 1.0)).xyz;\n    vec3 rotatedNormal = normalize(uNormalMatrix * vec4(rotatedModelNormal, 1.0)).xyz;\n    return rotatedNormal;\n  }\n  float calcDepth(float zValue) {\n    return -(zValue / uNearFar.y);\n  }\n\n  void main(void) {\n    vColor = aVertexColor;\n    vSelectionColor = aVertexSelectionColor;\n    gl_PointSize = uPointSize;\n\n    vec4 orthoPosition = getOrthoPosition();\n    vTransformedNormal = getRotatedNormal();\n\n    vDepth = calcDepth(orthoPosition.z);\n    gl_Position = uOrthographicMatrix * orthoPosition;\n  }\n",tr="\n  precision highp float;\n\n  varying vec4 vColor;\n  varying vec4 vSelectionColor;\n  varying vec3 vTransformedNormal;\n  varying float vDepth;\n\n  uniform sampler2D uTexture;\n  uniform int uTextureType;\n\n  vec4 packDepth(float depth) {\n    vec4 enc = vec4(1.0, 255.0, 65025.0, 16581375.0) * vDepth;\n    enc = fract(enc);\n    enc -= enc.yzww * vec4(1.0/255.0, 1.0/255.0, 1.0/255.0, 0.0);\n    return enc;\n  }\n  \n  void main(void) {\n    gl_FragColor = packDepth(vDepth);\n    //gl_FragColor = vec4(vColor.xyz, vColor.a);\n  }\n",er={attributes:qe,uniforms:Je,vertexShaderSource:Qe,fragmentShaderSource:tr},{mat2:rr,mat3:ir,mat4:or,vec2:sr,vec3:nr,vec4:ar}=self.glMatrix;class lr extends fe{constructor(t,e,r,i,o,s){super(t,e),(0,bt.Z)(this,"renderableList",void 0),(0,bt.Z)(this,"frameBufferObjs",void 0),this.camera=r,this.sun=s,this.frameBufferObjs=i,this.renderableList=o}preprocess(){}process(t){const e=this.getGl(),r=this.getShader().shaderInfo;this.getShader().useProgram(),e.viewport(0,0,8182,8182);let i=or.create();or.perspective(i,this.camera.fovyRadian,t.aspect,parseFloat(t.near),parseFloat(t.far));let o=or.create();or.ortho(o,-8192,8192,-8192,8192,0,8192),e.uniform2fv(r.uniformLocations.nearFar,sr.fromValues(0,8192));let s=this.sun.getModelViewMatrix();e.uniformMatrix4fv(r.uniformLocations.projectionMatrix,!1,i),e.uniformMatrix4fv(r.uniformLocations.modelViewMatrix,!1,s),e.uniformMatrix4fv(r.uniformLocations.orthographicMatrix,!1,o),this.frameBufferObjs.forEach((t=>{t.clear()})),this.renderableList.get().forEach((t=>{void 0===t.getId()&&t.createRenderableObjectId(this.renderableList),t.render(e,r,this.frameBufferObjs)}))}postprocess(){}}var hr=lr;const{mat2:ur,mat3:cr,mat4:fr,vec2:dr,vec3:mr,vec4:br}=self.glMatrix;Math.degree=t=>180*t/Math.PI,Math.radian=t=>t*Math.PI/180,Math.randomInt=()=>Math.round(10*Math.random()),Array.prototype.get=function(t){return this[this.loopIndex(t)]},Array.prototype.getPrev=function(t){return this[this.loopIndex(t-1)]},Array.prototype.getNext=function(t){return this[this.loopIndex(t+1)]},Array.prototype.loopIndex=function(t){return t<0?t%this.length+this.length:t%this.length};class pr{constructor(t,e={}){(0,bt.Z)(this,"gl",void 0),(0,bt.Z)(this,"shader",void 0),(0,bt.Z)(this,"buffer",void 0),(0,bt.Z)(this,"camera",void 0),(0,bt.Z)(this,"canvas",void 0),(0,bt.Z)(this,"shaderProcesses",void 0),(0,bt.Z)(this,"frameBufferObjs",void 0),(0,bt.Z)(this,"renderableObjectList",void 0),(0,bt.Z)(this,"globalOptions",void 0),(0,bt.Z)(this,"albedoFbo",void 0),(0,bt.Z)(this,"selectionFbo",void 0),(0,bt.Z)(this,"depthFbo",void 0),(0,bt.Z)(this,"normalFbo",void 0),this.frameBufferObjs=[],this.defaultFrameBufferObjs=[],this.lightMapFrameBufferObjs=[],this.renderableObjectList=new Qt,this.shaderProcesses=[],this.globalOptions=e,this.init(t)}init(t){console.log("Init Start WebGL.");let e="";try{if(this.canvas=t,t.getContext("webgl2")?(this.gl=t.getContext("webgl2"),e="webgl2"):t.getContext("webgl")?(this.gl=t.getContext("webgl"),e="webgl"):t.getContext("experimental-webgl")&&(this.gl=t.getContext("experimental-webgl"),e="experimental-webgl"),!this.gl)throw new Error("Unable to initialize WebGL. Your browser may not support it.")}catch(r){console.log("Unable to initialize WebGL. Your browser may not support it."),console.error(r)}console.log("Init Success "+e)}checkMultiRenders(){const t=this.gl.getExtension("WEBGL_draw_buffers");return t>-1}resizeCanvas(){const t=this.canvas,e=t.clientWidth,r=t.clientHeight,i=t.width!==e||t.height!==r;return i&&(t.width=e,t.height=r,this.frameBufferObjs.forEach((t=>{t.options.isNotInit||t.init()})),console.log("resizeCanvas")),this.globalOptions.aspect=t.width/t.height,i}startRender(){const t=this.gl;t.enable(t.DEPTH_TEST),t.depthFunc(t.LEQUAL),this.resizeCanvas(),this.defaultShader=new Nt(t),this.checkMultiRenders(),this.defaultShader.init(oe),this.defaultShaderInfo=this.defaultShader.shaderInfo,this.screenShader=new Nt(t),this.screenShader.init(Oe),this.screenShaderInfo=this.screenShader.shaderInfo,this.lightMapShader=new Nt(t),this.lightMapShader.init(er),this.lightMapShaderInfo=this.lightMapShader.shaderInfo,this.camera=new Zt({fovyDegree:this.globalOptions.fovyDegree}),this.sun=new $t({position:{x:0,y:0,z:4096}}),this.sun.rotationOrbit(.5,.8,mr.fromValues(0,0,0)),this.frameBufferObjs.push(this.getMainFbo()),this.frameBufferObjs.push(this.getAlbedoFbo()),this.frameBufferObjs.push(this.getSelectionFbo()),this.frameBufferObjs.push(this.getNormalFbo()),this.frameBufferObjs.push(this.getDepthFbo()),this.frameBufferObjs.push(this.getLightMapFbo()),this.defaultFrameBufferObjs=[],this.defaultFrameBufferObjs.push(this.getMainFbo()),this.defaultFrameBufferObjs.push(this.getAlbedoFbo()),this.defaultFrameBufferObjs.push(this.getSelectionFbo()),this.defaultFrameBufferObjs.push(this.getNormalFbo()),this.defaultFrameBufferObjs.push(this.getDepthFbo()),this.lightMapFrameBufferObjs.push(this.getLightMapFbo()),this.shaderProcesses.push(new ye(t,this.defaultShader,this.camera,this.defaultFrameBufferObjs,this.renderableObjectList)),this.shaderProcesses.push(new hr(t,this.lightMapShader,this.camera,this.lightMapFrameBufferObjs,this.renderableObjectList,this.sun)),this.shaderProcesses.push(new $e(t,this.screenShader,this.camera,this.frameBufferObjs,this.sun)),this.shaderProcesses.forEach((t=>{t.preprocess()})),this.render()}setOptions(){this.resizeCanvas(),this.camera.syncFovyDegree(this.globalOptions.fovyDegree),this.globalOptions.cullFace?this.gl.enable(this.gl.CULL_FACE):this.gl.disable(this.gl.CULL_FACE),this.globalOptions.depthTest?this.gl.enable(this.gl.DEPTH_TEST):this.gl.disable(this.gl.DEPTH_TEST)}render(){this.scene(),requestAnimationFrame(this.render.bind(this))}scene(){this.setOptions(),this.shaderProcesses.forEach((t=>{t.process(this.globalOptions)})),this.shaderProcesses.forEach((t=>{t.postprocess(this.globalOptions)}))}getMainFbo(){const t=1,e=mr.fromValues(.2,.2,.2);return this.mainFbo||(this.mainFbo=new Jt(this.gl,this.gl.canvas,this.defaultShaderInfo,{name:"main",textureType:t,clearColor:e},this.globalOptions)),this.mainFbo}getAlbedoFbo(){const t=1;return this.albedoFbo||(this.albedoFbo=new Jt(this.gl,this.gl.canvas,this.defaultShaderInfo,{name:"albedo",textureType:t},this.globalOptions)),this.albedoFbo}getSelectionFbo(){const t=2;return this.selectionFbo||(this.selectionFbo=new Jt(this.gl,this.gl.canvas,this.defaultShaderInfo,{name:"selection",textureType:t},this.globalOptions)),this.selectionFbo}getDepthFbo(){const t=3;return this.depthFbo||(this.depthFbo=new Jt(this.gl,this.gl.canvas,this.defaultShaderInfo,{name:"depth",textureType:t},this.globalOptions)),this.depthFbo}getNormalFbo(){const t=4;return this.normalFbo||(this.normalFbo=new Jt(this.gl,this.gl.canvas,this.defaultShaderInfo,{name:"normal",textureType:t},this.globalOptions)),this.normalFbo}getLightMapFbo(){const t=5;return this.lightMapFbo||(this.lightMapFbo=new Jt(this.gl,this.gl.canvas,this.defaultShaderInfo,{name:"light",textureType:t,width:8182,height:8182},this.globalOptions)),this.lightMapFbo}get gl(){return this.gl}}const{mat2:gr,mat3:xr,mat4:vr,vec2:yr,vec3:Er,vec4:Sr}=self.glMatrix;class Br{static calcTextureCoordinate(t,e,r){let i=r*e[0],o=r*e[1],s=r*e[0]+r,n=r*e[1]+r;if(i<0||o<0||s>t[0]||n>t[1])throw new Error("incorrect texture coordinate.");return Sr.fromValues(i/t[0],o/t[1],s/t[0],n/t[1])}}const{mat2:Mr,mat3:Or,mat4:Tr,vec2:wr,vec3:Cr,vec4:Ar}=self.glMatrix;class Rr extends Le{constructor(t){super(),(0,bt.Z)(this,"size",void 0),this.init(t)}init(t){this.texturePosition=[0,0],this.size=Cr.fromValues(128,128,128),this.name="Untitled Cube",t?.name&&(this.name=t.name),t?.position&&(this.position=Cr.set(this.position,t.position.x,t.position.y,t.position.z)),t?.size&&(this.size=Cr.set(this.size,t.size.width,t.size.length,t.size.height)),t?.rotation&&(this.rotation=Cr.set(this.rotation,t.rotation.pitch,t.rotation.roll,t.rotation.heading)),t?.color&&(this.color=Ar.set(this.color,t?.color.r,t?.color.g,t?.color.b,t?.color.a)),t?.texture&&(this.texture=t.texture),t?.texturePosition&&(this.texturePosition=t.texturePosition),t?.image&&(this.image=t.image)}render(t,e,r){let i=this.getTransformMatrix(),o=this.getRotationMatrix();t.uniformMatrix4fv(e.uniformLocations.objectMatrix,!1,i),t.uniformMatrix4fv(e.uniformLocations.rotationMatrix,!1,o);let s=this.getBuffer(t,e);t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,s.indicesGlBuffer),t.enableVertexAttribArray(e.attributeLocations.vertexNormal),s.bindBuffer(s.normalGlBuffer,3,e.attributeLocations.vertexNormal),t.enableVertexAttribArray(e.attributeLocations.vertexPosition),s.bindBuffer(s.positionsGlBuffer,3,e.attributeLocations.vertexPosition),t.enableVertexAttribArray(e.attributeLocations.vertexColor),s.bindBuffer(s.colorGlBuffer,4,e.attributeLocations.vertexColor),t.enableVertexAttribArray(e.attributeLocations.vertexSelectionColor),s.bindBuffer(s.selectionColorGlBuffer,4,e.attributeLocations.vertexSelectionColor),r.forEach((r=>{r.bind(e);const i=r.textureType;1==i&&(t.bindTexture(t.TEXTURE_2D,s.texture),t.enableVertexAttribArray(e.attributeLocations.textureCoordinate),s.bindBuffer(s.textureGlBuffer,2,e.attributeLocations.textureCoordinate)),t.drawElements(t.TRIANGLES,s.indicesLength,t.UNSIGNED_SHORT,0),r.unbind()}))}getBuffer(t){if(void 0===this.buffer){this.buffer=new Te(t),this.texture&&(this.buffer.texture=this.texture,this.textureSize=wr.fromValues(512,512));let e=this.size[0]/2,r=this.size[1]/2,i=this.size[2],o=this.color,s=Cr.fromValues(-e,-r,0),n=Cr.fromValues(e,-r,0),a=Cr.fromValues(e,r,0),l=Cr.fromValues(-e,r,0),h=Cr.fromValues(-e,-r,i),u=Cr.fromValues(e,-r,i),c=Cr.fromValues(e,r,i),f=Cr.fromValues(-e,r,i),d=this.normal(s,a,n),m=this.normal(s,l,a),b=this.normal(h,u,c),p=this.normal(h,c,f),g=this.normal(l,s,h),x=this.normal(l,h,f),v=this.normal(n,a,c),y=this.normal(n,c,u),E=this.normal(s,n,u),S=this.normal(s,u,h),B=this.normal(a,l,f),M=this.normal(a,f,c),O=this.selectionColor;this.buffer.positionsVBO=new Float32Array([s[0],s[1],s[2],a[0],a[1],a[2],n[0],n[1],n[2],s[0],s[1],s[2],l[0],l[1],l[2],a[0],a[1],a[2],h[0],h[1],h[2],u[0],u[1],u[2],c[0],c[1],c[2],h[0],h[1],h[2],c[0],c[1],c[2],f[0],f[1],f[2],l[0],l[1],l[2],s[0],s[1],s[2],h[0],h[1],h[2],l[0],l[1],l[2],h[0],h[1],h[2],f[0],f[1],f[2],n[0],n[1],n[2],a[0],a[1],a[2],c[0],c[1],c[2],n[0],n[1],n[2],c[0],c[1],c[2],u[0],u[1],u[2],s[0],s[1],s[2],n[0],n[1],n[2],u[0],u[1],u[2],s[0],s[1],s[2],u[0],u[1],u[2],h[0],h[1],h[2],a[0],a[1],a[2],l[0],l[1],l[2],f[0],f[1],f[2],a[0],a[1],a[2],f[0],f[1],f[2],c[0],c[1],c[2]]),this.buffer.normalVBO=new Float32Array([d[0],d[1],d[2],d[0],d[1],d[2],d[0],d[1],d[2],m[0],m[1],m[2],m[0],m[1],m[2],m[0],m[1],m[2],b[0],b[1],b[2],b[0],b[1],b[2],b[0],b[1],b[2],p[0],p[1],p[2],p[0],p[1],p[2],p[0],p[1],p[2],g[0],g[1],g[2],g[0],g[1],g[2],g[0],g[1],g[2],x[0],x[1],x[2],x[0],x[1],x[2],x[0],x[1],x[2],v[0],v[1],v[2],v[0],v[1],v[2],v[0],v[1],v[2],y[0],y[1],y[2],y[0],y[1],y[2],y[0],y[1],y[2],E[0],E[1],E[2],E[0],E[1],E[2],E[0],E[1],E[2],S[0],S[1],S[2],S[0],S[1],S[2],S[0],S[1],S[2],B[0],B[1],B[2],B[0],B[1],B[2],B[0],B[1],B[2],M[0],M[1],M[2],M[0],M[1],M[2],M[0],M[1],M[2]]),this.buffer.colorVBO=new Float32Array([o[0],o[1],o[2],o[3],o[0],o[1],o[2],o[3],o[0],o[1],o[2],o[3],o[0],o[1],o[2],o[3],o[0],o[1],o[2],o[3],o[0],o[1],o[2],o[3],o[0],o[1],o[2],o[3],o[0],o[1],o[2],o[3],o[0],o[1],o[2],o[3],o[0],o[1],o[2],o[3],o[0],o[1],o[2],o[3],o[0],o[1],o[2],o[3],o[0],o[1],o[2],o[3],o[0],o[1],o[2],o[3],o[0],o[1],o[2],o[3],o[0],o[1],o[2],o[3],o[0],o[1],o[2],o[3],o[0],o[1],o[2],o[3],o[0],o[1],o[2],o[3],o[0],o[1],o[2],o[3],o[0],o[1],o[2],o[3],o[0],o[1],o[2],o[3],o[0],o[1],o[2],o[3],o[0],o[1],o[2],o[3],o[0],o[1],o[2],o[3],o[0],o[1],o[2],o[3],o[0],o[1],o[2],o[3],o[0],o[1],o[2],o[3],o[0],o[1],o[2],o[3],o[0],o[1],o[2],o[3],o[0],o[1],o[2],o[3],o[0],o[1],o[2],o[3],o[0],o[1],o[2],o[3],o[0],o[1],o[2],o[3],o[0],o[1],o[2],o[3],o[0],o[1],o[2],o[3]]),this.buffer.selectionColorVBO=new Float32Array([O[0],O[1],O[2],O[3],O[0],O[1],O[2],O[3],O[0],O[1],O[2],O[3],O[0],O[1],O[2],O[3],O[0],O[1],O[2],O[3],O[0],O[1],O[2],O[3],O[0],O[1],O[2],O[3],O[0],O[1],O[2],O[3],O[0],O[1],O[2],O[3],O[0],O[1],O[2],O[3],O[0],O[1],O[2],O[3],O[0],O[1],O[2],O[3],O[0],O[1],O[2],O[3],O[0],O[1],O[2],O[3],O[0],O[1],O[2],O[3],O[0],O[1],O[2],O[3],O[0],O[1],O[2],O[3],O[0],O[1],O[2],O[3],O[0],O[1],O[2],O[3],O[0],O[1],O[2],O[3],O[0],O[1],O[2],O[3],O[0],O[1],O[2],O[3],O[0],O[1],O[2],O[3],O[0],O[1],O[2],O[3],O[0],O[1],O[2],O[3],O[0],O[1],O[2],O[3],O[0],O[1],O[2],O[3],O[0],O[1],O[2],O[3],O[0],O[1],O[2],O[3],O[0],O[1],O[2],O[3],O[0],O[1],O[2],O[3],O[0],O[1],O[2],O[3],O[0],O[1],O[2],O[3],O[0],O[1],O[2],O[3],O[0],O[1],O[2],O[3],O[0],O[1],O[2],O[3]]);let T=Br.calcTextureCoordinate(this.textureSize,this.texturePosition,16),w=[];this.buffer.positionsGlBuffer=this.buffer.createBuffer(this.buffer.positionsVBO),this.buffer.normalGlBuffer=this.buffer.createBuffer(this.buffer.normalVBO),this.buffer.colorGlBuffer=this.buffer.createBuffer(this.buffer.colorVBO),this.buffer.selectionColorGlBuffer=this.buffer.createBuffer(this.buffer.selectionColorVBO);let C=this.buffer.positionsVBO.length/3,A=new Uint16Array(C);this.buffer.indicesVBO=A.map(((t,e)=>(w.push(T[0]),w.push(T[1]),w.push(T[2]),w.push(T[1]),w.push(T[2]),w.push(T[3]),w.push(T[0]),w.push(T[1]),w.push(T[2]),w.push(T[3]),w.push(T[0]),w.push(T[3]),e))),this.buffer.textureVBO=new Float32Array(w),this.buffer.textureGlBuffer=this.buffer.createBuffer(this.buffer.textureVBO),this.buffer.indicesGlBuffer=this.buffer.createIndexBuffer(this.buffer.indicesVBO),this.buffer.indicesLength=this.buffer.indicesVBO.length}return this.buffer}}const{mat2:Fr,mat3:Vr,mat4:Lr,vec2:Pr,vec3:_r,vec4:Nr}=self.glMatrix;class Dr{static tessellate(t,e=!0){let r=[],i=this.validateConvex(t);return i.forEach((t=>{let i=this.toTriangles(t,e);r=r.concat(i)})),r}static validateConvex(t,e=[]){if(this.isConvex(t))e.push(t);else{let r=t.find(((e,r)=>this.getPositionNormal(t,r)<0)),i=t.indexOf(r),o=this.sortedNearest(t,i);o.some((i=>{let o=this.split(t,r,i),s=this.validateIntersection(t,r,i);if(s)return!1;let n=this.validateAngle(o[0]),a=this.validateAngle(o[1]);return n^0==a?(this.validateConvex(o[0],e),this.validateConvex(o[1],e),!0):void 0}))}return e}static validateIntersection(t,e,r){let i=t.find(((i,o)=>{let s=t.get(o),n=t.getNext(o);if(this.intersection(e,r,s,n))return!0}));return void 0!==i}static isConvex(t){let e=t.find(((e,r)=>this.getPositionNormal(t,r)<0));return void 0===e}static toTriangles(t,e=!0){let r=t.length;var i=[];for(let o=1;o<r-1;o++)e?i.push(new _e(t[0],t[o],t[o+1])):i.push(new _e(t[0],t[o+1],t[o]));return i}static split(t,e,r){let i=this.createSplits(t,e,r),o=this.createSplits(t,r,e);return[i,o]}static createSplits(t,e,r){let i=[];i.push(e),i.push(r);let o=t.indexOf(r);for(let s=0;s<t.length-1;s++){let s=t.get(o),n=t.getNext(o);if(n==e||n==r)break;this.compare(s,n)||i.push(n),o++}return i}static validateCCW(t){let e=0;return t.forEach(((r,i)=>{let o=this.getPositionNormal(t,i),s=Math.degree(this.getAngle(t,i));o>=0?e+=s:e-=s})),e}static validateAngle(t){let e=0,r=0;return t.forEach(((i,o)=>{let s=this.getPositionNormal(t,o),n=Math.degree(this.getAngle(t,o));s>0?e+=n:r+=n})),e>r}static getPositionNormal(t,e){let r=t.getPrev(e),i=t.get(e),o=t.getNext(e);return this.normal(r,i,o)[2]}static getAngle(t,e){let r=t.getPrev(e),i=t.get(e),o=t.getNext(e),s=_r.subtract(_r.create(),i,r),n=_r.subtract(_r.create(),o,i);return _r.angle(s,n)}static sortedNearest(t,e){let r=t.getPrev(e),i=t.get(e),o=t.getNext(e),s=t.filter((t=>!(t==r||t==i||t==o))),n=s.sort(((t,e)=>{let r=_r.squaredDistance(i,t),o=_r.squaredDistance(i,e);return r<o?-1:r>o?1:0}));return n}static intersection(t,e,r,i){let o=this.dot(this.cross(t,e,r),this.cross(t,e,i)),s=this.dot(this.cross(r,i,t),this.cross(r,i,e));return(0!=o||0!=s)&&(o<=0&&s<=0)}static compare(t,e){return t[0]===e[0]&&t[1]===e[1]&&t[2]===e[2]}static cross(t,e,r){let i=_r.subtract(_r.create(),e,t),o=_r.subtract(_r.create(),r,e);return _r.cross(_r.create(),i,o)}static dot(t,e){return _r.dot(t,e)}static normal(t,e,r){let i=this.cross(t,e,r);return _r.normalize(i,i)}}const{mat2:Gr,mat3:Ir,mat4:jr,vec2:Ur,vec3:zr,vec4:Zr}=self.glMatrix;class kr extends Le{constructor(t,e){super(),(0,bt.Z)(this,"height",void 0),(0,bt.Z)(this,"coordinates",void 0),(0,bt.Z)(this,"triangles",void 0),(0,bt.Z)(this,"image",void 0),this.init(t,e)}init(t,e){this.triangles=[],this.height=3,this.name="Untitled Polygon",t&&(this.coordinates=t),e?.name&&(this.name=e.name),e?.height&&(this.height=e.height),e?.position&&(this.position=zr.set(this.position,e.position.x,e.position.y,e.position.z)),e?.rotation&&(this.rotation=zr.set(this.rotation,e.rotation.pitch,e.rotation.roll,e.rotation.heading)),e?.color&&(this.color=Zr.set(this.color,e?.color.r,e?.color.g,e?.color.b,e?.color.a)),e?.texture&&(this.texture=e.texture),e?.image&&(this.image=e.image)}render(t,e,r){let i=this.getTransformMatrix(),o=this.getRotationMatrix();t.uniformMatrix4fv(e.uniformLocations.objectMatrix,!1,i),t.uniformMatrix4fv(e.uniformLocations.rotationMatrix,!1,o);let s=this.getBuffer(t,e);t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,s.indicesGlBuffer),t.enableVertexAttribArray(e.attributeLocations.vertexNormal),s.bindBuffer(s.normalGlBuffer,3,e.attributeLocations.vertexNormal),t.enableVertexAttribArray(e.attributeLocations.vertexPosition),s.bindBuffer(s.positionsGlBuffer,3,e.attributeLocations.vertexPosition),t.enableVertexAttribArray(e.attributeLocations.vertexColor),s.bindBuffer(s.colorGlBuffer,4,e.attributeLocations.vertexColor),t.enableVertexAttribArray(e.attributeLocations.vertexSelectionColor),s.bindBuffer(s.selectionColorGlBuffer,4,e.attributeLocations.vertexSelectionColor),r.forEach((r=>{const i=r.textureType;r.bind(e),1==i&&(t.bindTexture(t.TEXTURE_2D,s.texture),t.enableVertexAttribArray(e.attributeLocations.textureCoordinate),s.bindBuffer(s.textureGlBuffer,2,e.attributeLocations.textureCoordinate)),t.drawElements(t.TRIANGLES,s.indicesLength,t.UNSIGNED_SHORT,0),r.unbind()}))}getBuffer(t){if(void 0===this.buffer||!0===this.dirty){this.buffer=new Te(t);let e=this.color,r=[],i=this.selectionColor,o=[],s=[],n=[],a=[],l=this.coordinates.map((t=>zr.fromValues(t[0],t[1],this.height))),h=this.coordinates.map((t=>zr.fromValues(t[0],t[1],0))),u=this.getMinMax(l);u.minz=0,u.maxz=this.height,Dr.validateCCW(l)<0&&(l.reverse(),h.reverse());let c=Dr.tessellate(l),f=Dr.tessellate(h,!1),d=this.createSideTriangle(l,h,!0),m=[];m=m.concat(c),m=m.concat(f),m=m.concat(d),this.triangles=m,m.forEach((t=>{let l=t.positions,h=t.getNormal();l.forEach((t=>{t.forEach((t=>s.push(t))),h.forEach((t=>n.push(t))),e.forEach((t=>r.push(t))),i.forEach((t=>o.push(t)));let l=u.maxx-u.minx,c=u.maxy-u.miny,f=u.maxz-u.minz;1==h[0]||-1==h[0]?(a.push((t[1]-u.miny)/c),a.push((t[2]-u.minz)/f)):1==h[1]||-1==h[1]?(a.push((t[0]-u.minx)/l),a.push((t[2]-u.minz)/f)):1!=h[2]&&-1!=h[2]||(a.push((t[0]-u.minx)/l),a.push((t[1]-u.miny)/c))}))}));let b=new Uint16Array(s.length/3);this.buffer.indicesVBO=b.map(((t,e)=>e)),this.buffer.positionsVBO=new Float32Array(s),this.buffer.normalVBO=new Float32Array(n),this.buffer.colorVBO=new Float32Array(r),this.buffer.selectionColorVBO=new Float32Array(o),this.buffer.textureVBO=new Float32Array(a),this.texture?this.buffer.texture=this.texture:this.image&&(this.buffer.texture=this.buffer.createTexture(this.image)),this.buffer.positionsGlBuffer=this.buffer.createBuffer(this.buffer.positionsVBO),this.buffer.colorGlBuffer=this.buffer.createBuffer(this.buffer.colorVBO),this.buffer.selectionColorGlBuffer=this.buffer.createBuffer(this.buffer.selectionColorVBO),this.buffer.normalGlBuffer=this.buffer.createBuffer(this.buffer.normalVBO),this.buffer.indicesGlBuffer=this.buffer.createIndexBuffer(this.buffer.indicesVBO),this.buffer.textureGlBuffer=this.buffer.createBuffer(this.buffer.textureVBO),this.buffer.indicesLength=this.buffer.indicesVBO.length,this.dirty=!1}return this.buffer}createSideTriangle(t,e,r=!0){let i=[];if(t.length!=e.length)throw new Error("plane length is not matched.");let o=t.length;for(let s=0;s<o;s++){let o=t.getPrev(s),n=t.get(s),a=e.getPrev(s),l=e.get(s);r?(i.push(new _e(n,o,a)),i.push(new _e(n,a,l))):(i.push(new _e(n,a,o)),i.push(new _e(n,l,a)))}return i}createRandomColor(){let t=Math.round(10*Math.random())/10,e=Math.round(10*Math.random())/10,r=Math.round(10*Math.random())/10;return Zr.fromValues(t,e,r,1)}}const{mat2:Xr,mat3:Hr,mat4:Kr,vec2:Yr,vec3:Wr,vec4:$r}=self.glMatrix;class qr extends Le{constructor(t,e){super(),(0,bt.Z)(this,"coordinates",void 0),(0,bt.Z)(this,"image",void 0),(0,bt.Z)(this,"texture",void 0),(0,bt.Z)(this,"reverse",void 0),this.init(t,e)}init(t,e){this.length=0,this.reverse=!1,this.name="Untitled Rectangle",e?.id&&(this.id=e.id,this.selectionColor=this.convertIdToColor(e.id)),t&&(this.coordinates=t),e?.position&&(this.position=Wr.set(this.position,e.position.x,e.position.y,e.position.z)),e?.color&&(this.color=$r.set(this.color,e?.color.r,e?.color.g,e?.color.b,e?.color.a)),e?.texture&&(this.texture=e.texture),e?.image&&!e?.texture&&(this.image=e.image),e?.reverse&&(this.reverse=!0)}render(t,e,r){let i=this.getTransformMatrix(),o=this.getRotationMatrix();t.uniformMatrix4fv(e.uniformLocations.objectMatrix,!1,i),t.uniformMatrix4fv(e.uniformLocations.rotationMatrix,!1,o);let s=this.getBuffer(t,!1);t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,s.indicesGlBuffer),t.enableVertexAttribArray(e.attributeLocations.vertexPosition),s.bindBuffer(s.postionsGlBuffer,3,e.attributeLocations.vertexPosition),t.enableVertexAttribArray(e.attributeLocations.vertexNormal),s.bindBuffer(s.normalGlBuffer,3,e.attributeLocations.vertexNormal),t.enableVertexAttribArray(e.attributeLocations.vertexColor),s.bindBuffer(s.colorGlBuffer,4,e.attributeLocations.vertexColor),t.enableVertexAttribArray(e.attributeLocations.vertexSelectionColor),s.bindBuffer(s.selectionColorGlBuffer,4,e.attributeLocations.vertexSelectionColor),r.forEach((r=>{r.bind(e),(this.image||this.texture)&&(t.bindTexture(t.TEXTURE_2D,s.texture),t.enableVertexAttribArray(e.attributeLocations.textureCoordinate),s.bindBuffer(s.textureGlBuffer,2,e.attributeLocations.textureCoordinate)),t.drawElements(t.TRIANGLES,s.indicesLength,t.UNSIGNED_SHORT,0),r.unbind()}))}getBuffer(t){if(this.dirty=void 0===this.buffer||this.length!=this.coordinates.length,!0===this.dirty){this.buffer=new Te(t);let e=this.color,r=this.selectionColor,i=[],o=[],s=[],n=[],a=[],l=this.coordinates.map((t=>Wr.fromValues(t[0],t[1],this.position[2]))),h=this.getMinMax(l),u=new _e(l[0],l[1],l[2]),c=new _e(l[0],l[2],l[3]),f=[u,c];f.forEach((t=>{let l=t.positions,u=t.getNormal();l.forEach((t=>{t.forEach((t=>{s.push(t)})),u.forEach((t=>n.push(t))),e.forEach((t=>i.push(t))),r.forEach((t=>o.push(t)));let l=h.maxx-h.minx,c=h.maxy-h.miny;a.push((t[0]-h.minx)/l),a.push((t[1]-h.miny)/c)}))})),this.length=this.coordinates.length;let d=new Uint16Array(s.length/3);if(this.buffer.indicesVBO=d.map(((t,e)=>e)),this.buffer.positionsVBO=new Float32Array(s),this.buffer.colorVBO=new Float32Array(i),this.buffer.selectionColorVBO=new Float32Array(o),this.buffer.normalVBO=new Float32Array(n),this.buffer.textureVBO=new Float32Array(a),this.texture)this.buffer.texture=this.texture;else if(!this.texture&&this.image){let t=this.buffer.createTexture(this.image);this.buffer.texture=t,this.texture=t}this.buffer.postionsGlBuffer=this.buffer.createBuffer(this.buffer.positionsVBO),this.buffer.colorGlBuffer=this.buffer.createBuffer(this.buffer.colorVBO),this.buffer.selectionColorGlBuffer=this.buffer.createBuffer(this.buffer.selectionColorVBO),this.buffer.normalGlBuffer=this.buffer.createBuffer(this.buffer.normalVBO),this.buffer.indicesGlBuffer=this.buffer.createIndexBuffer(this.buffer.indicesVBO),this.buffer.textureGlBuffer=this.buffer.createBuffer(this.buffer.textureVBO),this.buffer.indicesLength=this.buffer.indicesVBO.length,this.dirty=!1}return this.buffer}}const{mat2:Jr,mat3:Qr,mat4:ti,vec2:ei,vec3:ri,vec4:ii}=self.glMatrix;class oi extends Le{constructor(t){super(),this.init(t)}init(t){this.name="Untitled Point",t?.height&&(this.height=t.height),t?.position&&(this.position=ri.set(this.position,t.position.x,t.position.y,t.position.z)),t?.color&&(this.color=ii.set(this.color,t?.color.r,t?.color.g,t?.color.b,t?.color.a))}render(t,e,r){let i=this.getTransformMatrix();t.uniformMatrix4fv(e.uniformLocations.objectMatrix,!1,i);let o=this.getBuffer(t,e);t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,o.indicesGlBuffer),r.forEach((r=>{const i=r.textureType;r.bind(),4==i?(t.enableVertexAttribArray(e.attributeLocations.vertexColor),o.bindBuffer(o.selectionColorGlBuffer,4,e.attributeLocations.vertexColor)):(t.enableVertexAttribArray(e.attributeLocations.vertexColor),o.bindBuffer(o.colorGlBuffer,4,e.attributeLocations.vertexColor)),t.enableVertexAttribArray(e.attributeLocations.vertexPosition),o.bindBuffer(o.positionsGlBuffer,3,e.attributeLocations.vertexPosition),t.disable(t.DEPTH_TEST),t.drawElements(t.POINTS,o.indicesLength,t.UNSIGNED_SHORT,0),t.enable(t.DEPTH_TEST),r.unbind()}))}getBuffer(t){if(void 0===this.buffer||!0===this.dirty){this.buffer=new Te(t);let e=[],r=[],i=[];i.push(this.position),this.color.forEach((t=>e.push(t))),this.selectionColor.forEach((t=>r.push(t)));let o=new Uint16Array(i.length);this.buffer.indicesVBO=o.map(((t,e)=>e)),this.buffer.positionsVBO=new Float32Array(i),this.buffer.colorVBO=new Float32Array(e),this.buffer.selectionColorVBO=new Float32Array(r),this.buffer.positionsGlBuffer=this.buffer.createBuffer(this.buffer.positionsVBO),this.buffer.colorGlBuffer=this.buffer.createBuffer(this.buffer.colorVBO),this.buffer.selectionColorGlBuffer=this.buffer.createBuffer(this.buffer.selectionColorVBO),this.buffer.indicesGlBuffer=this.buffer.createIndexBuffer(this.buffer.indicesVBO),this.buffer.indicesLength=this.buffer.indicesVBO.length,this.dirty=!1}return this.buffer}}const{mat2:si,mat3:ni,mat4:ai,vec2:li,vec3:hi,vec4:ui}=self.glMatrix;class ci extends Le{constructor(t,e){super(),(0,bt.Z)(this,"coordinates",void 0),(0,bt.Z)(this,"length",void 0),this.init(t,e)}init(t,e){this.length=0,this.name="Untitled Line",t&&(this.coordinates=t),e?.height&&(this.height=e.height),e?.color&&(this.color=ui.set(this.color,e?.color.r,e?.color.g,e?.color.b,e?.color.a))}render(t,e,r){let i=this.getTransformMatrix();t.uniformMatrix4fv(e.uniformLocations.objectMatrix,!1,i);let o=this.getBuffer(t,!1);t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,o.indicesGlBuffer),t.enableVertexAttribArray(e.attributeLocations.vertexPosition),t.enableVertexAttribArray(e.attributeLocations.vertexColor);let s=o.texture?1:0;s=void 0!==r?.textureType?r?.textureType:s,t.uniform1i(e.uniformLocations.textureType,s),4==s?o.bindBuffer(o.selectionColorGlBuffer,4,e.attributeLocations.vertexColor):o.bindBuffer(o.colorGlBuffer,4,e.attributeLocations.vertexColor),o.bindBuffer(o.positionsGlBuffer,3,e.attributeLocations.vertexPosition),t.disable(t.DEPTH_TEST),t.drawElements(t.LINE_STRIP,o.indicesLength,t.UNSIGNED_SHORT,0),t.enable(t.DEPTH_TEST)}getBuffer(t){if(void 0===this.buffer||this.length!=this.coordinates.length||!0===this.dirty){this.buffer=new Te(t);let e=[],r=[],i=[];this.coordinates.forEach((t=>{t.forEach((t=>i.push(t))),this.color.forEach((t=>e.push(t))),this.selectionColor.forEach((t=>r.push(t)))})),this.length=this.coordinates.length;let o=new Uint16Array(this.length);this.buffer.indicesVBO=o.map(((t,e)=>e)),this.buffer.positionsVBO=new Float32Array(i),this.buffer.colorVBO=new Float32Array(e),this.buffer.selectionColorVBO=new Float32Array(r),this.buffer.positionsGlBuffer=this.buffer.createBuffer(this.buffer.positionsVBO),this.buffer.colorGlBuffer=this.buffer.createBuffer(this.buffer.colorVBO),this.buffer.selectionColorGlBuffer=this.buffer.createBuffer(this.buffer.selectionColorVBO),this.buffer.indicesGlBuffer=this.buffer.createIndexBuffer(this.buffer.indicesVBO),this.buffer.indicesLength=this.buffer.indicesVBO.length,this.dirty=!1}return this.buffer}}const{mat2:fi,mat3:di,mat4:mi,vec2:bi,vec3:pi,vec4:gi}=self.glMatrix;class xi extends Le{constructor(t){super(),(0,bt.Z)(this,"height",void 0),(0,bt.Z)(this,"triangles",void 0),(0,bt.Z)(this,"image",void 0),this.init(t)}init(t){this.triangles=[],this.radius=1,this.height=3,this.density=36,this.name="Untitled Cylinder",t?.radius&&(this.radius=t.radius),t?.height&&(this.height=t.height),t?.density&&(this.density=t.density),t?.position&&(this.position=pi.set(this.position,t.position.x,t.position.y,t.position.z)),t?.rotation&&(this.rotation=pi.set(this.rotation,t.rotation.pitch,t.rotation.roll,t.rotation.heading)),t?.color&&(this.color=gi.set(this.color,t?.color.r,t?.color.g,t?.color.b,t?.color.a)),t?.image&&(this.image=t.image)}rotate(t,e,r){let i=pi.fromValues(1,0,0),o=mi.fromRotation(mi.create(),e,i);return mi.multiply(r,r,o)}render(t,e,r){let i=this.getTransformMatrix(),o=this.getRotationMatrix();t.uniformMatrix4fv(e.uniformLocations.objectMatrix,!1,i),t.uniformMatrix4fv(e.uniformLocations.rotationMatrix,!1,o);let s=this.getBuffer(t,!1);t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,s.indicesGlBuffer),t.enableVertexAttribArray(e.attributeLocations.vertexPosition),s.bindBuffer(s.positionsGlBuffer,3,e.attributeLocations.vertexPosition),t.enableVertexAttribArray(e.attributeLocations.vertexNormal),s.bindBuffer(s.normalGlBuffer,3,e.attributeLocations.vertexNormal),t.enableVertexAttribArray(e.attributeLocations.vertexColor),s.bindBuffer(s.colorGlBuffer,4,e.attributeLocations.vertexColor),t.enableVertexAttribArray(e.attributeLocations.vertexSelectionColor),s.bindBuffer(s.selectionColorGlBuffer,4,e.attributeLocations.vertexSelectionColor),r.forEach((r=>{r.bind(),(this.image||this.texture)&&(t.bindTexture(t.TEXTURE_2D,s.texture),t.enableVertexAttribArray(e.attributeLocations.textureCoordinate),s.bindBuffer(s.textureGlBuffer,2,e.attributeLocations.textureCoordinate)),t.drawElements(t.TRIANGLES,s.indicesLength,t.UNSIGNED_SHORT,0),r.unbind()}))}getBuffer(t){if(void 0===this.buffer||!0===this.dirty){this.buffer=new Te(t);let e=this.color,r=this.selectionColor,i=[],o=[],s=[],n=[],a=[];this.coordinates=[];let l=360/this.density,h=bi.fromValues(0,0),u=bi.fromValues(0,0+this.radius);for(let t=0;t<this.density;t++){let e=Math.radian(t*l),r=bi.rotate(bi.create(),u,h,e);this.coordinates.push(r)}let c=this.coordinates.map((t=>pi.fromValues(t[0],t[1],this.height))),f=this.coordinates.map((t=>pi.fromValues(t[0],t[1],0))),d=this.getMinMax(c);d.minz=this.position[2],d.maxz=this.position[2]+this.height,Dr.validateCCW(c)<0&&(c.reverse(),f.reverse());let m=pi.fromValues(0,0,this.height),b=c.map(((t,e)=>{let r=c.getNext(e);return new _e(m,t,r)})),p=pi.fromValues(0,0,0),g=f.map(((t,e)=>{let r=f.getNext(e);return new _e(p,r,t)})),x=this.createSideTriangle(c,f,!0),v=[];v=v.concat(b),v=v.concat(g),v=v.concat(x),this.triangles=v,v.forEach((t=>{let l=t.positions,h=t.getNormal();l.forEach((t=>{t.forEach((t=>s.push(t))),h.forEach((t=>n.push(t))),e.forEach((t=>i.push(t))),r.forEach((t=>o.push(t)));let l=d.maxx-d.minx,u=d.maxy-d.miny,c=d.maxz-d.minz;1==h[0]||-1==h[0]?(a.push((t[1]-d.miny)/u),a.push((t[2]-d.minz)/c)):1==h[1]||-1==h[1]?(a.push((t[0]-d.minx)/l),a.push((t[2]-d.minz)/c)):1!=h[2]&&-1!=h[2]||(a.push((t[0]-d.minx)/l),a.push((t[1]-d.miny)/u))}))}));let y=new Uint16Array(s.length);if(this.buffer.indicesVBO=y.map(((t,e)=>e)),this.buffer.positionsVBO=new Float32Array(s),this.buffer.normalVBO=new Float32Array(n),this.buffer.colorVBO=new Float32Array(i),this.buffer.selectionColorVBO=new Float32Array(o),this.buffer.textureVBO=new Float32Array(a),this.image){let t=this.buffer.createTexture(this.image);this.buffer.texture=t,this.texture=t}this.buffer.positionsGlBuffer=this.buffer.createBuffer(this.buffer.positionsVBO),this.buffer.colorGlBuffer=this.buffer.createBuffer(this.buffer.colorVBO),this.buffer.selectionColorGlBuffer=this.buffer.createBuffer(this.buffer.selectionColorVBO),this.buffer.normalGlBuffer=this.buffer.createBuffer(this.buffer.normalVBO),this.buffer.indicesGlBuffer=this.buffer.createIndexBuffer(this.buffer.indicesVBO),this.buffer.textureGlBuffer=this.buffer.createBuffer(this.buffer.textureVBO),this.buffer.indicesLength=this.buffer.indicesVBO.length,this.dirty=!1}return this.buffer}createSideTriangle(t,e,r=!0){let i=[];if(t.length!=e.length)throw new Error("plane length is not matched.");let o=t.length;for(let s=0;s<o;s++){let o=t.getPrev(s),n=t.get(s),a=e.getPrev(s),l=e.get(s);r?(i.push(new _e(n,o,a)),i.push(new _e(n,a,l))):(i.push(new _e(n,a,o)),i.push(new _e(n,l,a)))}return i}createRandomColor(){let t=Math.round(10*Math.random())/10,e=Math.round(10*Math.random())/10,r=Math.round(10*Math.random())/10;return gi.fromValues(t,e,r,1)}}const{mat2:vi,mat3:yi,mat4:Ei,vec2:Si,vec3:Bi,vec4:Mi}=self.glMatrix;class Oi extends Le{constructor(t,e){super(),this.init(t,e)}init(t,e){this.triangles=[],this.radius=1,this.height=3,this.density=36,this.scale=1,this.name="Untitled OBJ File",t?.radius&&(this.radius=t.radius),t?.height&&(this.height=t.height),t?.density&&(this.density=t.density),t?.position&&(this.position=Bi.set(this.position,t.position.x,t.position.y,t.position.z)),t?.rotation&&(this.rotation=Bi.set(this.rotation,t.rotation.pitch,t.rotation.roll,t.rotation.heading)),t?.color&&(this.color=Mi.set(this.color,t?.color.r,t?.color.g,t?.color.b,t?.color.a)),t?.image&&(this.image=t.image),t?.scale&&(this.scale=t.scale),this.objData=e}render(t,e,r){let i=this.getTransformMatrix(),o=this.getRotationMatrix();t.uniformMatrix4fv(e.uniformLocations.objectMatrix,!1,i),t.uniformMatrix4fv(e.uniformLocations.rotationMatrix,!1,o);let s=this.getBuffer(t,!1);t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,s.indicesGlBuffer),t.enableVertexAttribArray(e.attributeLocations.vertexPosition),s.bindBuffer(s.positionsGlBuffer,3,e.attributeLocations.vertexPosition),t.enableVertexAttribArray(e.attributeLocations.vertexNormal),s.bindBuffer(s.normalGlBuffer,3,e.attributeLocations.vertexNormal),t.enableVertexAttribArray(e.attributeLocations.vertexColor),s.bindBuffer(s.colorGlBuffer,4,e.attributeLocations.vertexColor),t.enableVertexAttribArray(e.attributeLocations.vertexSelectionColor),s.bindBuffer(s.selectionColorGlBuffer,4,e.attributeLocations.vertexSelectionColor),r.forEach((r=>{r.bind(),(this.image||this.texture)&&(t.bindTexture(t.TEXTURE_2D,s.texture),t.enableVertexAttribArray(e.attributeLocations.textureCoordinate),s.bindBuffer(s.textureGlBuffer,2,e.attributeLocations.textureCoordinate)),t.drawElements(t.TRIANGLES,s.indicesLength,t.UNSIGNED_SHORT,0),r.unbind()}))}getBuffer(t){if(void 0===this.buffer||!0===this.dirty){this.buffer=new Te(t);let e=this.color,r=this.selectionColor,i=[],o=[],s=[],n=[],a=[],l=[],h=this.objData,u=this.scale,c=Number.MAX_SAFE_INTEGER,f=Number.MAX_SAFE_INTEGER,d=Number.MAX_SAFE_INTEGER,m=Number.MIN_SAFE_INTEGER,b=Number.MIN_SAFE_INTEGER,p=Number.MIN_SAFE_INTEGER,g=[];h.vertices.forEach((t=>{let e=t.split(" ").filter((t=>""!==t)),r=e[0]*u,i=e[1]*u,o=e[2]*u;l.push(Bi.fromValues(r,o,i))}));let x=[];h.allVertices.forEach((t=>{let e=t.split(" ").filter((t=>""!==t)),r=e[0]*u,i=e[1]*u,o=e[2]*u;c>r&&(c=r),f>i&&(f=i),d>o&&(d=o),m<r&&(m=r),b<i&&(b=i),p<o&&(p=o),x.push(Bi.fromValues(r,o,i))})),console.log(c,f,d,m,b,p);let v=-1*c+m,y=-1*f+b,E=-1*d+p;console.log(v,y,E),h.faces.forEach((t=>{let r=t.split(" ").filter((t=>""!==t)),o=r.length;if(o>=3){let t=r.map((t=>parseInt(t.split("/")[0]))),s=t.map((t=>t<0?l[l.length+t]:x[t-1]));for(let r=2;r<o;r++)g.push(new _e(s[0],s[r],s[r-1])),e.forEach((t=>i.push(t))),e.forEach((t=>i.push(t))),e.forEach((t=>i.push(t)))}})),g.forEach((t=>{let e=t.positions,i=t.getNormal();e.forEach((t=>{t.forEach((t=>s.push(t))),i.forEach((t=>n.push(t))),r.forEach((t=>o.push(t)))}))})),this.coordinates=[];let S=new Uint16Array(s.length);if(this.buffer.indicesVBO=S.map(((t,e)=>e)),this.buffer.positionsVBO=new Float32Array(s),this.buffer.normalVBO=new Float32Array(n),this.buffer.colorVBO=new Float32Array(i),this.buffer.selectionColorVBO=new Float32Array(o),this.buffer.textureVBO=new Float32Array(a),this.image){let t=this.buffer.createTexture(this.image);this.buffer.texture=t,this.texture=t}this.buffer.positionsGlBuffer=this.buffer.createBuffer(this.buffer.positionsVBO),this.buffer.colorGlBuffer=this.buffer.createBuffer(this.buffer.colorVBO),this.buffer.selectionColorGlBuffer=this.buffer.createBuffer(this.buffer.selectionColorVBO),this.buffer.normalGlBuffer=this.buffer.createBuffer(this.buffer.normalVBO),this.buffer.indicesGlBuffer=this.buffer.createIndexBuffer(this.buffer.indicesVBO),this.buffer.textureGlBuffer=this.buffer.createBuffer(this.buffer.textureVBO),this.buffer.indicesLength=this.buffer.indicesVBO.length,this.dirty=!1}return this.buffer}}const{mat2:Ti,mat3:wi,mat4:Ci,vec2:Ai,vec3:Ri,vec4:Fi}=self.glMatrix;class Vi extends Le{constructor(t){super(),(0,bt.Z)(this,"height",void 0),(0,bt.Z)(this,"coordinates",void 0),(0,bt.Z)(this,"triangles",void 0),(0,bt.Z)(this,"image",void 0),this.init(t)}init(t){this.name="Untitled BatchObject",this.triangles=[],this.colors=t.colors,this.selectionColors=t.selectionColors,this.positions=t.positions,this.normals=t.normals,this.textures=t.textures,this.textureCoordinates=t.textureCoordinates}render(t,e,r){let i=this.getTransformMatrix(),o=this.getRotationMatrix();t.uniformMatrix4fv(e.uniformLocations.objectMatrix,!1,i),t.uniformMatrix4fv(e.uniformLocations.rotationMatrix,!1,o);let s=this.getBuffer(t,e);t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,s.indicesGlBuffer),t.enableVertexAttribArray(e.attributeLocations.vertexNormal),s.bindBuffer(s.normalGlBuffer,3,e.attributeLocations.vertexNormal),t.enableVertexAttribArray(e.attributeLocations.vertexPosition),s.bindBuffer(s.positionsGlBuffer,3,e.attributeLocations.vertexPosition),t.enableVertexAttribArray(e.attributeLocations.vertexColor),s.bindBuffer(s.colorGlBuffer,4,e.attributeLocations.vertexColor),t.enableVertexAttribArray(e.attributeLocations.vertexSelectionColor),s.bindBuffer(s.selectionColorGlBuffer,4,e.attributeLocations.vertexSelectionColor),t.bindTexture(t.TEXTURE_2D,s.texture),t.enableVertexAttribArray(e.attributeLocations.textureCoordinate),s.bindBuffer(s.textureGlBuffer,2,e.attributeLocations.textureCoordinate),r.forEach((e=>{e.bind(),t.drawElements(t.TRIANGLES,s.indicesLength,t.UNSIGNED_SHORT,0),e.unbind()}))}getBuffer(t){if(void 0===this.buffer||!0===this.dirty){this.buffer=new Te(t);let e=this.colors,r=this.selectionColors,i=this.positions,o=this.normals,s=this.textureCoordinates,n=this.textures;this.buffer.texture=n[0];let a=new Uint16Array(i.length/3);this.buffer.indicesVBO=a.map(((t,e)=>e)),this.buffer.positionsVBO=new Float32Array(i),this.buffer.normalVBO=new Float32Array(o),this.buffer.colorVBO=new Float32Array(e),this.buffer.selectionColorVBO=new Float32Array(r),this.buffer.textureVBO=new Float32Array(s),this.buffer.positionsGlBuffer=this.buffer.createBuffer(this.buffer.positionsVBO),this.buffer.colorGlBuffer=this.buffer.createBuffer(this.buffer.colorVBO),this.buffer.selectionColorGlBuffer=this.buffer.createBuffer(this.buffer.selectionColorVBO),this.buffer.normalGlBuffer=this.buffer.createBuffer(this.buffer.normalVBO),this.buffer.indicesGlBuffer=this.buffer.createIndexBuffer(this.buffer.indicesVBO),this.buffer.textureGlBuffer=this.buffer.createBuffer(this.buffer.textureVBO),this.buffer.indicesLength=this.buffer.indicesVBO.length,this.dirty=!1}return this.buffer}}const{mat2:Li,mat3:Pi,mat4:_i,vec2:Ni,vec3:Di,vec4:Gi}=self.glMatrix;Float32Array.prototype.concat=function(){var t=4,e=Array.prototype.slice.call(arguments);e.unshift(this),e=e.map((function(e){if(e instanceof Float32Array)return e.buffer;if(e instanceof ArrayBuffer){if(e.byteLength/t%1!==0)throw new Error("One of the ArrayBuffers is not from a Float32Array");return e}throw new Error("You can only concat Float32Array, or ArrayBuffers")}));var r=e.map((function(t){return t.byteLength})).reduce((function(t,e){return t+e}),0),i=new Float32Array(r/t),o=0;return e.forEach((function(e){i.set(new Float32Array(e),o),o+=e.byteLength/t})),i};class Ii{static batch100(t,e){let r=[],i=500;for(let o=0;o<e.length;o+=i){let s=this.batch(t,e.slice(o,o+i));r.push(s)}return r}static batch(t,e){let r=[],i=[],o=[],s=[],n=[],a=[];e.forEach((e=>{let l=e.position,h=e.getBuffer(t),u=[];h.positionsVBO.forEach(((t,e)=>{let r=e%3;0==r?u.push(t+l[0]):1==r?u.push(t+l[1]):u.push(t+l[2])})),r.push(u),i.push(h.normalVBO),o.push(h.colorVBO),s.push(h.selectionColorVBO),n.push(h.textureVBO),a.push(h.texture)}));let l={positions:this.concatFloat32(r),normals:this.concatFloat32(i),colors:this.concatFloat32(o),selectionColors:this.concatFloat32(s),textureCoordinates:this.concatFloat32(n),textures:a};return new Vi(l)}static concatFloat32(t){if(!t||t.length<=0)return void console.log("========================");let e=[];for(let r=0;r<t.length;r++)this.concat(e,t[r]);return new Float32Array(e)}static concat(t,e){e.forEach((e=>{t.push(e)}))}}var ji={name:"WebglComponent",components:{FirstPersonControllerComponent:dt,ThirdPersonControllerComponent:At},data(){return{selectedObject:void 0,thirdMode:!0,drawTools:!0,renderTools:!0,showDraw:!1,showRender:!1,consoleTools:!1,showConsole:!1,webGl:void 0,blocks:void 0,loadedObjs:[],localOptions:{scale:5,rotationX:0,rotationY:0,rotationZ:0,blockSize:8,maxHeight:6},globalOptions:{cullFace:!0,depthTest:!0,fovyDegree:70,aspect:void 0,near:.1,far:2e4,pointSize:5,lineWidth:3,debugMode:!1,enableSsao:!0,enableGlobalLight:!0,enableEdge:!0}}},mounted(){this.consoleTools&&this.initConsole(),this.init()},computed:{renderableObject:{get(){return this.webGl?this.webGl.renderableObjectList.get():[]},set(){console.log("can't do it")}}},methods:{init(){let t=document.getElementById("glcanvas"),e=new pr(t,this.globalOptions);this.webGl=e,e.startRender(),this.initImage();const r=2048;this.initPosition(r),this.base(r,r),this.initBlocks()},selectObj(t){let e=this.webGl.renderableObjectList.findById(t);return e&&(this.localOptions.rotationX=e.rotation[0],this.localOptions.rotationY=e.rotation[1],this.localOptions.rotationZ=e.rotation[2],this.selectedObject=e,this.globalOptions.selectedObjectId=t),e},diselectObj(){let t=this.selectedObject;return t&&(this.localOptions.rotationX=0,this.localOptions.rotationY=0,this.localOptions.rotationZ=0,this.selectedObject=void 0,this.globalOptions.selectedObjectId=void 0),t},getSelectedObject(){return this.selectedObject},rotateSelectedObject(){this.selectedObject&&(this.selectedObject.rotation[0]=this.localOptions.rotationX,this.selectedObject.rotation[1]=this.localOptions.rotationY,this.selectedObject.rotation[2]=this.localOptions.rotationZ,this.selectedObject.dirty=!0)},uploadObj(t){let e=this,r=t.target.files[0];if(t.target.files[0]){let t=new FileReader;t.onload=function(t){let r=t.target.result,i=!1,o=[],s=[{vertices:[],faces:[],allVertices:o}],n=0;r=r.replaceAll("\r","");let a=r.split("\n");a.forEach((t=>{i&&0!=t.indexOf("f ")&&0!=t.indexOf("usemtl")&&0!=t.indexOf("s ")&&(i=!1,s.push({vertices:[],faces:[],allVertices:o}),n++),0==t.indexOf("v ")?(o.push(t.replace("v ","")),s[n].vertices.push(t.replace("v ",""))):0==t.indexOf("f ")&&(s[n].faces.push(t.replace("f ","")),i=!0)})),e.loadedObjs=s},t.readAsText(r)}},removeBlocks(){if(!this.blocks)return;let t=this.blocks.BLOCK_SIZE;for(let e=0;e<t;e++)for(let r=0;r<t;r++)for(let i=0;i<t;i++){let t=this.blocks.pos[e][r][i];t&&this.removeObj(t)}},initBlocks(){this.removeBlocks(),this.blocks={BLOCK_SIZE:this.localOptions.blockSize,MAX_HEIGHT:this.localOptions.maxHeight};const t=this.blocks.BLOCK_SIZE,e=this.blocks.MAX_HEIGHT;let r=[];for(let i=0;i<t;i++){let i=[];for(let r=0;r<t;r++){let t=[];for(let r=0;r<e;r++)t[r]=0;i.push(t)}r.push(i)}this.blocks.pos=r},createRandomValue(){const t=this.blocks.MAX_HEIGHT;let e=Math.randomInt(0)%t;return e<4&&(e=3),e},initGround(t=!0){let e=[];const r=this.blocks.BLOCK_SIZE/2,i=this.blocks.BLOCK_SIZE,o=this.blocks.MAX_HEIGHT;for(let s=0;s<i;s++)for(let n=0;n<i;n++){let i=this.createRandomValue();for(let a=0;a<o;a++)if(a<i){let i,o=128*(s-r),l=128*(n-r),h=128*a;a>1?i=this.createDirt([o,l,h],t):a>0?i=this.createStone([o,l,h],t):0==a&&(i=this.createObsidian([o,l,h],t)),this.blocks.pos[s][n][a]=i,e.push(i)}}return e},initPosition(t=2048){const e=this.webGl.camera;e.init(),e.setPosition(0,0,t),e.rotate(0,0,0)},initImage(){this.images=[],this.textures=[];let t=["/image/cube/dirt.png","/image/cube/stone.png","/image/cube/cobblestone.png","/image/cube/minecraft-texture.png"],e=t.length,r=new Te(this.webGl.gl),i=0;t.forEach(((t,o)=>{let s=new Image;s.crossOrigin="",s.onload=()=>{console.log("loaded : ",t),this.images[o]=s,this.textures[o]=r.createTexture(s),i++,e==i&&(console.log("inited!"),this.initGround())},s.src=t}))},correctCoord(t,e=1e4){let r=t[0]-Math.floor(t[0]),i=t[1]-Math.floor(t[1]);return[r*e,i*e]},base(t=500,e=500){let r=t/2,i=e/2,o=new Image;o.onload=()=>{let t=[[-r,-i],[r,-i],[r,i],[-r,i]],e={id:8612,position:{x:0,y:0,z:0},color:{r:1,g:1,b:0,a:1},image:o},s=new qr(t,e);this.webGl.renderableObjectList.push(s),e.color={r:0,g:1,b:0,a:1},e.image=o},o.src="/image/chess.png"},getExtrusion(){let t="http://175.197.92.213:10603/geoserver/deia/ows?service=WFS&version=1.0.0&request=GetFeature&typeName=deia%3Aws2_extrusion&outputFormat=application%2Fjson";fetch(t).then((t=>t.json())).then((t=>{let e=[],r=Number.MAX_VALUE,i=Number.MAX_VALUE,o=Number.MIN_VALUE,s=Number.MIN_VALUE,n=t.features;n.forEach((t=>{let n=t.geometry,a=n.coordinates[0][0],l=a.map((t=>{let e=this.correctCoord(t,1e5);return r=e[0]<r?e[0]:r,i=e[1]<i?e[1]:i,o=e[0]>o?e[0]:o,s=e[1]>s?e[1]:s,e})).reverse();e.push({height:2*t.properties.build_height,coordinates:l})}));let a=(r+o)/2,l=(i+s)/2;e.forEach((t=>{this.createPolygon(t.coordinates,{position:{x:-a,y:-l,z:0},color:{r:.7,g:.7,b:.7,a:1},height:t.height,image:this.images[2]})}))}))},reload(t=!1){if(this.initBlocks(),t){let t=this.initGround(!1);setTimeout((()=>{let e=t,r=Ii.batch100(this.webGl.gl,e);this.webGl.renderableObjectList.removeAll(),r.forEach((t=>{this.webGl.renderableObjectList.push(t)})),console.log(this.webGl.renderableObjectList)}),100)}else this.webGl.renderableObjectList.removeAll(),this.initGround(!0)},setZeroPosition(){const t=this.webGl,e=t.camera;e.setPosition(0,0,-0)},removeObj(t){let e=this.webGl.renderableObjectList.get();this.webGl.renderableObjectList.set(e.filter((e=>e.id!==t.id)))},removeAll(){this.webGl.renderableObjectList.removeAll()},createObject(t){t.image=this.images[2],t.scale=this.localOptions.scale,this.loadedObjs.forEach((e=>{let r=Math.ceil(10*Math.random())/10,i=Math.ceil(10*Math.random())/10,o=Math.ceil(10*Math.random())/10;t.color={r:r,g:i,b:o};let s=new Oi(t,e);this.webGl.renderableObjectList.push(s)}))},createCylinder(t){t.image=this.images[2];let e=new xi(t);return this.webGl.renderableObjectList.push(e),e},createPoint(t){let e=new oi(t);this.webGl.renderableObjectList.push(e)},createLine(t,e){let r=new ci(t,e);return this.webGl.renderableObjectList.push(r),r},createCube(t,e=!0){let r=new Rr(t);return e?this.webGl.renderableObjectList.push(r):r.createRenderableObjectId(this.webGl.renderableObjectList),r},createPolygon(t,e,r=!0){let i=new kr(t,e);return r?this.webGl.renderableObjectList.push(i):i.createRenderableObjectId(this.webGl.renderableObjectList),e.image=void 0,i},createDirt(t,e=!0){let r=this.createCube({name:"DIRT",position:{x:t[0]+64,y:t[1]+64,z:t[2]},color:{r:.3,g:.3,b:.3,a:1},height:128,texture:this.textures[3],texturePosition:[2,26]},e);return r},createObsidian(t,e=!0){let r=this.createCube({name:"OBSIDIAN",position:{x:t[0]+64,y:t[1]+64,z:t[2]},color:{r:.3,g:.3,b:.3,a:1},height:128,texture:this.textures[3],texturePosition:[10,16]},e);return r},createStone(t,e=!0){let r=this.createCube({name:"STONE",position:{x:t[0]+64,y:t[1]+64,z:t[2]},color:{r:.3,g:.3,b:.3,a:1},height:128,texture:this.textures[3],texturePosition:[20,22]},e);return r},initConsole(t=5e4){const e=function(){let e=document.querySelector(".console");e.textContent.length>t&&(e.textContent=e.textContent.substring(4e4,e.textContent.length)),e.textContent+=`${(new Date).toLocaleString("ko-KR")} >>`,Array.from(arguments).forEach((t=>{e.textContent+=" ";const r="object"===typeof t?JSON.stringify(t):t;e.textContent+=r})),e.textContent+="\n",e.scrollTop=e.scrollHeight,window.console.logCopy(...arguments)};window.console.logCopy=window.console.log,window.console.log=e},unsetConsole(){window.console.logCopy=window.console.log,window.console.log=window.console.logCopy}}};const Ui=(0,a.Z)(ji,[["render",it],["__scopeId","data-v-25fdf0ba"]]);var zi=Ui,Zi={name:"MainView",components:{WebglComponent:zi}};const ki=(0,a.Z)(Zi,[["render",u]]);var Xi=ki,Hi=r(2483);const Ki=[{path:"/",name:"MainView",component:Xi}],Yi=(0,Hi.p7)({history:(0,Hi.PO)(),routes:Ki});var Wi=Yi,$i=r(65),qi=(0,$i.MT)({state:{},getters:{},mutations:{},actions:{},modules:{}});const Ji=(0,i.ri)(h);Ji.use(qi),Ji.use(Wi),Ji.mount("#app")}},e={};function r(i){var o=e[i];if(void 0!==o)return o.exports;var s=e[i]={exports:{}};return t[i](s,s.exports,r),s.exports}r.m=t,function(){var t=[];r.O=function(e,i,o,s){if(!i){var n=1/0;for(u=0;u<t.length;u++){i=t[u][0],o=t[u][1],s=t[u][2];for(var a=!0,l=0;l<i.length;l++)(!1&s||n>=s)&&Object.keys(r.O).every((function(t){return r.O[t](i[l])}))?i.splice(l--,1):(a=!1,s<n&&(n=s));if(a){t.splice(u--,1);var h=o();void 0!==h&&(e=h)}}return e}s=s||0;for(var u=t.length;u>0&&t[u-1][2]>s;u--)t[u]=t[u-1];t[u]=[i,o,s]}}(),function(){r.n=function(t){var e=t&&t.__esModule?function(){return t["default"]}:function(){return t};return r.d(e,{a:e}),e}}(),function(){r.d=function(t,e){for(var i in e)r.o(e,i)&&!r.o(t,i)&&Object.defineProperty(t,i,{enumerable:!0,get:e[i]})}}(),function(){r.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"===typeof window)return window}}()}(),function(){r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)}}(),function(){var t={143:0};r.O.j=function(e){return 0===t[e]};var e=function(e,i){var o,s,n=i[0],a=i[1],l=i[2],h=0;if(n.some((function(e){return 0!==t[e]}))){for(o in a)r.o(a,o)&&(r.m[o]=a[o]);if(l)var u=l(r)}for(e&&e(i);h<n.length;h++)s=n[h],r.o(t,s)&&t[s]&&t[s][0](),t[s]=0;return r.O(u)},i=self["webpackChunkwebgl"]=self["webpackChunkwebgl"]||[];i.forEach(e.bind(null,0)),i.push=e.bind(null,i.push.bind(i))}();var i=r.O(void 0,[998],(function(){return r(6729)}));i=r.O(i)})();
//# sourceMappingURL=app.2bdd86de.js.map