{"version":3,"file":"js/app.2bdd86de.js","mappings":"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AAM,GAAIA,EAAM,GAAIA,EAAM,GAAIA,EAAM,GACpCA,EAAM,GAAIA,EAAM,GAAIA,EAAM,GAAIA,EAAM,GACpCA,EAAM,GAAIA,EAAM,GAAIA,EAAM,GAAIA,EAAM,GACpCA,EAAM,GAAIA,EAAM,GAAIA,EAAM,GAAIA,EAAM,GACpCA,EAAM,GAAIA,EAAM,GAAIA,EAAM,GAAIA,EAAM,GACpCA,EAAM,GAAIA,EAAM,GAAIA,EAAM,GAAIA,EAAM,GACpCA,EAAM,GAAIA,EAAM,GAAIA,EAAM,GAAIA,EAAM,GACpCA,EAAM,GAAIA,EAAM,GAAIA,EAAM,GAAIA,EAAM,GACpCA,EAAM,GAAIA,EAAM,GAAIA,EAAM,GAAIA,EAAM,GACpCA,EAAM,GAAIA,EAAM,GAAIA,EAAM,GAAIA,EAAM,GACpCA,EAAM,GAAIA,EAAM,GAAIA,EAAM,GAAIA,EAAM,GACpCA,EAAM,GAAIA,EAAM,GAAIA,EAAM,GAAIA,EAAM,GACpCA,EAAM,GAAIA,EAAM,GAAIA,EAAM,GAAIA,EAAM,GACpCA,EAAM,GAAIA,EAAM,GAAIA,EAAM,GAAIA,EAAM,GACpCA,EAAM,GAAIA,EAAM,GAAIA,EAAM,GAAIA,EAAM,GACpCA,EAAM,GAAIA,EAAM,GAAIA,EAAM,GAAIA,EAAM,GACpCA,EAAM,GAAIA,EAAM,GAAIA,EAAM,GAAIA,EAAM,GACpCA,EAAM,GAAIA,EAAM,GAAIA,EAAM,GAAIA,EAAM,GACpCA,EAAM,GAAIA,EAAM,GAAIA,EAAM,GAAIA,EAAM,GACpCA,EAAM,GAAIA,EAAM,GAAIA,EAAM,GAAIA,EAAM,GACpCA,EAAM,GAAIA,EAAM,GAAIA,EAAM,GAAIA,EAAM,GACpCA,EAAM,GAAIA,EAAM,GAAIA,EAAM,GAAIA,EAAM,GACpCA,EAAM,GAAIA,EAAM,GAAIA,EAAM,GAAIA,EAAM,GACpCA,EAAM,GAAIA,EAAM,GAAIA,EAAM,GAAIA,EAAM,GACpCA,EAAM,GAAIA,EAAM,GAAIA,EAAM,GAAIA,EAAM,GACpCA,EAAM,GAAIA,EAAM,GAAIA,EAAM,GAAIA,EAAM,GACpCA,EAAM,GAAIA,EAAM,GAAIA,EAAM,GAAI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","sources":["webpack://webgl/./src/App.vue","webpack://webgl/./src/App.vue?7ccd","webpack://webgl/./src/views/MainView.vue","webpack://webgl/./src/components/WebglComponent.vue","webpack://webgl/./src/components/FirstPersonControllerComponent.vue","webpack://webgl/./src/components/FirstPersonControllerComponent.vue?92db","webpack://webgl/./src/components/ThirdPersonControllerComponent.vue","webpack://webgl/./src/assets/webgl/geometry/Line.js","webpack://webgl/./src/assets/webgl/geometry/Plane.js","webpack://webgl/./src/components/ThirdPersonControllerComponent.vue?3eaf","webpack://webgl/./src/assets/webgl/Shader.js","webpack://webgl/./src/assets/webgl/Camera.js","webpack://webgl/./src/assets/webgl/Sun.js","webpack://webgl/./src/assets/webgl/functional/FrameBufferObject.js","webpack://webgl/./src/assets/webgl/functional/RenderableObjectList.js","webpack://webgl/./src/assets/webgl/shader/DefaultShader.js","webpack://webgl/./src/assets/webgl/abstract/ShaderProcess.js","webpack://webgl/./src/assets/webgl/shader/DefaultShaderProcess.js","webpack://webgl/./src/assets/webgl/shader/ScreenShader.js","webpack://webgl/./src/assets/webgl/Buffer.js","webpack://webgl/./src/assets/webgl/abstract/Renderable.js","webpack://webgl/./src/assets/webgl/geometry/Triangle.js","webpack://webgl/./src/assets/webgl/renderable/Screen.js","webpack://webgl/./src/assets/webgl/shader/ScreenShaderProcess.js","webpack://webgl/./src/assets/webgl/shader/LightMapShader.js","webpack://webgl/./src/assets/webgl/shader/LightMapShaderProcess.js","webpack://webgl/./src/assets/webgl/WebGL.js","webpack://webgl/./src/assets/webgl/functional/TextureCoodinator.js","webpack://webgl/./src/assets/webgl/renderable/Cube.js","webpack://webgl/./src/assets/webgl/functional/Tessellator.js","webpack://webgl/./src/assets/webgl/renderable/Polygon.js","webpack://webgl/./src/assets/webgl/renderable/Rectangle.js","webpack://webgl/./src/assets/webgl/renderable/Point.js","webpack://webgl/./src/assets/webgl/renderable/Line.js","webpack://webgl/./src/assets/webgl/renderable/Cylinder.js","webpack://webgl/./src/assets/webgl/renderable/Obj.js","webpack://webgl/./src/assets/webgl/renderable/BatchObject.js","webpack://webgl/./src/assets/webgl/functional/BufferBatch.js","webpack://webgl/./src/components/WebglComponent.vue?fe4f","webpack://webgl/./src/views/MainView.vue?7ba4","webpack://webgl/./src/router/index.js","webpack://webgl/./src/store/index.js","webpack://webgl/./src/main.js","webpack://webgl/webpack/bootstrap","webpack://webgl/webpack/runtime/chunk loaded","webpack://webgl/webpack/runtime/compat get default export","webpack://webgl/webpack/runtime/define property getters","webpack://webgl/webpack/runtime/global","webpack://webgl/webpack/runtime/hasOwnProperty shorthand","webpack://webgl/webpack/runtime/jsonp chunk loading","webpack://webgl/webpack/startup"],"sourcesContent":["<template>\n  <router-view></router-view>\n</template>\n\n<script>\nexport default {\n  name: 'App'\n}\n</script>\n\n<style>\n#app {\n  height: 100%;\n  width: 100%;\n}\n</style>","import { render } from \"./App.vue?vue&type=template&id=7182204a\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=7182204a&lang=css\"\n\nimport exportComponent from \"C:\\\\gitspace\\\\webgl\\\\webgl\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n  <webgl-component></webgl-component>\r\n</template>\r\n<script>\r\nimport WebglComponent from \"@/components/WebglComponent.vue\";\r\n\r\nexport default {\r\n  name: \"MainView\",\r\n  components: {\r\n    WebglComponent,\r\n  },\r\n};\r\n</script>\r\n<style>\r\n</style>","<template>\r\n  <div\r\n    v-show=\"consoleTools\"\r\n    class=\"dev-tool\"\r\n    style=\"right: 0px; bottom: 0px\"\r\n    oncontextmenu=\"return false\"\r\n    ondragstart=\"return false\"\r\n    onselectstart=\"return false\"\r\n  >\r\n    <div class=\"header\">\r\n      <h3>Dev Console</h3>\r\n      <div class=\"show-hide\" v-on:click=\"showConsole = !showConsole\">show/hide</div>\r\n    </div>\r\n    <div v-show=\"showConsole\">\r\n      <pre class=\"console\"></pre>\r\n    </div>\r\n  </div>\r\n  <div\r\n    v-if=\"drawTools\"\r\n    class=\"dev-tool\"\r\n    style=\"left: 0px; top: 0px\"\r\n    oncontextmenu=\"return false\"\r\n    ondragstart=\"return false\"\r\n    onselectstart=\"return false\"\r\n  >\r\n    <div class=\"header\">\r\n      <h3>Options</h3>\r\n      <div class=\"show-hide\" v-on:click=\"showDraw = !showDraw\">show/hide</div>\r\n    </div>\r\n    <div v-show=\"showDraw\">\r\n      <div class=\"block-group\">\r\n        <button class=\"mini-btn\" v-on:click=\"initPosition()\">InitPosition</button>\r\n        <button class=\"mini-btn\" v-on:click=\"getExtrusion()\">Extrusion</button>\r\n        <button class=\"mini-btn\" v-on:click=\"removeAll()\">RemoveAll</button>\r\n        <button class=\"mini-btn\" v-on:click=\"consoleTools = !consoleTools\">Console/Render</button>\r\n      </div>\r\n      <h2>OBJECT OPTIONS</h2>\r\n      <input type=\"file\" class=\"mini-btn\" id=\"fileUpload\" accept=\".obj\" v-on:change=\"uploadObj\"/>\r\n      <div class=\"block-group\">\r\n        <label>SCALE</label>\r\n        <input type=\"range\" v-model=\"localOptions.scale\" min=\"1\" max=\"20\" step=\"1\" />\r\n      </div>\r\n      <div class=\"block-group\">\r\n        <label>HEADING</label>\r\n        <input type=\"range\" v-model=\"localOptions.rotationZ\" min=\"0\" max=\"360\" step=\"1\" v-on:input=\"rotateSelectedObject\"/>\r\n      </div>\r\n      <div class=\"block-group\">\r\n        <label>PITCH</label>\r\n        <input type=\"range\" v-model=\"localOptions.rotationX\" min=\"0\" max=\"360\" step=\"1\" v-on:input=\"rotateSelectedObject\"/>\r\n      </div>\r\n      <div class=\"block-group\">\r\n        <label>ROLL</label>\r\n        <input type=\"range\" v-model=\"localOptions.rotationY\" min=\"0\" max=\"360\" step=\"1\" v-on:input=\"rotateSelectedObject\"/>\r\n      </div>\r\n      <h2>CAMERA OPTIONS</h2>\r\n      <button class=\"mini-btn\" v-on:click=\"thirdMode = false\">FirstPerson</button>\r\n      <button class=\"mini-btn\" v-on:click=\"thirdMode = true\">ThirdPerson</button>\r\n      <div class=\"block-group\">\r\n        <label>FOVY</label>\r\n        <input type=\"range\" v-model=\"globalOptions.fovyDegree\" min=\"15\" max=\"180\" step=\"1\" />\r\n      </div>\r\n      <div class=\"block-group\">\r\n        <label>NEAR</label>\r\n        <input type=\"range\" v-model=\"globalOptions.near\" min=\"0.1\" max=\"10000.0\" step=\"1\" />\r\n      </div>\r\n      <div class=\"block-group\">\r\n        <label>FAR</label>\r\n        <input type=\"range\" v-model=\"globalOptions.far\" min=\"0.1\" max=\"200000.0\" step=\"1\" />\r\n      </div>\r\n      <h2>WEBGL OPTIONS</h2>\r\n      <div class=\"block-group\">\r\n        <input type=\"checkbox\" v-model=\"globalOptions.cullFace\"><label>CULL-FACE</label>\r\n        <input type=\"checkbox\" v-model=\"globalOptions.depthTest\"><label>DEPTH-TEST</label>\r\n        <input type=\"checkbox\" v-model=\"globalOptions.debugMode\"><label>DEBUG-MODE</label>\r\n      </div>\r\n      <h2>RENDER OPTIONS</h2>\r\n      <div class=\"block-group\">\r\n        <input type=\"checkbox\" v-model=\"globalOptions.enableSsao\"><label>ENABLE-SSAO</label>\r\n        <input type=\"checkbox\" v-model=\"globalOptions.enableGlobalLight\"><label>ENABLE-SHADOW</label>\r\n        <input type=\"checkbox\" v-model=\"globalOptions.enableEdge\"><label>ENABLE-EDGE</label>\r\n      </div>\r\n      <h2>RENDER OPTIONS</h2>\r\n      <select v-model=\"localOptions.blockSize\" class=\"mini-btn\">\r\n        <option value=\"4\">4X4</option>\r\n        <option value=\"8\">8X8</option>\r\n        <option value=\"16\">16X16</option>\r\n        <option value=\"32\">32X32</option>\r\n        <option value=\"64\">64X64</option>\r\n        <option value=\"128\">128X128</option>\r\n        <option value=\"256\">256X256</option>\r\n      </select>\r\n      <button class=\"mini-btn\" v-on:click=\"reload(false)\">ReloadBlocks</button>\r\n      <button class=\"mini-btn\" v-on:click=\"reload(true)\">ReloadBatchedBlocks</button>\r\n    </div>\r\n  </div>\r\n  <div\r\n    v-show=\"!consoleTools\"\r\n    class=\"dev-tool\"\r\n    style=\"left: 0px; bottom: 0px\"\r\n    oncontextmenu=\"return false\"\r\n    ondragstart=\"return false\"\r\n    onselectstart=\"return false\"\r\n  >\r\n    <div class=\"header\">\r\n      <h3>Renders</h3>\r\n      <div class=\"show-hide\" v-on:click=\"showRender = !showRender\">show/hide</div>\r\n    </div>\r\n    <div v-show=\"showRender\">\r\n      <h2>OBJECT INFO</h2>\r\n      <input type=\"number\" class=\"mini-btn\" v-model=\"renderableObject.length\" :change=\"uploadObj\" readonly/>\r\n      <ul>\r\n        <li v-for=\"(renderable, index) in renderableObject\" :key=\"renderable.id\" :class=\"{selected : (renderable == selectedObject)}\">{{`[${index}] : ${renderable.name}, ${renderable.id}`}}</li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n  <div\r\n    id=\"home\"\r\n    oncontextmenu=\"return false\"\r\n    ondragstart=\"return false\"\r\n    onselectstart=\"return false\"\r\n  >\r\n    <canvas id=\"glcanvas\" width=\"1024\" height=\"800\">SAMPLE</canvas>\r\n  </div>\r\n  <first-person-controller-component v-if=\"!thirdMode\" :web-gl=\"webGl\" :blocks=\"blocks\"></first-person-controller-component>\r\n  <third-person-controller-component v-if=\"thirdMode\" :web-gl=\"webGl\" :blocks=\"blocks\"></third-person-controller-component>\r\n</template>\r\n<script>\r\nimport FirstPersonControllerComponent from \"./FirstPersonControllerComponent.vue\";\r\nimport ThirdPersonControllerComponent from \"./ThirdPersonControllerComponent.vue\";\r\nimport WebGL from \"@/assets/webgl/WebGL.js\";\r\nimport Cube from \"@/assets/webgl/renderable/Cube.js\";\r\nimport Polygon from \"@/assets/webgl/renderable/Polygon.js\";\r\nimport Rectangle from \"@/assets/webgl/renderable/Rectangle.js\"\r\nimport Point from \"@/assets/webgl/renderable/Point.js\";\r\nimport Line from \"@/assets/webgl/renderable/Line.js\";\r\nimport Cylinder from \"@/assets/webgl/renderable/Cylinder\";\r\nimport Obj from \"@/assets/webgl/renderable/Obj.js\";\r\nimport Buffer from \"@/assets/webgl/Buffer\";\r\nimport BufferBatch from '@/assets/webgl/functional/BufferBatch.js';\r\n\r\nexport default {\r\n  name: \"WebglComponent\",\r\n  components: {\r\n    FirstPersonControllerComponent,\r\n    ThirdPersonControllerComponent,\r\n  },\r\n  data() {\r\n    return {\r\n      selectedObject: undefined,\r\n      thirdMode: true,\r\n      drawTools: true,\r\n      renderTools: true,\r\n      showDraw: false,\r\n      showRender: false,\r\n      consoleTools: false,\r\n      showConsole : false,\r\n      webGl: undefined,\r\n      blocks: undefined,\r\n      loadedObjs: [],\r\n      localOptions: {\r\n        scale: 5.0,\r\n        rotationX: 0.0,\r\n        rotationY: 0.0,\r\n        rotationZ: 0.0,\r\n        blockSize : 8,\r\n        maxHeight : 6,\r\n      },\r\n      globalOptions: {\r\n        cullFace : true,\r\n        depthTest : true,\r\n        fovyDegree : 70,\r\n        aspect : undefined,\r\n        near : 0.1,\r\n        far : 20000.0,\r\n        pointSize : 5.0,\r\n        lineWidth : 3.0,\r\n        debugMode : false,\r\n        enableSsao : true,\r\n        enableGlobalLight : true,\r\n        enableEdge : true,\r\n      }\r\n    };\r\n  },\r\n  mounted() {\r\n    if (this.consoleTools) {\r\n      this.initConsole();\r\n    }\r\n    this.init();\r\n  },\r\n  computed: {\r\n    renderableObject: {\r\n      get() {\r\n        if (this.webGl) {\r\n          return this.webGl.renderableObjectList.get();\r\n        } else {\r\n          return [];\r\n        }\r\n      },\r\n      set() {\r\n        console.log(\"can't do it\");\r\n      },\r\n    }\r\n  },\r\n  methods: {\r\n    init() {\r\n      let canvas = document.getElementById(\"glcanvas\");\r\n      let webGl = new WebGL(canvas, this.globalOptions);\r\n      this.webGl = webGl;\r\n      webGl.startRender();\r\n      this.initImage();\r\n      const dist = 2048;\r\n      this.initPosition(dist);\r\n      this.base(dist, dist);\r\n      this.initBlocks();\r\n    },\r\n    selectObj(id) {\r\n      let selectedObject = this.webGl.renderableObjectList.findById(id);\r\n      if (selectedObject) {\r\n        this.localOptions.rotationX = selectedObject.rotation[0];\r\n        this.localOptions.rotationY = selectedObject.rotation[1];\r\n        this.localOptions.rotationZ = selectedObject.rotation[2];\r\n        this.selectedObject = selectedObject;\r\n        this.globalOptions.selectedObjectId = id;\r\n      }\r\n      return selectedObject;\r\n    },\r\n    diselectObj() {\r\n      let selectedObject = this.selectedObject;\r\n      if (selectedObject) {\r\n        this.localOptions.rotationX = 0;\r\n        this.localOptions.rotationY = 0;\r\n        this.localOptions.rotationZ = 0;\r\n        this.selectedObject = undefined;\r\n        this.globalOptions.selectedObjectId = undefined;\r\n      }\r\n      return selectedObject;\r\n    },\r\n    getSelectedObject(){\r\n      return this.selectedObject;\r\n    },\r\n    rotateSelectedObject() {\r\n      if (this.selectedObject) {\r\n        this.selectedObject.rotation[0] = this.localOptions.rotationX;\r\n        this.selectedObject.rotation[1] = this.localOptions.rotationY;\r\n        this.selectedObject.rotation[2] = this.localOptions.rotationZ;\r\n        this.selectedObject.dirty = true;\r\n      }\r\n    },\r\n    uploadObj(e) {\r\n      let _this = this;\r\n      let file = e.target.files[0];\r\n      if (e.target.files[0]) {\r\n        let reader = new FileReader();\r\n        reader.onload = function(progressEvent) {\r\n          let objText = progressEvent.target.result;\r\n          let startFace = false;\r\n          let vertices = [];\r\n          let groups = [{\r\n            vertices : [],\r\n            faces : [],\r\n            allVertices : vertices,\r\n          }];\r\n          let groupNum = 0;\r\n\r\n          objText = objText.replaceAll(\"\\r\", \"\");\r\n\r\n          let lines = objText.split(\"\\n\");\r\n          lines.forEach((line) => {\r\n            if (startFace && line.indexOf(\"f \") != 0 && line.indexOf(\"usemtl\") != 0 &&  line.indexOf(\"s \") != 0) {\r\n              startFace = false;\r\n              groups.push({\r\n                vertices : [],\r\n                faces : [],\r\n                allVertices : vertices\r\n              });\r\n              groupNum++;\r\n            }\r\n\r\n            if (line.indexOf(\"v \") == 0) {\r\n              vertices.push(line.replace(\"v \", \"\"));\r\n              groups[groupNum].vertices.push(line.replace(\"v \", \"\"));\r\n            } else if (line.indexOf(\"f \") == 0) {\r\n              groups[groupNum].faces.push(line.replace(\"f \", \"\"));\r\n              startFace = true;\r\n            }\r\n          });\r\n          _this.loadedObjs = groups;\r\n        };\r\n        reader.readAsText(file);\r\n      }\r\n    },\r\n    removeBlocks() {\r\n      if (!this.blocks) {\r\n        return;\r\n      }\r\n      let loop = this.blocks.BLOCK_SIZE;\r\n      for (let x = 0; x < loop; x++) {\r\n        for (let y = 0; y < loop; y++) {\r\n          for (let z = 0; z < loop; z++) {\r\n            let blockObj = this.blocks.pos[x][y][z];\r\n            if (blockObj) {\r\n              this.removeObj(blockObj);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    initBlocks() {\r\n      this.removeBlocks();\r\n      this.blocks = {\r\n        BLOCK_SIZE : this.localOptions.blockSize,\r\n        MAX_HEIGHT : this.localOptions.maxHeight,\r\n      }\r\n      const MAX_VALUE = this.blocks.BLOCK_SIZE;\r\n      const MAX_HEIGHT = this.blocks.MAX_HEIGHT;\r\n      let xpos = [];\r\n      for (let x = 0; x < MAX_VALUE; x++) {\r\n        let ypos = [];\r\n        for (let y = 0; y < MAX_VALUE; y++) {\r\n          let zpos = [];\r\n          for (let z = 0; z < MAX_HEIGHT; z++) {\r\n            zpos[z] = 0;\r\n          }\r\n          ypos.push(zpos);\r\n        }\r\n        xpos.push(ypos);\r\n      }\r\n      this.blocks.pos = xpos;\r\n    },\r\n    createRandomValue() {\r\n      const MAX_HEIGHT = this.blocks.MAX_HEIGHT;\r\n      let value = Math.randomInt(0) % (MAX_HEIGHT);\r\n      if (value < 4) {\r\n        value = 3;\r\n      }\r\n      return value;\r\n    },\r\n    initGround(isAdd = true) {\r\n      let createdList = [];\r\n      const OFFSET = this.blocks.BLOCK_SIZE / 2;\r\n      const MAX_VALUE = this.blocks.BLOCK_SIZE;\r\n      const MAX_HEIGHT = this.blocks.MAX_HEIGHT;\r\n      for (let x = 0; x < MAX_VALUE; x++) {\r\n        for (let y = 0; y < MAX_VALUE; y++) {\r\n          let randomValue = this.createRandomValue();\r\n          for (let z = 0; z < MAX_HEIGHT; z++) {\r\n            if (z < randomValue) {\r\n              let originX = (x - OFFSET) * 128;\r\n              let originY = (y - OFFSET) * 128;\r\n              let originZ = z * 128;\r\n              let polygon = undefined;\r\n              if (z > 1) {\r\n                polygon = this.createDirt([originX, originY, originZ], isAdd)\r\n              } else if (z > 0) {\r\n                polygon = this.createStone([originX, originY, originZ], isAdd)\r\n              } else if (z == 0) {\r\n                polygon = this.createObsidian([originX, originY, originZ], isAdd)\r\n              }\r\n              this.blocks.pos[x][y][z] = polygon;\r\n              createdList.push(polygon);\r\n            }\r\n          }\r\n        }\r\n      }\r\n      return createdList;\r\n    },\r\n    initPosition(dist = 2048){\r\n      const camera = this.webGl.camera;\r\n      camera.init();\r\n      camera.setPosition(0, 0, dist);\r\n      camera.rotate(0, 0, 0);\r\n    },\r\n    initImage() {\r\n      this.images = [];\r\n      this.textures = [];\r\n      let imagePaths = [\"/image/cube/dirt.png\", \"/image/cube/stone.png\", \"/image/cube/cobblestone.png\", \"/image/cube/minecraft-texture.png\"];\r\n      let imageLength = imagePaths.length;\r\n      let glBuffer = new Buffer(this.webGl.gl);\r\n      let loadedCount = 0;\r\n      imagePaths.forEach((imagePath, index) => {\r\n        let image = new Image();\r\n        image.crossOrigin = \"\";\r\n        image.onload = () => {\r\n          console.log(\"loaded : \", imagePath);\r\n          this.images[index] = image;\r\n          this.textures[index] = glBuffer.createTexture(image);\r\n\r\n          loadedCount++;\r\n          //this.images[index] = image;\r\n          if (imageLength == loadedCount) {\r\n            console.log(\"inited!\");\r\n            this.initGround();\r\n          }\r\n        }\r\n        image.src = imagePath;\r\n      });\r\n    },\r\n    correctCoord(coordinate, unit = 10000) {\r\n      let x = coordinate[0] - Math.floor(coordinate[0]);\r\n      let y = coordinate[1] - Math.floor(coordinate[1]);\r\n      return [x * unit, y * unit];\r\n    },\r\n    base(width = 500, height = 500) {\r\n      let halfWidth = width / 2;\r\n      let halfHeight = height / 2;\r\n      let image = new Image(); \r\n      image.onload = () => {\r\n        let coordinates = [[-halfWidth, -halfHeight], [halfWidth, -halfHeight], [halfWidth, halfHeight], [-halfWidth, halfHeight]];\r\n        let options = {\r\n          id : 8612,\r\n          position: { x: 0, y: 0, z: 0 },\r\n          color: { r: 1.0, g: 1.0, b: 0.0, a: 1.0 },\r\n          image : image\r\n        }\r\n        let rectangle = new Rectangle(coordinates, options);\r\n        this.webGl.renderableObjectList.push(rectangle);\r\n        options.color = {r : 0.0, g : 1.0, b : 0.0, a : 1.0};\r\n        options.image = image;\r\n      }\r\n      image.src = \"/image/chess.png\";\r\n    },\r\n    getExtrusion() {\r\n      let url =\r\n        \"http://175.197.92.213:10603/geoserver/deia/ows?service=WFS&version=1.0.0&request=GetFeature&typeName=deia%3Aws2_extrusion&outputFormat=application%2Fjson\";\r\n      fetch(url)\r\n        .then((response) => {\r\n          return response.json();\r\n        })\r\n        .then((json) => {\r\n          let extrusions = [];\r\n          let minx = Number.MAX_VALUE;\r\n          let miny = Number.MAX_VALUE;\r\n          let maxx = Number.MIN_VALUE;\r\n          let maxy = Number.MIN_VALUE;\r\n          let features = json.features;\r\n          features.forEach((feature) => {\r\n            let geometry = feature.geometry;\r\n            let coordinates = geometry.coordinates[0][0];\r\n            let resultCoordinates = coordinates\r\n              .map((coordinate) => {\r\n                let correctCoord = this.correctCoord(coordinate, 100000);\r\n                minx = correctCoord[0] < minx ? correctCoord[0] : minx;\r\n                miny = correctCoord[1] < miny ? correctCoord[1] : miny;\r\n                maxx = correctCoord[0] > maxx ? correctCoord[0] : maxx;\r\n                maxy = correctCoord[1] > maxy ? correctCoord[1] : maxy;\r\n                return correctCoord;\r\n              })\r\n              .reverse();\r\n            extrusions.push({\r\n              height: feature.properties.build_height * 2,\r\n              coordinates: resultCoordinates,\r\n            });\r\n          });\r\n          let posx = (minx + maxx) / 2;\r\n          let poxy = (miny + maxy) / 2;\r\n          extrusions.forEach((extrusion) => {\r\n            this.createPolygon(extrusion.coordinates, {\r\n              position: { x: -posx, y: -poxy, z: 0 },\r\n              color: { r: 0.7, g: 0.7, b: 0.7, a: 1.0 },\r\n              height: extrusion.height,\r\n              image : this.images[2]\r\n            });\r\n          });\r\n        });\r\n    },\r\n    reload(isBatch = false) {\r\n      this.initBlocks();\r\n      if (isBatch) {\r\n        let createdList = this.initGround(false);\r\n        setTimeout(() => {\r\n          let filteredObjs = createdList;\r\n          let results = BufferBatch.batch100(this.webGl.gl, filteredObjs);\r\n          this.webGl.renderableObjectList.removeAll();\r\n          results.forEach((result) => {\r\n            this.webGl.renderableObjectList.push(result);\r\n          })\r\n          console.log(this.webGl.renderableObjectList);\r\n        }, 100)\r\n      } else {\r\n        this.webGl.renderableObjectList.removeAll();\r\n        this.initGround(true);\r\n      }\r\n    },\r\n    setZeroPosition() {\r\n      const webGl = this.webGl;\r\n      const camera = webGl.camera;\r\n      camera.setPosition(0, 0, -0);\r\n    },\r\n    removeObj(obj) {\r\n      let renderableObjects = this.webGl.renderableObjectList.get();\r\n      this.webGl.renderableObjectList.set(renderableObjects.filter((renderableObj) => {\r\n        return renderableObj.id !== obj.id;\r\n      }));\r\n    },\r\n    removeAll() {\r\n      this.webGl.renderableObjectList.removeAll();\r\n    },\r\n    createObject(options) {\r\n      options.image = this.images[2];\r\n      options.scale = this.localOptions.scale;\r\n      this.loadedObjs.forEach(loadedObj => {\r\n        let r = Math.ceil(Math.random() * 10) / 10;\r\n        let g = Math.ceil(Math.random() * 10) / 10;\r\n        let b = Math.ceil(Math.random() * 10) / 10;\r\n        options.color = {r, g, b}\r\n        let object = new Obj(options, loadedObj);\r\n        this.webGl.renderableObjectList.push(object);\r\n      })\r\n      //let object = new Obj(options, this.loadedObj);\r\n      //this.webGl.renderableObjectList.push(object);\r\n      //return object;\r\n    },\r\n    createCylinder(options) {\r\n      options.image = this.images[2];\r\n      let cylinder = new Cylinder(options);\r\n      this.webGl.renderableObjectList.push(cylinder);\r\n      return cylinder;\r\n    },\r\n    createPoint(options) {\r\n      let point = new Point(options);\r\n      this.webGl.renderableObjectList.push(point);\r\n    },\r\n    createLine(coordinates, options) {\r\n      let line = new Line(coordinates, options);\r\n      this.webGl.renderableObjectList.push(line);\r\n      return line;\r\n    },\r\n    createCube(options, isAdd = true) {\r\n      let cube = new Cube(options);\r\n      if (isAdd) {\r\n        this.webGl.renderableObjectList.push(cube);\r\n      } else {\r\n        cube.createRenderableObjectId(this.webGl.renderableObjectList);\r\n      }\r\n      return cube;\r\n    },\r\n    createPolygon(coordinates, options, isAdd = true) {\r\n      let polygon = new Polygon(coordinates, options);\r\n      if (isAdd) {\r\n        this.webGl.renderableObjectList.push(polygon);\r\n      } else {\r\n        polygon.createRenderableObjectId(this.webGl.renderableObjectList);\r\n      }\r\n      options.image = undefined;\r\n      return polygon;\r\n    },\r\n    createDirt(origin, isAdd = true) {\r\n      let cube = this.createCube({\r\n        name: \"DIRT\",\r\n        position: { x: origin[0] + 64, y: origin[1] + 64, z: origin[2]},\r\n        color: { r: 0.3, g: 0.3, b: 0.3, a: 1.0 },\r\n        height: 128,\r\n        texture : this.textures[3],\r\n        texturePosition : [2, 26]\r\n      }, isAdd);\r\n      return cube;\r\n    },\r\n    createObsidian(origin, isAdd = true) {\r\n      let cube = this.createCube({\r\n        name: \"OBSIDIAN\",\r\n        position: { x: origin[0] + 64, y: origin[1] + 64, z: origin[2]},\r\n        color: { r: 0.3, g: 0.3, b: 0.3, a: 1.0 },\r\n        height: 128,\r\n        texture : this.textures[3],\r\n        texturePosition : [10, 16]\r\n      }, isAdd);\r\n      return cube;\r\n    },\r\n    createStone(origin, isAdd = true) {\r\n      let cube = this.createCube({\r\n        name: \"STONE\",\r\n        position: { x: origin[0] + 64, y: origin[1] + 64, z: origin[2]},\r\n        color: { r: 0.3, g: 0.3, b: 0.3, a: 1.0 },\r\n        height: 128,\r\n        texture : this.textures[3],\r\n        texturePosition : [20, 22]\r\n      }, isAdd);\r\n      return cube;\r\n    },\r\n    initConsole(consoleLimit = 50000) {\r\n      const consoleToHtml = function () {\r\n        let consoleDiv = document.querySelector(\".console\");\r\n        if (consoleDiv.textContent.length > consoleLimit) {\r\n          consoleDiv.textContent = consoleDiv.textContent.substring(\r\n            40000,\r\n            consoleDiv.textContent.length\r\n          );\r\n        }\r\n        consoleDiv.textContent += `${new Date().toLocaleString(\"ko-KR\")} >>`;\r\n        Array.from(arguments).forEach((el) => {\r\n          consoleDiv.textContent += \" \";\r\n          const insertValue = typeof el === \"object\" ? JSON.stringify(el) : el;\r\n          consoleDiv.textContent += insertValue;\r\n        });\r\n        consoleDiv.textContent += \"\\n\";\r\n        consoleDiv.scrollTop = consoleDiv.scrollHeight;\r\n        window.console.logCopy(...arguments);\r\n      };\r\n      window.console.logCopy = window.console.log;\r\n      window.console.log = consoleToHtml;\r\n    },\r\n    unsetConsole() {\r\n      window.console.logCopy = window.console.log;\r\n      window.console.log =  window.console.logCopy;\r\n    }\r\n  },\r\n};\r\n</script>\r\n<style scoped>\r\n@media ( max-width: 769px ) {\r\n  .dev-tool {\r\n    width : calc(100% - 40px) !important;\r\n  }\r\n}\r\n.dev-tool {\r\n  width: 340px;\r\n  max-height: 600px;\r\n  position: absolute;\r\n  display: block;\r\n  z-index: 10;\r\n  background-color: #161618;\r\n  opacity: 0.90;\r\n  border-radius: 5px;\r\n  margin: 10px 10px 10px 10px;\r\n  padding: 10px;\r\n  color: #fff;\r\n  color-scheme: dark;\r\n}\r\n.block-group {\r\n  display : block;\r\n}\r\n.dev-tool label {\r\n\tfont-size: 10px;\r\n  display: inline-block;\r\n  height: 20px;\r\n  line-height: 20px;\r\n  margin: 2px 8px;\r\n  vertical-align: middle;\r\n  min-width: 40px;\r\n}\r\n.dev-tool input{\r\n  vertical-align: middle;\r\n}\r\n.dev-tool input[type=\"range\"] {\r\n\tdisplay: inline-block;\r\n  height: 20px;\r\n  vertical-align: middle;\r\n  width: 220px;\r\n}\r\n.dev-tool > input[type=\"file\"] {\r\n\tdisplay: block;\r\n}\r\n.dev-tool .console {\r\n  padding: 5px;\r\n  font-size: 12px;\r\n  color: white;\r\n  height: 100px;\r\n  width: 330px;\r\n  overflow-wrap: anywhere;\r\n  overflow-y: auto;\r\n  margin: 10px auto;\r\n  margin-bottom: 10px;\r\n  border: 1px solid #1f1f1f;\r\n}\r\n.dev-tool ul {\r\n  height: 100px;\r\n  overflow-y: scroll;\r\n  background-color: #222222;\r\n  margin: 5px 0px;\r\n}\r\n.dev-tool ul > li{\r\n  font-size: 11px;\r\n  padding: 7px 5px;\r\n}\r\n.dev-tool ul > li:nth-child(odd) {\r\n  background-color: #1b1b1b;\r\n}\r\n.dev-tool ul > li.selected {\r\n  color: red;\r\n  background-color: #ffff64;\r\n  font-weight: bold;\r\n}\r\n.dev-tool h2 {\r\n  font-size: 12px;\r\n  padding: 5px 5px;\r\n  padding-bottom: 3px;\r\n  font-weight: bold;\r\n  color: #acacac;\r\n}\r\n.dev-tool h3 {\r\n  font-size: 15px;\r\n  margin: 5px;\r\n  font-weight: bold;\r\n  color: #72afe3;\r\n  display: inline-block;\r\n}\r\n.dev-tool div.show-hide {\r\n  float: right;\r\n  font-size: 11px;\r\n  color: #656565;\r\n  margin: 5px;\r\n}\r\n.dev-tool div.header {\r\n  display: block;\r\n  border-bottom: 1px solid #303030;\r\n  margin: 5px 5px;\r\n}\r\n\r\n#home {\r\n  width: 100%;\r\n  height: 100%;\r\n  margin: 0;\r\n  overflow: hidden;\r\n  background-color: #333366;\r\n}\r\n#home canvas {\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: #336666;\r\n}\r\nbutton.mini-btn, input.mini-btn {\r\n  padding: 5px 10px;\r\n  margin: 3px;\r\n  background-color: #313131;\r\n  border-radius: 3px;\r\n  border: 0px;\r\n  font-size: 10px;\r\n  font-weight: unset;\r\n}\r\n\r\nbutton.mini-btn:hover, input.mini-btn:hover {\r\n  background-color: #404040;\r\n}\r\n</style>","<template>\r\n  <div></div>\r\n</template>\r\n<script>\r\nconst { mat2, mat3, mat4, vec2, vec3, vec4 } = self.glMatrix; // eslint-disable-line no-unused-vars\r\n\r\nexport default {\r\n  name: \"FirstPerson\",\r\n  props: {\r\n    webGl: Object,\r\n  },\r\n  data() {\r\n    return {\r\n      keyEvent : undefined,\r\n      controllerStatus : {\r\n        mouseStatus: false,\r\n        keyStatus: {},\r\n      },\r\n      globalOptions : {\r\n        cameraZAxis : false,\r\n        BLOCK_SIZE : 16,\r\n        MOVE_FACTOR : 2,\r\n        ROTATE_FACTOR : 0.1,\r\n      }\r\n    };\r\n  },\r\n  mounted() {\r\n    this.init();\r\n  },\r\n  unmounted() {\r\n    clearInterval(this.keyEvent);\r\n  },\r\n  methods: {\r\n    init() {\r\n      this.initKey();\r\n      this.initMouse();\r\n    },\r\n    initMouse() {\r\n      let canvas = document.getElementById(\"glcanvas\");\r\n      canvas.onmousedown = (e) => {\r\n        if (e.button == 2) {\r\n          if (this.controllerStatus.mouseStatus) {\r\n            this.controllerStatus.mouseStatus = false;\r\n            document.exitPointerLock();\r\n          } else {\r\n            this.controllerStatus.mouseStatus = true;\r\n            canvas.requestPointerLock();\r\n          }\r\n        }\r\n      };\r\n      canvas.onmousemove = (e) => {\r\n        if (this.controllerStatus.mouseStatus) {\r\n          const webGl = this.webGl;\r\n          const camera = webGl.camera;\r\n          const ROTATE_FACTOR = this.globalOptions.ROTATE_FACTOR;\r\n\r\n          let xValue = e.movementX * ROTATE_FACTOR;\r\n          if (xValue != 0) {\r\n            if (this.globalOptions.cameraZAxis) {\r\n              camera.rotate(-xValue, 0, 0);\r\n            } else {\r\n              camera.rotate(0, 0, xValue);\r\n            }\r\n          }\r\n\r\n          let yValue = e.movementY * ROTATE_FACTOR;\r\n          if (yValue != 0) {\r\n            camera.rotate(0, -yValue, 0);\r\n          }\r\n        }\r\n      };\r\n      canvas.onmouseup = () => {};\r\n    },\r\n    initKey() {\r\n      const moveMs = 16; // 66:15fps 33:30fps , 16:60fps\r\n      this.keyEvent = setInterval(() => {\r\n        let MOVE_FACTOR = this.globalOptions.MOVE_FACTOR;\r\n        const webGl = this.webGl;\r\n        const camera = webGl.camera;\r\n\r\n        let keyStatus = this.controllerStatus.keyStatus;\r\n        if (keyStatus.w === true) {\r\n          camera.moveForward(-MOVE_FACTOR);\r\n          keyStatus.s = false;\r\n        } else if (keyStatus.s === true) {\r\n          camera.moveForward(MOVE_FACTOR);\r\n          keyStatus.w = false;\r\n        }\r\n\r\n        if (keyStatus.a === true) {\r\n          camera.moveRight(-MOVE_FACTOR);\r\n          keyStatus.d = false;\r\n        } else if (keyStatus.d === true) {\r\n          camera.moveRight(MOVE_FACTOR);\r\n          keyStatus.a = false;\r\n        }\r\n\r\n        if (keyStatus.q === true) {\r\n          camera.moveUp(MOVE_FACTOR);\r\n          keyStatus.e = false;\r\n        } else if (keyStatus.e === true) {\r\n          camera.moveUp(-MOVE_FACTOR);\r\n          keyStatus.q = false;\r\n        }\r\n      }, moveMs);\r\n      window.onkeydown = (e) => {\r\n        this.controllerStatus.ctrlStatus = e.ctrlKey;\r\n        this.controllerStatus.keyStatus[e.key] = true;\r\n      };\r\n      window.onkeyup = (e) => {\r\n        this.controllerStatus.ctrlStatus = e.ctrlKey;\r\n        this.controllerStatus.keyStatus[e.key] = false;\r\n        if (e.key == \"Escape\") {\r\n          this.controllerStatus.mouseStatus = false;\r\n        }\r\n      };\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n</style>","import { render } from \"./FirstPersonControllerComponent.vue?vue&type=template&id=08d864e5\"\nimport script from \"./FirstPersonControllerComponent.vue?vue&type=script&lang=js\"\nexport * from \"./FirstPersonControllerComponent.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\gitspace\\\\webgl\\\\webgl\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n  <div></div>\r\n</template>\r\n<script>\r\nimport Line from \"@/assets/webgl/geometry/Line\";\r\nimport Plane from \"@/assets/webgl/geometry/Plane.js\";\r\n\r\nconst { mat2, mat3, mat4, vec2, vec3, vec4 } = self.glMatrix; // eslint-disable-line no-unused-vars\r\nexport default {\r\n  name: \"FirstPerson\",\r\n  props: {\r\n    webGl: Object,\r\n    blocks: Object,\r\n  },\r\n  data() {\r\n    return {\r\n      controllerStatus : {\r\n        moveStatus : false,\r\n        moveObject : false,\r\n        moveObjectOffset : undefined,\r\n        movePlane : undefined,\r\n        moveCameraPosition : undefined,\r\n        rotateStatus : false,\r\n        rotateObject : false,\r\n        pivotPosition : undefined,\r\n        zoomStatus : false,\r\n        zoomCameraPosition : undefined,\r\n        zoomCameraRay : undefined,\r\n        altStatus: false,\r\n        ctrlStatus: false,\r\n        shiftStatus: false,\r\n      },\r\n      globalOptions : {\r\n        BLOCK_SIZE : 16,\r\n        MOVE_FACTOR : 15,\r\n        ROTATE_FACTOR : 0.004,\r\n      }\r\n    };\r\n  },\r\n  mounted() {\r\n    this.init();\r\n  },\r\n  methods: {\r\n    init() {\r\n      this.initKey();\r\n      this.initMouse();\r\n    },\r\n    initMouse() {\r\n      let canvas = document.getElementById(\"glcanvas\");\r\n      canvas.ontouchstart = (e) => {\r\n        const webGl = this.webGl;\r\n        const camera = webGl.camera;\r\n        const target = e.changedTouches [0];\r\n        this.touchStartPosition = [target.clientX, target.clientY];\r\n\r\n        const mouseX = target.clientX;\r\n        const mouseY = canvas.height -target.clientY;\r\n        const ratioX = mouseX / canvas.width;\r\n        const ratioY = mouseY / canvas.height;\r\n\r\n        let depth = webGl.depthFbo.getDepth(mouseX, mouseY);\r\n        let pos = this.getScreenPosition(ratioX, ratioY, canvas.width, canvas.height, depth);\r\n        if (e.changedTouches .length >= 2) {\r\n          console.log(e.changedTouches);\r\n          this.controllerStatus.zoomStatus = true;\r\n          this.controllerStatus.zoomCameraPosition = camera.position;\r\n          this.controllerStatus.zoomCameraRay = this.getRay(ratioX, ratioY, canvas.width, canvas.height);\r\n        } else if (e.changedTouches .length == 1) {\r\n          this.controllerStatus.moveStatus = true;\r\n          this.controllerStatus.movePlane = new Plane(pos, vec3.fromValues(0, 0, 1));\r\n          this.controllerStatus.moveCameraPosition = camera.position;\r\n        }\r\n        e.preventDefault();\r\n      }\r\n      canvas.ontouchmove = (e) => {\r\n        const webGl = this.webGl;\r\n        const camera = webGl.camera;\r\n        const target = e.targetTouches[0];\r\n        const startPosition = this.touchStartPosition;\r\n        let touchMovedPosition = [startPosition[0] - target.clientX, startPosition[1] - target.clientY];\r\n        const mouseX = target.clientX;\r\n        const mouseY = canvas.height -target.clientY;\r\n        const ratioX = mouseX / canvas.width;\r\n        const ratioY = mouseY / canvas.height;\r\n        const xValue = touchMovedPosition[0] * this.globalOptions.ROTATE_FACTOR;\r\n        const yValue = touchMovedPosition[1] * this.globalOptions.ROTATE_FACTOR;\r\n\r\n        if (this.controllerStatus.moveStatus) {\r\n          let ray = this.getRay(ratioX, ratioY, canvas.width, canvas.height);\r\n          let line = new Line(camera.position, ray);\r\n          let movedPosition = this.controllerStatus.movePlane.getIntersection(line);\r\n          if (this.controllerStatus.moveObject) {\r\n            let objectOffset = this.controllerStatus.moveObjectOffset;\r\n            let selectedObject = this.$parent.getSelectedObject();\r\n            selectedObject.position[0] = movedPosition[0] - objectOffset[0];\r\n            selectedObject.position[1] = movedPosition[1] - objectOffset[1];\r\n            selectedObject.dirty = true;\r\n          } else {\r\n            camera.moveCamera(this.controllerStatus.moveCameraPosition, this.controllerStatus.movePlane.position, movedPosition);\r\n          }\r\n        } else if (this.controllerStatus.zoomStatus) {\r\n          let depth = webGl.depthFbo.getDepth(mouseX, mouseY);\r\n          let ray = this.controllerStatus.zoomCameraRay;\r\n          let scaledRay = vec3.scale(vec3.create(), ray, (xValue + yValue) * depth);\r\n          let position = vec3.add(vec3.create(), camera.position, scaledRay);\r\n          camera.setPosition(position[0], position[1], position[2]);\r\n        }\r\n        e.preventDefault();\r\n      }\r\n      canvas.ontouchend = (e) => {\r\n        console.log(\"touch end\", e);\r\n        this.controllerStatus.moveObject = false;\r\n        this.controllerStatus.moveObjectOffset = undefined;\r\n        this.controllerStatus.moveStatus = false;\r\n        this.controllerStatus.movePlane = undefined;\r\n        this.controllerStatus.moveCameraPosition = undefined;\r\n        this.controllerStatus.rotateStatus = false;\r\n        this.controllerStatus.pivotPosition = undefined;\r\n        this.controllerStatus.rotateObject = false;\r\n        this.controllerStatus.zoomStatus = false;\r\n        this.controllerStatus.zoomCameraPosition = undefined;\r\n        e.preventDefault();\r\n      }\r\n\r\n      canvas.onwheel = (e) => {\r\n        const webGl = this.webGl;\r\n        const camera = webGl.camera;\r\n        const mouseX = e.x;\r\n        const mouseY = canvas.height - e.y;\r\n        const ratioX = mouseX / canvas.width;\r\n        const ratioY = mouseY / canvas.height;\r\n        let depth = webGl.depthFbo.getDepth(mouseX, mouseY);\r\n        let selectionColor = webGl.selectionFbo.getColor(mouseX, mouseY);\r\n        if (selectionColor == 4294967295) {\r\n          return;\r\n        }\r\n\r\n        let offset = depth * 20 / -e.deltaY;\r\n        let position = this.getScreenPosition(ratioX, ratioY, canvas.width, canvas.height, offset);\r\n        camera.setPosition(position[0], position[1], position[2]);\r\n      }\r\n      canvas.ondblclick = (e) => {\r\n        const webGl = this.webGl;\r\n        const camera = webGl.camera;\r\n        const mouseX = e.x;\r\n        const mouseY = canvas.height - e.y;\r\n        let ratioX = mouseX / canvas.width;\r\n        let ratioY = mouseY / canvas.height;\r\n        \r\n        let selectionColor = webGl.selectionFbo.getColor(mouseX, mouseY);\r\n        if (selectionColor == 4294967295) {\r\n          return;\r\n        }\r\n\r\n        if (e.button == 0) {\r\n\r\n          if (this.controllerStatus.ctrlStatus) {\r\n            let normal = webGl.normalFbo.getNormal(mouseX, mouseY);\r\n            let depth = webGl.depthFbo.getDepth(mouseX, mouseY);\r\n            let pos = this.getScreenPosition(ratioX, ratioY, canvas.width, canvas.height, depth);\r\n\r\n            let rm = camera.getRotationMatrix();\r\n            let normalVec4 = vec4.fromValues(normal[0], normal[1], normal[2], 1.0);\r\n            let rotatedNormal = vec4.transformMat4(vec4.create(), normalVec4, rm);\r\n            let heading = Math.atan2(rotatedNormal[0], rotatedNormal[2]);\r\n            let pitch = -Math.asin(rotatedNormal[1]);\r\n            heading = Math.degree(heading);\r\n            pitch = Math.degree(pitch);\r\n            \r\n            this.$parent.createObject({\r\n              position: { x: pos[0], y: pos[1], z: pos[2]},\r\n              rotation: { heading : 0.0, pitch : pitch, roll : heading},\r\n            });\r\n          } else {\r\n            let selectedObject = this.$parent.getSelectedObject();\r\n            if (selectedObject) {\r\n              if (selectedObject.id == selectionColor) {\r\n                this.$parent.diselectObj();\r\n              } else {\r\n                this.$parent.selectObj(selectionColor);\r\n              }\r\n            } else {\r\n              this.$parent.selectObj(selectionColor);\r\n            }\r\n          }\r\n        }\r\n      }\r\n      canvas.onmousedown = (e) => {\r\n        const webGl = this.webGl;\r\n        const camera = webGl.camera;\r\n        const blocks = this.blocks;\r\n        const mouseX = e.x;\r\n        const mouseY = canvas.height - e.y;\r\n        let depth = webGl.depthFbo.getDepth(mouseX, mouseY);\r\n\r\n        let ratioX = mouseX / canvas.width;\r\n        let ratioY = mouseY / canvas.height;\r\n        let selectionColor = webGl.selectionFbo.getColor(mouseX, mouseY);\r\n        if (selectionColor == 4294967295) {\r\n          return;\r\n        }\r\n        \r\n        const OFFSET = this.blocks.BLOCK_SIZE / 2;\r\n        if (e.button == 2) {\r\n          depth = webGl.depthFbo.getDepth(mouseX, mouseY) - 1;\r\n          let pos = this.getScreenPosition(ratioX, ratioY, canvas.width, canvas.height, depth);\r\n\r\n          if (this.controllerStatus.altStatus) {\r\n            //this.$parent.diselectObj();\r\n            console.log(\"empty\");\r\n          } else if (this.controllerStatus.shiftStatus) {\r\n            let blockX = Math.floor(pos[0] / 128);\r\n            let blockY = Math.floor(pos[1] / 128);\r\n            let blockZ = Math.floor(pos[2] / 128);\r\n            let originX = blockX * 128;\r\n            let originY = blockY * 128;\r\n            let originZ = blockZ * 128;\r\n            let origin = vec3.fromValues(originX, originY, originZ);\r\n\r\n            let test = blocks.pos[blockX + OFFSET][blockY + OFFSET][blockZ];\r\n            if (test === undefined || test != 0) {\r\n              return;\r\n            }\r\n            let polygon = this.$parent.createDirt(origin);\r\n            blocks.pos[blockX + OFFSET][blockY + OFFSET][blockZ] = polygon;\r\n          } else if (this.controllerStatus.ctrlStatus) {\r\n            console.log(\"rotate2\");\r\n          } else {\r\n            this.controllerStatus.zoomStatus = true;\r\n            this.controllerStatus.zoomCameraPosition = camera.position;\r\n            this.controllerStatus.zoomCameraRay = this.getRay(ratioX, ratioY, canvas.width, canvas.height);\r\n          }\r\n\r\n        } else if (e.button == 1) {\r\n          depth = webGl.depthFbo.getDepth(mouseX, mouseY);\r\n          let pos = this.getScreenPosition(ratioX, ratioY, canvas.width, canvas.height, depth);\r\n          this.controllerStatus.pivotPosition = pos;\r\n          this.controllerStatus.rotateStatus = true;\r\n        } else if (e.button == 0) {\r\n          depth = webGl.depthFbo.getDepth(mouseX, mouseY) + 5;\r\n          let pos = this.getScreenPosition(ratioX, ratioY, canvas.width, canvas.height, depth);\r\n          \r\n          if (this.controllerStatus.altStatus) {\r\n            let selectedObject = this.$parent.getSelectedObject();\r\n            if (selectedObject) {\r\n              this.controllerStatus.moveObject = true;\r\n              this.controllerStatus.moveObjectOffset = vec3.sub(vec3.create(), pos, selectedObject.position);\r\n              this.controllerStatus.moveStatus = true;\r\n              this.controllerStatus.movePlane = new Plane(pos, vec3.fromValues(0, 0, 1));\r\n              this.controllerStatus.moveCameraPosition = camera.position;\r\n            }\r\n          } else if (this.controllerStatus.shiftStatus) {\r\n            let blockX = Math.floor(pos[0] / 128);\r\n            let blockY = Math.floor(pos[1] / 128);\r\n            let blockZ = Math.floor(pos[2] / 128);\r\n            let test = this.blocks.pos[blockX + OFFSET][blockY + OFFSET][blockZ];\r\n            if (test === undefined) {\r\n              return;\r\n            } else if (test != 0) {\r\n              this.$parent.removeObj(test);\r\n              blocks.pos[blockX + OFFSET][blockY + OFFSET][blockZ] = 0;\r\n              return;\r\n            }\r\n          } else if (this.controllerStatus.ctrlStatus) {\r\n            console.log(\"rotate1\");\r\n            if (this.$parent.getSelectedObject()) {\r\n              depth = webGl.depthFbo.getDepth(mouseX, mouseY);\r\n              let pos = this.getScreenPosition(ratioX, ratioY, canvas.width, canvas.height, depth);\r\n              this.controllerStatus.pivotPosition = pos;\r\n              this.controllerStatus.rotateStatus = true;\r\n              this.controllerStatus.rotateObject = true;\r\n            }\r\n          } else {\r\n            this.controllerStatus.moveStatus = true;\r\n            this.controllerStatus.movePlane = new Plane(pos, vec3.fromValues(0, 0, 1));\r\n            this.controllerStatus.moveCameraPosition = camera.position;\r\n          }\r\n        }\r\n      };\r\n      canvas.onmousemove = (e) => {\r\n        const webGl = this.webGl;\r\n        const camera = webGl.camera;\r\n        const xValue = e.movementX * this.globalOptions.ROTATE_FACTOR;\r\n        const yValue = e.movementY * this.globalOptions.ROTATE_FACTOR;\r\n        const mouseX = e.x;\r\n        const mouseY = canvas.height - e.y;\r\n        const ratioX = mouseX / canvas.width;\r\n        const ratioY = mouseY / canvas.height;\r\n\r\n        if (this.controllerStatus.moveStatus) {\r\n          let ray = this.getRay(ratioX, ratioY, canvas.width, canvas.height);\r\n          let line = new Line(camera.position, ray);\r\n          let movedPosition = this.controllerStatus.movePlane.getIntersection(line);\r\n          if (this.controllerStatus.moveObject) {\r\n            let objectOffset = this.controllerStatus.moveObjectOffset;\r\n            let selectedObject = this.$parent.getSelectedObject();\r\n            selectedObject.position[0] = movedPosition[0] - objectOffset[0];\r\n            selectedObject.position[1] = movedPosition[1] - objectOffset[1];\r\n            selectedObject.dirty = true;\r\n          } else {\r\n            camera.moveCamera(this.controllerStatus.moveCameraPosition, this.controllerStatus.movePlane.position, movedPosition);\r\n          }\r\n        } else if (this.controllerStatus.rotateStatus) {\r\n          if (this.controllerStatus.rotateObject) {\r\n            this.$parent.getSelectedObject().rotation[2] += Math.degree(xValue - yValue);\r\n            this.$parent.getSelectedObject().dirty = true;\r\n          } else {\r\n            camera.rotationOrbit(-xValue, -yValue, this.controllerStatus.pivotPosition);\r\n          }\r\n        } else if (this.controllerStatus.zoomStatus) {\r\n          let depth = webGl.depthFbo.getDepth(mouseX, mouseY);\r\n          let ray = this.controllerStatus.zoomCameraRay;\r\n          let scaledRay = vec3.scale(vec3.create(), ray, yValue * depth);\r\n          let position = vec3.add(vec3.create(), camera.position, scaledRay);\r\n          camera.setPosition(position[0], position[1], position[2]);\r\n        }\r\n      };\r\n      canvas.onmouseup = (e) => {\r\n        if (e.button == 0) {\r\n          this.controllerStatus.moveObject = false;\r\n          this.controllerStatus.moveObjectOffset = undefined;\r\n          this.controllerStatus.moveStatus = false;\r\n          this.controllerStatus.movePlane = undefined;\r\n          this.controllerStatus.moveCameraPosition = undefined;\r\n          this.controllerStatus.rotateStatus = false;\r\n          this.controllerStatus.pivotPosition = undefined;\r\n          this.controllerStatus.rotateObject = false;\r\n        } else if (e.button == 1) {\r\n          this.controllerStatus.rotateStatus = false;\r\n          this.controllerStatus.pivotPosition = undefined;\r\n          this.controllerStatus.rotateObject = false;\r\n        } else if (e.button == 2) {\r\n          this.controllerStatus.zoomStatus = false;\r\n          this.controllerStatus.zoomCameraPosition = undefined;\r\n        }\r\n      }\r\n    },\r\n    initKey() {\r\n      window.onkeydown = (e) => {\r\n        this.controllerStatus.ctrlStatus = e.ctrlKey;\r\n        this.controllerStatus.shiftStatus = e.shiftKey;\r\n        this.controllerStatus.altStatus = e.altKey;\r\n      };\r\n      window.onkeyup = (e) => {\r\n        this.controllerStatus.ctrlStatus = e.ctrlKey;\r\n        this.controllerStatus.shiftStatus = e.shiftKey;\r\n        this.controllerStatus.altStatus = e.altKey;\r\n      };\r\n    },\r\n    getRay(x, y, width, height) {\r\n      const webGl = this.webGl;\r\n      const camera = webGl.camera;\r\n      let ray = camera.getViewRay({\r\n        x : x,\r\n        y : y,\r\n        width : width,\r\n        height : height,\r\n      }, 1);\r\n      let rotationMatrix = camera.getRotationMatrix();\r\n      let ray4 = vec4.transformMat4(vec4.create(), vec4.fromValues(ray[0], ray[1], ray[2], 1), rotationMatrix);\r\n      return vec3.fromValues(ray4[0], ray4[1], ray4[2]);\r\n    },\r\n    getScreenPosition(x, y, width, height, depth) {\r\n      const webGl = this.webGl;\r\n      const camera = webGl.camera;\r\n      let ray3 = this.getRay(x, y, width, height, depth);\r\n      vec3.scale(ray3, ray3, depth);\r\n      vec3.add(ray3, camera.position, ray3);\r\n      return ray3;\r\n    }\r\n  },\r\n};\r\n</script>\r\n<style scoped>\r\n</style>","const {vec3, mat4} = self.glMatrix; // eslint-disable-line no-unused-vars\r\n\r\nexport default class Line {\r\n  position;\r\n  direction;\r\n  constructor(pos, dir) {\r\n    this.position = pos;\r\n    this.direction = dir;\r\n  }\r\n}","const {vec3} = self.glMatrix; // eslint-disable-line no-unused-vars\r\n\r\nexport default class Plane {\r\n  position; // vec3\r\n  normal; // vec3\r\n  distance; // float\r\n  \r\n  constructor(position, normal) {\r\n    this.set(position, normal);\r\n  }\r\n  set(position, normal) {\r\n    this.normal = normal;\r\n    this.position = position;\r\n    this.distance = -(normal[0] * position[0] + normal[1] * position[1] + normal[2] * position[2]);\r\n  }\r\n  getIntersection(line) {\r\n    let normal = this.normal;\r\n    let position = line.position;\r\n    let direction = line.direction;\r\n    \r\n    let test = (normal[0] * direction[0]) + (normal[1] * direction[1]) + (normal[2] * direction[2]);\r\n\r\n    if (Math.abs(test) > Number.MIN_VALUE) {\r\n      let lambda = -((normal[0] * position[0] + normal[1] * position[1] + normal[2] * position[2] + this.distance) / test);\r\n      let x = position[0] + lambda * direction[0];\r\n      let y = position[1] + lambda * direction[1];\r\n      let z = position[2] + lambda * direction[2];\r\n      return vec3.fromValues(x, y, z)\r\n    } else {\r\n      return undefined;\r\n    }\r\n  }\r\n}","import { render } from \"./ThirdPersonControllerComponent.vue?vue&type=template&id=10a1ef73\"\nimport script from \"./ThirdPersonControllerComponent.vue?vue&type=script&lang=js\"\nexport * from \"./ThirdPersonControllerComponent.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\gitspace\\\\webgl\\\\webgl\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","const {mat2, mat3, mat4, vec2, vec3, vec4} = self.glMatrix; // eslint-disable-line no-unused-vars\r\n\r\nexport default class Shader {\r\n  gl = undefined;\r\n  shaderInfo = undefined;\r\n  constructor(gl) {\r\n    this.gl = gl;\r\n  }\r\n  get shaderInfo() {\r\n    return this.shaderInfo;\r\n  }\r\n  init(shaderObject) {\r\n    const gl = this.gl;\r\n    const vertexShader = this.createShader(gl.VERTEX_SHADER, shaderObject.vertexShaderSource);\r\n    const fragmentShader = this.createShader(gl.FRAGMENT_SHADER, shaderObject.fragmentShaderSource);\r\n    const shaderProgram = this.createShaderProgram(vertexShader, fragmentShader);\r\n    if (!gl.getProgramParameter(shaderProgram, gl.LINK_STATUS)) {\r\n      console.error(\"Unable to initialize the shader program.\");\r\n      return;\r\n    }\r\n    gl.useProgram(shaderProgram);\r\n\r\n    let attributeLocations = {};\r\n    shaderObject.attributes.forEach((attribute) => {\r\n      if (attribute[0] !== 'a') {\r\n        throw \"Shader: attribute variable name is incorrect.\";\r\n      }\r\n      let result = attribute.replace('a', '');\r\n      result = result.replace(/^[A-Z]/, char => char.toLowerCase());\r\n      attributeLocations[result] = gl.getAttribLocation(shaderProgram, attribute);\r\n    });\r\n    let uniformLocations = {};\r\n    shaderObject.uniforms.forEach((uniform) => {\r\n      if (uniform[0] !== 'u') {\r\n        throw \"Shader: uniform variable name is incorrect.\";\r\n      }\r\n      let result = uniform.replace('u', '');\r\n      result = result.replace(/^[A-Z]/, char => char.toLowerCase());\r\n      //return result\r\n      uniformLocations[result] = gl.getUniformLocation(shaderProgram, uniform);\r\n    });\r\n    this.shaderInfo = {\r\n      shaderProgram,\r\n      fragmentShader,\r\n      vertexShader,\r\n      attributeLocations,\r\n      uniformLocations,\r\n    }\r\n  }\r\n  createShader(shaderType, shaderSource) {\r\n    const gl = this.gl;\r\n    const shader = gl.createShader(shaderType);\r\n    gl.shaderSource(shader, shaderSource);\r\n    gl.compileShader(shader);\r\n    const status = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\r\n    if (!status) {\r\n      console.error(`An error occurred compiling the shaders:  ${gl.getShaderInfoLog(shader)}`);\r\n      return null;\r\n    }\r\n    return shader;\r\n  }\r\n  createShaderProgram(vertexShader, fragmentShader) {\r\n    const gl = this.gl;\r\n    const shaderProgram = gl.createProgram(); \r\n    gl.attachShader(shaderProgram, vertexShader);\r\n    gl.attachShader(shaderProgram, fragmentShader);\r\n    gl.linkProgram(shaderProgram);\r\n    return shaderProgram;\r\n  }\r\n  useProgram() {\r\n    //console.log(\"useprogram\");\r\n    this.gl.useProgram(this.shaderInfo.shaderProgram);\r\n  } \r\n}","const {mat2, mat3, mat4, vec2, vec3, vec4} = self.glMatrix; // eslint-disable-line no-unused-vars\r\n\r\nexport default class Camera {\r\n  transformMatrix;\r\n  modelViewMatrix;\r\n  rotationMatrix;\r\n\r\n  position;\r\n  rotation;\r\n  direction\r\n  up;\r\n  right;\r\n  constructor(options) {\r\n    this.init(options);\r\n    this.getTransformMatrix();\r\n  }\r\n  get transformMatrix() {\r\n    this.getTransformMatrix();\r\n    return this.transformMatrix;\r\n  }\r\n  init(options) {\r\n    this.position = vec3.fromValues(0, 0, 0); // [x, y ,z]\r\n    this.rotation = vec3.fromValues(0, 0, 0); // [heading, pitch, roll]\r\n    this.direction = vec3.fromValues(0, 0, -1); // direction of camera\r\n    this.up = vec3.fromValues(0, 1, 0); // up of direction\r\n    this.right = vec3.fromValues(1, 0, 0); // right of direction\r\n    if (options?.fovyDegree) {\r\n      this.fovyDegree = options.fovyDegree;\r\n      this.fovyRadian = Math.radian(options.fovyDegree);\r\n    }\r\n    if (options?.position) {\r\n      this.position = vec3.set(this.position, options.position.x, options.position.y, options.position.z);\r\n    } else {\r\n      this.position = vec3.set(this.position, 0, 0, 0);\r\n    }\r\n    if (options?.rotation) {\r\n      this.rotation = vec3.set(this.rotation, options.rotation.heading, options.rotation.pitch, options.rotation.roll);\r\n    } else {\r\n      this.rotation = vec3.set(this.rotation, 0, 0, 0);\r\n    }\r\n    this.dirty = true;\r\n  }\r\n  syncFovyDegree(fovyDegree = this.fovyDegree) {\r\n    this.fovyDegree = fovyDegree;\r\n    this.fovyRadian = Math.radian(this.fovyDegree);\r\n  }\r\n  moveCamera(cameraPosition, startPosition, endPosition) {\r\n    let offsetPosition = vec3.subtract(vec3.create(), startPosition, endPosition);\r\n    vec3.add(this.position, cameraPosition, offsetPosition);\r\n    this.dirty = true;\r\n  }\r\n  // pivotPoint, heading, pitch\r\n  rotationOrbit(xValue, yValue, pivotPosition) {\r\n    let pitchAxis = this.right;\r\n    let headingMatrix = mat4.fromZRotation(mat4.create(), xValue);\r\n    let pitchMatrix = mat4.fromRotation(mat4.create(), yValue, pitchAxis);\r\n\r\n    let totalRotationMatrix = mat4.multiply(mat4.create(), headingMatrix, pitchMatrix);\r\n\r\n    let translatedCameraPosition = vec3.subtract(vec3.create(), this.position, pivotPosition);\r\n    let translatedCameraPositionVec4 = vec4.fromValues(translatedCameraPosition[0], translatedCameraPosition[1], translatedCameraPosition[2], 1.0);\r\n    let transformedCameraPosition = vec4.transformMat4(vec4.create(), translatedCameraPositionVec4, totalRotationMatrix);\r\n    let transformedCameraPositionVec3 = vec3.fromValues(transformedCameraPosition[0], transformedCameraPosition[1], transformedCameraPosition[2]);\r\n    let returnedCameraPosition = vec3.add(vec4.create(), transformedCameraPositionVec3, pivotPosition);\r\n\r\n    this.position = returnedCameraPosition;\r\n    let totalMatrix3 = mat3.fromMat4(mat3.create(), totalRotationMatrix);\r\n\r\n    let rotatedDirection = vec3.transformMat3(vec3.create(), this.direction, totalMatrix3)\r\n    this.direction = rotatedDirection;\r\n    let rotatedUp = vec3.transformMat3(vec3.create(), this.up, totalMatrix3)\r\n    this.up = rotatedUp;\r\n\r\n    this.dirty = true;\r\n  }\r\n  rotate(heading, pitch, roll) {\r\n    this.rotation[0] += heading;\r\n    this.rotation[1] += pitch;\r\n    this.rotation[2] += roll;\r\n\r\n    let headingMatrix = mat4.identity(mat4.create());\r\n    mat4.rotate(headingMatrix, headingMatrix, Math.radian(this.rotation[0]), [0, 1, 0]);\r\n    let rollMatrix = mat4.identity(mat4.create());\r\n    mat4.rotate(rollMatrix, rollMatrix, Math.radian(this.rotation[2]), [0, 0, -1]);\r\n    let pitchMatrix = mat4.identity(mat4.create());\r\n    mat4.rotate(pitchMatrix, pitchMatrix, Math.radian(this.rotation[1]), [1, 0, 0]);\r\n\r\n    let totalRotationMatrix = mat4.identity(mat4.create());\r\n    mat4.multiply(totalRotationMatrix, totalRotationMatrix, headingMatrix);\r\n    mat4.multiply(totalRotationMatrix, totalRotationMatrix, rollMatrix);\r\n    mat4.multiply(totalRotationMatrix, totalRotationMatrix, pitchMatrix);\r\n    let totalMatrix3 = mat3.fromMat4(mat3.create(), totalRotationMatrix);\r\n\r\n    let rotatedDirection = vec3.transformMat3(vec3.create(), [0, 0, -1], totalMatrix3);\r\n    this.direction = rotatedDirection;\r\n    let rotatedUp = vec3.transformMat3(vec3.create(), [0, 1, 0], totalMatrix3);\r\n    this.up = rotatedUp;\r\n\r\n    this.dirty = true;\r\n  }\r\n  lookAt(target) {\r\n    let zAxis = vec3.normalize(vec3.create(), vec3.subtract(vec3.create(), this.position, target));\r\n    let xAxis = vec3.normalize(vec3.create(), vec3.cross(vec3.create(), this.up, zAxis));\r\n    let yAxis = vec3.normalize(vec3.create(), vec3.cross(vec3.create(), zAxis, xAxis));\r\n    let result = mat4.fromValues(\r\n      xAxis[0], xAxis[1], xAxis[2], 0, \r\n      yAxis[0], yAxis[1], yAxis[2], 0, \r\n      zAxis[0], zAxis[1], zAxis[2], 0, \r\n      this.position[0], this.position[1], this.position[2], 1);\r\n    this.transformMatrix = result;\r\n    return result;\r\n  }\r\n  moveForward(factor) {\r\n    let moveMatrix = mat4.create();\r\n    mat4.identity(moveMatrix);\r\n    mat4.translate(moveMatrix, moveMatrix, [0, 0, factor]);\r\n    mat4.multiply(this.transformMatrix, this.transformMatrix, moveMatrix);\r\n    this.setPositionSync();\r\n  }\r\n  moveRight(factor) {\r\n    let moveMatrix = mat4.create();\r\n    mat4.identity(moveMatrix);\r\n    mat4.translate(moveMatrix, moveMatrix, [factor, 0, 0]);\r\n    mat4.multiply(this.transformMatrix, this.transformMatrix, moveMatrix);\r\n    this.setPositionSync();\r\n  }\r\n  moveUp(factor) {\r\n    let moveMatrix = mat4.create();\r\n    mat4.identity(moveMatrix);\r\n    mat4.translate(moveMatrix, moveMatrix, [0, factor, 0]);\r\n    mat4.multiply(this.transformMatrix, this.transformMatrix, moveMatrix);\r\n    this.setPositionSync();\r\n  }\r\n  setPositionSync() {\r\n    this.position[0] = this.transformMatrix[12];\r\n    this.position[1] = this.transformMatrix[13];\r\n    this.position[2] = this.transformMatrix[14];\r\n  }\r\n  setRotationSync() {\r\n    this.right[0] = this.transformMatrix[0];\r\n    this.right[1] = this.transformMatrix[1];\r\n    this.right[2] = this.transformMatrix[2];\r\n    this.up[0] = this.transformMatrix[4];\r\n    this.up[1] = this.transformMatrix[5];\r\n    this.up[2] = this.transformMatrix[6];\r\n    this.direction[0] = -this.transformMatrix[8];\r\n    this.direction[1] = -this.transformMatrix[9];\r\n    this.direction[2] = -this.transformMatrix[10];\r\n  }\r\n  translate(x, y, z) {\r\n    this.position[0] += x;\r\n    this.position[1] += y;\r\n    this.position[2] += z;\r\n    this.dirty = true;\r\n  }\r\n  setPosition(x, y, z) {\r\n    this.position[0] = x;\r\n    this.position[1] = y;\r\n    this.position[2] = z;\r\n    this.dirty = true;\r\n  }\r\n  getModelViewMatrix() {\r\n    let transformMatrix = this.getTransformMatrix();\r\n    let mvm = mat4.create();\r\n    mat4.invert(mvm, transformMatrix);\r\n    return mvm;\r\n  }\r\n  getTransformMatrix() {\r\n    if (!this.transformMatrix || this.dirty) {\r\n      this.calcRight();\r\n      this.transformMatrix = mat4.fromValues(\r\n        this.right[0], this.right[1], this.right[2], 0, \r\n        this.up[0], this.up[1], this.up[2], 0, \r\n        -this.direction[0], -this.direction[1], -this.direction[2], 0, \r\n        this.position[0], this.position[1], this.position[2], 1);\r\n    }\r\n    return this.transformMatrix;\r\n  }\r\n  calcRight() {\r\n    this.right = vec3.cross(this.right, this.direction, this.up);\r\n  }\r\n  getRotationMatrix() {\r\n    this.rotationMatrix = mat4.clone(this.transformMatrix);\r\n    this.rotationMatrix[12] = 0;\r\n    this.rotationMatrix[13] = 0;\r\n    this.rotationMatrix[14] = 0;\r\n    return this.rotationMatrix;\r\n  }\r\n  getNormalMatrix() {\r\n    let normalMatrix4 = mat4.create();\r\n    let modelViewMatrixInv = this.getModelViewMatrix();\r\n    mat4.invert(modelViewMatrixInv, modelViewMatrixInv);\r\n    mat4.transpose(normalMatrix4, modelViewMatrixInv);\r\n    normalMatrix4[3] = 0.0;\r\n    normalMatrix4[7] = 0.0;\r\n    normalMatrix4[11] = 0.0;\r\n    return normalMatrix4;\r\n  }\r\n  getViewRay(tc, relFar = 1.0) {\r\n    const fovy = Math.radian(this.fovyDegree);\r\n    let aspectRatio = tc.width / tc.height;\r\n    let tangentOfHalfFovy = Math.tan(fovy / 2);\r\n    let hfar = 2.0 * tangentOfHalfFovy * relFar;\r\n    let wfar = hfar * aspectRatio;    \r\n    let ray = vec3.fromValues(wfar * (tc.x - 0.5), hfar * (tc.y - 0.5), -relFar);\r\n    return ray;              \r\n  }\r\n}","const {mat2, mat3, mat4, vec2, vec3, vec4} = self.glMatrix; // eslint-disable-line no-unused-vars\r\n\r\nexport default class Sun {\r\n  transformMatrix;\r\n  modelViewMatrix;\r\n  rotationMatrix;\r\n\r\n  position;\r\n  rotation;\r\n  direction\r\n  up;\r\n  right;\r\n  constructor(options) {\r\n    this.init(options);\r\n    this.getTransformMatrix();\r\n  }\r\n  get transformMatrix() {\r\n    this.getTransformMatrix();\r\n    return this.transformMatrix;\r\n  }\r\n  init(options) {\r\n    this.position = vec3.fromValues(0, 0, 0); // [x, y ,z]\r\n    this.rotation = vec3.fromValues(0, 0, 0); // [heading, pitch, roll]\r\n    this.direction = vec3.fromValues(0, 0, -1); // direction of camera\r\n    this.up = vec3.fromValues(0, 1, 0); // up of direction\r\n    this.right = vec3.fromValues(1, 0, 0); // right of direction\r\n    if (options?.fovyDegree) {\r\n      this.fovyDegree = options.fovyDegree;\r\n      this.fovyRadian = Math.radian(options.fovyDegree);\r\n    }\r\n    if (options?.position) {\r\n      this.position = vec3.set(this.position, options.position.x, options.position.y, options.position.z);\r\n    } else {\r\n      this.position = vec3.set(this.position, 0, 0, 0);\r\n    }\r\n    if (options?.rotation) {\r\n      this.rotation = vec3.set(this.rotation, options.rotation.heading, options.rotation.pitch, options.rotation.roll);\r\n    } else {\r\n      this.rotation = vec3.set(this.rotation, 0, 0, 0);\r\n    }\r\n    this.dirty = true;\r\n  }\r\n  moveCamera(cameraPosition, startPosition, endPosition) {\r\n    let offsetPosition = vec3.subtract(vec3.create(), startPosition, endPosition);\r\n    vec3.add(this.position, cameraPosition, offsetPosition);\r\n    this.dirty = true;\r\n  }\r\n  rotationOrbit(xValue, yValue, pivotPosition) {\r\n    let pitchAxis = this.right;\r\n    let headingMatrix = mat4.fromZRotation(mat4.create(), xValue);\r\n    let pitchMatrix = mat4.fromRotation(mat4.create(), yValue, pitchAxis);\r\n\r\n    let totalRotationMatrix = mat4.multiply(mat4.create(), headingMatrix, pitchMatrix);\r\n\r\n    let translatedCameraPosition = vec3.subtract(vec3.create(), this.position, pivotPosition);\r\n    let translatedCameraPositionVec4 = vec4.fromValues(translatedCameraPosition[0], translatedCameraPosition[1], translatedCameraPosition[2], 1.0);\r\n    let transformedCameraPosition = vec4.transformMat4(vec4.create(), translatedCameraPositionVec4, totalRotationMatrix);\r\n    let transformedCameraPositionVec3 = vec3.fromValues(transformedCameraPosition[0], transformedCameraPosition[1], transformedCameraPosition[2]);\r\n    let returnedCameraPosition = vec3.add(vec4.create(), transformedCameraPositionVec3, pivotPosition);\r\n\r\n    this.position = returnedCameraPosition;\r\n    let totalMatrix3 = mat3.fromMat4(mat3.create(), totalRotationMatrix);\r\n\r\n    let rotatedDirection = vec3.transformMat3(vec3.create(), this.direction, totalMatrix3)\r\n    this.direction = rotatedDirection;\r\n    let rotatedUp = vec3.transformMat3(vec3.create(), this.up, totalMatrix3)\r\n    this.up = rotatedUp;\r\n\r\n    this.dirty = true;\r\n  }\r\n  rotate(heading, pitch, roll) {\r\n    this.rotation[0] += heading;\r\n    this.rotation[1] += pitch;\r\n    this.rotation[2] += roll;\r\n\r\n    let headingMatrix = mat4.identity(mat4.create());\r\n    mat4.rotate(headingMatrix, headingMatrix, Math.radian(this.rotation[0]), [0, 1, 0]);\r\n    let rollMatrix = mat4.identity(mat4.create());\r\n    mat4.rotate(rollMatrix, rollMatrix, Math.radian(this.rotation[2]), [0, 0, -1]);\r\n    let pitchMatrix = mat4.identity(mat4.create());\r\n    mat4.rotate(pitchMatrix, pitchMatrix, Math.radian(this.rotation[1]), [1, 0, 0]);\r\n\r\n    let totalRotationMatrix = mat4.identity(mat4.create());\r\n    mat4.multiply(totalRotationMatrix, totalRotationMatrix, headingMatrix);\r\n    mat4.multiply(totalRotationMatrix, totalRotationMatrix, rollMatrix);\r\n    mat4.multiply(totalRotationMatrix, totalRotationMatrix, pitchMatrix);\r\n    let totalMatrix3 = mat3.fromMat4(mat3.create(), totalRotationMatrix);\r\n\r\n    let rotatedDirection = vec3.transformMat3(vec3.create(), [0, 0, -1], totalMatrix3);\r\n    this.direction = rotatedDirection;\r\n    let rotatedUp = vec3.transformMat3(vec3.create(), [0, 1, 0], totalMatrix3);\r\n    this.up = rotatedUp;\r\n\r\n    this.dirty = true;\r\n  }\r\n  lookAt(target) {\r\n    let zAxis = vec3.normalize(vec3.create(), vec3.subtract(vec3.create(), this.position, target));\r\n    let xAxis = vec3.normalize(vec3.create(), vec3.cross(vec3.create(), this.up, zAxis));\r\n    let yAxis = vec3.normalize(vec3.create(), vec3.cross(vec3.create(), zAxis, xAxis));\r\n    let result = mat4.fromValues(\r\n      xAxis[0], xAxis[1], xAxis[2], 0, \r\n      yAxis[0], yAxis[1], yAxis[2], 0, \r\n      zAxis[0], zAxis[1], zAxis[2], 0, \r\n      this.position[0], this.position[1], this.position[2], 1);\r\n    this.transformMatrix = result;\r\n    return result;\r\n  }\r\n  moveForward(factor) {\r\n    let moveMatrix = mat4.create();\r\n    mat4.identity(moveMatrix);\r\n    mat4.translate(moveMatrix, moveMatrix, [0, 0, factor]);\r\n    mat4.multiply(this.transformMatrix, this.transformMatrix, moveMatrix);\r\n    this.setPositionSync();\r\n  }\r\n  moveRight(factor) {\r\n    let moveMatrix = mat4.create();\r\n    mat4.identity(moveMatrix);\r\n    mat4.translate(moveMatrix, moveMatrix, [factor, 0, 0]);\r\n    mat4.multiply(this.transformMatrix, this.transformMatrix, moveMatrix);\r\n    this.setPositionSync();\r\n  }\r\n  moveUp(factor) {\r\n    let moveMatrix = mat4.create();\r\n    mat4.identity(moveMatrix);\r\n    mat4.translate(moveMatrix, moveMatrix, [0, factor, 0]);\r\n    mat4.multiply(this.transformMatrix, this.transformMatrix, moveMatrix);\r\n    this.setPositionSync();\r\n  }\r\n  setPositionSync() {\r\n    this.position[0] = this.transformMatrix[12];\r\n    this.position[1] = this.transformMatrix[13];\r\n    this.position[2] = this.transformMatrix[14];\r\n  }\r\n  setRotationSync() {\r\n    this.right[0] = this.transformMatrix[0];\r\n    this.right[1] = this.transformMatrix[1];\r\n    this.right[2] = this.transformMatrix[2];\r\n    this.up[0] = this.transformMatrix[4];\r\n    this.up[1] = this.transformMatrix[5];\r\n    this.up[2] = this.transformMatrix[6];\r\n    this.direction[0] = -this.transformMatrix[8];\r\n    this.direction[1] = -this.transformMatrix[9];\r\n    this.direction[2] = -this.transformMatrix[10];\r\n  }\r\n  translate(x, y, z) {\r\n    this.position[0] += x;\r\n    this.position[1] += y;\r\n    this.position[2] += z;\r\n    this.dirty = true;\r\n  }\r\n  setPosition(x, y, z) {\r\n    this.position[0] = x;\r\n    this.position[1] = y;\r\n    this.position[2] = z;\r\n    this.dirty = true;\r\n  }\r\n  getModelViewMatrix() {\r\n    let transformMatrix = this.getTransformMatrix();\r\n    let mvm = mat4.create();\r\n    mat4.invert(mvm, transformMatrix);\r\n    return mvm;\r\n  }\r\n  getTransformMatrix() {\r\n    if (!this.transformMatrix || this.dirty) {\r\n      this.calcRight();\r\n      this.transformMatrix = mat4.fromValues(\r\n        this.right[0], this.right[1], this.right[2], 0, \r\n        this.up[0], this.up[1], this.up[2], 0, \r\n        -this.direction[0], -this.direction[1], -this.direction[2], 0, \r\n        this.position[0], this.position[1], this.position[2], 1);\r\n    }\r\n    return this.transformMatrix;\r\n  }\r\n  calcRight() {\r\n    this.right = vec3.cross(this.right, this.direction, this.up);\r\n  }\r\n  getRotationMatrix() {\r\n    this.rotationMatrix = mat4.clone(this.transformMatrix);\r\n    this.rotationMatrix[12] = 0;\r\n    this.rotationMatrix[13] = 0;\r\n    this.rotationMatrix[14] = 0;\r\n    return this.rotationMatrix;\r\n  }\r\n  getNormalMatrix() {\r\n    let normalMatrix4 = mat4.create();\r\n    let modelViewMatrixInv = this.getModelViewMatrix();\r\n    mat4.invert(modelViewMatrixInv, modelViewMatrixInv);\r\n    mat4.transpose(normalMatrix4, modelViewMatrixInv);\r\n    normalMatrix4[3] = 0.0;\r\n    normalMatrix4[7] = 0.0;\r\n    normalMatrix4[11] = 0.0;\r\n    return normalMatrix4;\r\n  }\r\n  getViewRay(tc, relFar) {\r\n    const fovy = Math.radian(this.fovyDegree);\r\n    let aspectRatio = tc.width / tc.height;\r\n    let tangentOfHalfFovy = Math.tan(fovy / 2);\r\n    let hfar = 2.0 * tangentOfHalfFovy * relFar;\r\n    let wfar = hfar * aspectRatio;    \r\n    let ray = vec3.fromValues(wfar * (tc.x - 0.5), hfar * (tc.y - 0.5), -relFar);\r\n    return ray;              \r\n  }\r\n}","const {vec3} = self.glMatrix;\r\n\r\nexport default class FrameBufferObject {\r\n  gl;\r\n  frameBuffer;\r\n  depthBuffer;\r\n  texture;\r\n  height;\r\n  /**\r\n   * constructor\r\n   * @param {*} gl\r\n   * @param {*} options \r\n   */\r\n  constructor(gl, canvas, shaderInfo, options, globalOptions) {\r\n    this.gl = gl;\r\n    this.canvas = canvas;\r\n    this.shaderInfo = shaderInfo;\r\n    this.frameBuffer = gl.createFramebuffer();\r\n    this.depthBuffer = gl.createRenderbuffer();\r\n    this.texture = gl.createTexture();\r\n    this.options = options;\r\n    this.globalOptions = globalOptions;\r\n    this.init();\r\n  }\r\n  init() {\r\n    const gl = this.gl;\r\n    const canvas = this.canvas;\r\n    this.textureType = this.options?.textureType ? this.options.textureType : 0;\r\n    this.clearColor = this.options?.clearColor ? this.options.clearColor : vec3.fromValues(1.0, 1.0, 1.0);\r\n    this.name = this.options?.name ? this.options.name : \"Untitled FrameBuffer\";\r\n    this.width = new Int32Array([(this.options?.width) ? this.options.width : canvas.width]);\r\n    this.height = new Int32Array([(this.options?.height) ? this.options.height : canvas.height]);\r\n    gl.activeTexture(gl.TEXTURE0);\r\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);  \r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.width[0], this.height[0], 0, gl.RGBA, gl.UNSIGNED_BYTE, null); \r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.frameBuffer);\r\n    gl.bindRenderbuffer(gl.RENDERBUFFER, this.depthBuffer);\r\n    gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, this.width[0], this.height[0]);\r\n    gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, this.depthBuffer);\r\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.texture, 0);\r\n    if (gl.checkFramebufferStatus(gl.FRAMEBUFFER) !== gl.FRAMEBUFFER_COMPLETE) {\r\n      throw new Error(\"Incomplete frame buffer object.\");\r\n    }\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n  }\r\n  clear() {\r\n    const gl = this.gl;\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.frameBuffer);\r\n    gl.clearColor(this.clearColor[0], this.clearColor[1], this.clearColor[2], 1);\r\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n  }\r\n  bind(shaderInfo = this.shaderInfo) {\r\n    const gl = this.gl;\r\n    gl.uniform1i(shaderInfo.uniformLocations.textureType, this.textureType);\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.frameBuffer);\r\n  }\r\n  unbind() {\r\n    const gl = this.gl;\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n  }\r\n  getNormal(x, y) {\r\n    const gl = this.gl;\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.frameBuffer);\r\n    const pixels = new Uint8Array(4);\r\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\r\n    gl.readPixels(x, y, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n    const pixelsF32 = new Float32Array([pixels[0] / 255.0, pixels[1] / 255.0, pixels[2] / 255.0, pixels[3] / 255.0]);\r\n    return this.decodeNormal(pixelsF32);\r\n  }\r\n  getColor(x, y) {\r\n    const gl = this.gl;\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.frameBuffer);\r\n    const pixels = new Uint8Array(4);\r\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\r\n    gl.readPixels(x, y, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n    return this.convertColorToId(pixels);\r\n  }\r\n  getDepth(x, y) {\r\n    const gl = this.gl;\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.frameBuffer);\r\n    const pixels = new Uint8Array(4);\r\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\r\n    gl.readPixels(x, y, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n    const pixelsF32 = new Float32Array([pixels[0] / 255.0, pixels[1] / 255.0, pixels[2] / 255.0, pixels[3] / 255.0]);\r\n    const result = this.unpackDepth(pixelsF32) * this.globalOptions.far;\r\n    return result;\r\n  }\r\n  convertIdToColor(id) {\r\n    const calc = (value, div) => Math.floor(value / div) % 256 / 255;\r\n    return [calc(id, 16777216), calc(id, 65536), calc(id, 256), calc(id, 1)];\r\n  }\r\n  convertColorToId(color) {\r\n    return (color[0] * 16777216) + (color[1] * 65536) + (color[2] * 256) + (color[3]);\r\n  }\r\n  convertColor255ToId(color) {\r\n    return (color[0] * 16777216 * 255) + (color[1] * 65536 * 255) + (color[2] * 256 * 255) + (color[3] * 255);\r\n  }\r\n  unpackDepth(rgba_depth) {\r\n    return rgba_depth[0] + rgba_depth[1] * 1.0 / 255.0 + rgba_depth[2] * 1.0 / 65025.0 + rgba_depth[3] * 1.0 / 16581375.0;\r\n  }\r\n  decodeNormal(normal){\r\n    let result = vec3.fromValues(normal[0] * 2.0 - 1.0, normal[1] * 2.0 - 1.0, normal[2] * 2.0 - 1.0);\r\n    vec3.normalize(result, result);\r\n    return result;\r\n  }\r\n}","export default class RenderableObjectList {\r\n  renderableObjects;\r\n  length;\r\n  constructor() {\r\n    this.init();\r\n  }\r\n  init() {\r\n    this.renderableObjects = [];\r\n  }\r\n  findById(id) {\r\n    return this.renderableObjects.find((renderableObject) => {\r\n      return renderableObject.id === id;\r\n    });\r\n  }\r\n  set(renderableObjects) {\r\n    this.renderableObjects = renderableObjects;\r\n  }\r\n  get() {\r\n    return this.renderableObjects;\r\n  }\r\n  push(renderableObject) {\r\n    this.renderableObjects.push(renderableObject);\r\n  }\r\n  pop() {\r\n    return this.renderableObjects.pop();\r\n  }\r\n  size() {\r\n    return this.renderableObjects.length;\r\n  }\r\n  removeAll() {\r\n    this.renderableObjects.length = 0;\r\n  }\r\n}","const attributes = [\"aVertexPosition\", \"aVertexColor\", \"aVertexSelectionColor\", \"aVertexNormal\", \"aTextureCoordinate\"];\r\nconst uniforms = [\"uModelViewMatrix\", \"uProjectionMatrix\", \"uOrthographicMatrix\", \"uObjectMatrix\", \"uRotationMatrix\", \"uNormalMatrix\", \"uPointSize\", \"uNearFar\", \"uPositionType\", \"uTexture\", \"uTextureType\"];\r\nconst vertexShaderSource = `\r\n  attribute vec3 aVertexPosition;\r\n  attribute vec4 aVertexColor;\r\n  attribute vec4 aVertexSelectionColor;\r\n  attribute vec3 aVertexNormal;\r\n  attribute vec2 aTextureCoordinate;\r\n  \r\n  uniform mat4 uModelViewMatrix;\r\n  uniform mat4 uProjectionMatrix;\r\n  uniform mat4 uOrthographicMatrix;\r\n  uniform mat4 uObjectMatrix;\r\n  uniform mat4 uRotationMatrix;\r\n  uniform mat4 uNormalMatrix;\r\n  uniform float uPointSize;\r\n  uniform vec2 uNearFar;\r\n  uniform int uPositionType; // 1: plane, 2: depth, basic\r\n\r\n  varying vec4 vColor;\r\n  varying vec4 vSelectionColor;\r\n  varying vec3 vTransformedNormal;\r\n  varying vec2 vTextureCoordinate;\r\n  varying float vDepth;\r\n\r\n  vec4 getOrthoPosition() {\r\n    vec4 transformedPosition = uObjectMatrix * vec4(aVertexPosition, 1.0);\r\n    vec4 orthoPosition = uModelViewMatrix * vec4(transformedPosition.xyz, 1.0);\r\n    return orthoPosition;\r\n  }\r\n  vec3 getRotatedNormal() {\r\n    vec3 rotatedModelNormal = (uRotationMatrix * vec4(aVertexNormal, 1.0)).xyz;\r\n    vec3 rotatedNormal = normalize(uNormalMatrix * vec4(rotatedModelNormal, 1.0)).xyz;\r\n    return rotatedNormal;\r\n  }\r\n  float calcDepth(float zValue) {\r\n    return -(zValue / uNearFar.y);\r\n  }\r\n\r\n  void main(void) {\r\n    vColor = aVertexColor;\r\n    vSelectionColor = aVertexSelectionColor;\r\n    gl_PointSize = uPointSize;\r\n\r\n    vec4 orthoPosition = getOrthoPosition();\r\n    vTransformedNormal = getRotatedNormal();\r\n\r\n    vDepth = calcDepth(orthoPosition.z);\r\n    gl_Position = uProjectionMatrix * orthoPosition;\r\n    \r\n    vTextureCoordinate = aTextureCoordinate;\r\n  }\r\n`;\r\n\r\nconst fragmentShaderSource = `\r\n  precision highp float;\r\n\r\n  varying vec4 vColor;\r\n  varying vec4 vSelectionColor;\r\n  varying vec2 vTextureCoordinate;\r\n  varying vec3 vTransformedNormal;\r\n  varying float vDepth;\r\n\r\n  uniform sampler2D uTexture;\r\n  uniform int uTextureType; // default : color, 1 : texture, 2 : reverseY, 3 : depth\r\n  \r\n  vec3 encodeNormal(in vec3 normal) {\r\n    return normal.xyz * 0.5 + 0.5;\r\n  }\r\n  vec3 decodeNormal(in vec3 normal){\r\n    return normal * 2.0 - 1.0;\r\n  }\r\n  vec4 packDepth(float depth) {\r\n    vec4 enc = vec4(1.0, 255.0, 65025.0, 16581375.0) * depth;\r\n    enc = fract(enc);\r\n    enc -= enc.yzww * vec4(1.0/255.0, 1.0/255.0, 1.0/255.0, 0.0);\r\n    return enc;\r\n  }\r\n\r\n  void main(void) {\r\n    if (uTextureType == 1) {\r\n      //gl_FragColor = vec4(vColor.xyz, vColor.a);\r\n      gl_FragColor = texture2D(uTexture, vec2(vTextureCoordinate.x, 1.0 - vTextureCoordinate.y));\r\n    } else if (uTextureType == 2) {\r\n      gl_FragColor = vec4(vSelectionColor.xyz, vSelectionColor.a);\r\n    } else if (uTextureType == 3) {\r\n      gl_FragColor = packDepth(vDepth);\r\n    } else if (uTextureType == 4) {\r\n      gl_FragColor = vec4(encodeNormal(vTransformedNormal), 1.0);\r\n    } else if (uTextureType == 5) {\r\n      gl_FragColor = vec4(vColor.xyz, vColor.a);\r\n    }  else {\r\n      gl_FragColor = vec4(vColor.xyz, vColor.a);\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DefaultShader = {\r\n  attributes: attributes,\r\n  uniforms: uniforms,\r\n  vertexShaderSource: vertexShaderSource,\r\n  fragmentShaderSource: fragmentShaderSource,\r\n};","const {mat2, mat3, mat4, vec2, vec3, vec4} = self.glMatrix; // eslint-disable-line no-unused-vars\r\nclass ShaderProcess {\r\n  constructor(gl, shader) {\r\n    let privateGl = gl;\r\n    let privateShader = shader;\r\n    this.getGl = () => {\r\n      return privateGl;\r\n    }\r\n    this.getCanvas = () => {\r\n      return privateGl.canvas;\r\n    }\r\n    this.getShader = () => {\r\n      return privateShader;\r\n    }\r\n    this.getShaderInfo = () => {\r\n      return privateShader.shaderInfo;\r\n    }\r\n  }\r\n  preprocess() {\r\n    throw new Error(\"preprocess() is abstract method. Abstract methods must be overriding.\");\r\n  }\r\n  process() {\r\n    throw new Error(\"process() is abstract method. Abstract methods must be overriding.\");\r\n  }\r\n  postprocess() {\r\n    throw new Error(\"postprocess() is abstract method. Abstract methods must be overriding.\");\r\n  }\r\n}\r\nexport default ShaderProcess;","const {mat2, mat3, mat4, vec2, vec3, vec4} = self.glMatrix; // eslint-disable-line no-unused-vars\r\n\r\nimport ShaderProcess from '@/assets/webgl/abstract/ShaderProcess';\r\n\r\nclass DefaultShaderProcess extends ShaderProcess {\r\n  renderableList;\r\n  frameBufferObjs;\r\n  constructor(gl, shader, camera, frameBufferObjs, renderableList) {\r\n    super(gl, shader);\r\n    this.camera = camera;\r\n    this.frameBufferObjs = frameBufferObjs;\r\n    this.renderableList = renderableList;\r\n  }\r\n  preprocess() {\r\n    \r\n  }\r\n  process(globalOptions) {\r\n    /** @type {WebGLRenderingContext} */\r\n    const gl = this.getGl();\r\n    /** @type {HTMLCanvasElement} */\r\n    //const canvas = this.getCanvas();\r\n    const shaderInfo = this.getShader().shaderInfo;\r\n    this.getShader().useProgram();\r\n\r\n    let projectionMatrix = mat4.create();\r\n    mat4.perspective(projectionMatrix, this.camera.fovyRadian, globalOptions.aspect, parseFloat(globalOptions.near), parseFloat(globalOptions.far));\r\n    let modelViewMatrix = this.camera.getModelViewMatrix();\r\n    let normalMatrix = this.camera.getNormalMatrix();\r\n\r\n    gl.uniformMatrix4fv(shaderInfo.uniformLocations.projectionMatrix, false, projectionMatrix);\r\n    gl.uniformMatrix4fv(shaderInfo.uniformLocations.modelViewMatrix, false, modelViewMatrix);\r\n    gl.uniformMatrix4fv(shaderInfo.uniformLocations.normalMatrix, false, normalMatrix);\r\n    gl.uniform2fv(shaderInfo.uniformLocations.nearFar, vec2.fromValues(parseFloat(globalOptions.near), parseFloat(globalOptions.far)));\r\n    gl.uniform1f(shaderInfo.uniformLocations.pointSize, globalOptions.pointSize);\r\n    gl.uniform1i(shaderInfo.uniformLocations.textureType, 0);\r\n    \r\n    this.frameBufferObjs.forEach((frameBufferObj) => {\r\n      frameBufferObj.clear();\r\n    });\r\n    this.renderableList.get().forEach((renderableObj) => {\r\n      (renderableObj.getId() === undefined) ? renderableObj.createRenderableObjectId(this.renderableList) : undefined;\r\n      renderableObj.render(gl, shaderInfo, this.frameBufferObjs);\r\n    });\r\n  }\r\n  postprocess() {\r\n    //\r\n  }\r\n}\r\n\r\nexport default DefaultShaderProcess;","const attributes = [\"aVertexPosition\", \"aTextureCoordinate\"];\r\nconst uniforms = [\"uIsMain\", \"uSsaoKernel\", \"uScreenSize\", \"uNoiseScale\", \r\n\"uAspectRatio\", \"uProjectionMatrix\", \"uTangentOfHalfFovy\", \"uNearFar\", \r\n\"uMainTexture\", \"uAlbedoTexture\", \"uSelectionTexture\", \"uNormalTexture\", \r\n\"uDepthTexture\", \"uNoiseTexture\", \"uLightMapTexture\", \"uCameraTransformMatrix\", \"uSunModelViewMatrix\", \"uOrthographicMatrix\", \"uSunNormalMatrix\",\r\n\"uEnableGlobalLight\", \"uEnableEdge\", \"uEnableSsao\", \"uSelectedObjectId\"];\r\n\r\nconst vertexShaderSource = `\r\n  #pragma vscode_glsllint_stage : vert\r\n  attribute vec3 aVertexPosition;\r\n  attribute vec2 aTextureCoordinate;\r\n\r\n  varying vec2 vTextureCoordinate;\r\n  void main(void) {\r\n    vTextureCoordinate = aTextureCoordinate;\r\n    gl_Position = vec4(aVertexPosition.xy * 2.0 - 1.0, 0.0, 1.0);\r\n  }\r\n`;\r\n\r\nconst fragmentShaderSource = `\r\n  #pragma vscode_glsllint_stage : frag\r\n  precision highp float;\r\n  \r\n  uniform int uIsMain;\r\n  uniform float uTangentOfHalfFovy;\r\n  uniform float uAspectRatio;\r\n\r\n  uniform vec2 uScreenSize;  \r\n  uniform vec2 uNearFar;\r\n  uniform vec2 uNoiseScale;\r\n  uniform mat4 uProjectionMatrix;\r\n  uniform mat4 uCameraTransformMatrix;\r\n  uniform mat4 uSunModelViewMatrix;\r\n  uniform mat4 uOrthographicMatrix;\r\n  uniform mat4 uSunNormalMatrix;\r\n\r\n  uniform sampler2D uMainTexture;\r\n  uniform sampler2D uAlbedoTexture;\r\n  uniform sampler2D uSelectionTexture;\r\n  uniform sampler2D uNormalTexture;\r\n  uniform sampler2D uDepthTexture;\r\n  uniform sampler2D uLightMapTexture;\r\n  uniform sampler2D uNoiseTexture;\r\n  uniform vec3 uSsaoKernel[16];\r\n\r\n  uniform int uEnableGlobalLight;\r\n  uniform int uEnableEdge;\r\n  uniform int uEnableSsao;\r\n  uniform float uSelectedObjectId;\r\n\r\n  varying vec2 vTextureCoordinate;\r\n  \r\n  const int kernelSize = 16;\r\n  const float fKernelSize = float(kernelSize);\r\n\r\n  vec4 decodeNormal(in vec4 normal) {\r\n    return vec4(normal.xyz * 2.0 - 1.0, normal.w);\r\n  }\r\n  float convertColorToId(vec4 color) {\r\n    return (color.r * 255.0 * 16777216.0) + (color.g * 255.0 * 65536.0) + (color.b * 255.0 * 256.0) + (color.a * 255.0);\r\n  }\r\n  float unpackDepth(vec4 packedDepth) {\r\n    return dot(packedDepth, vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0));\r\n  }\r\n  vec3 getViewRay(vec2 tc, in float relFar) {\r\n    float hfar = 2.0 * uTangentOfHalfFovy * relFar;\r\n    float wfar = hfar * uAspectRatio;    \r\n    vec3 ray = vec3(wfar * (tc.x - 0.5), hfar * (tc.y - 0.5), -relFar);    \r\n    return ray;\r\n  }\r\n  vec4 getAlbedo(vec2 screenPos) {\r\n    return texture2D(uAlbedoTexture, screenPos);\r\n  }\r\n  vec4 getSelection(vec2 screenPos) {\r\n    return texture2D(uSelectionTexture, screenPos);\r\n  }\r\n  vec4 getNormal(vec2 screenPos) {\r\n    return texture2D(uNormalTexture, screenPos);\r\n  }\r\n  vec4 getDepth(vec2 screenPos) {\r\n    //return texture2D(uLightMapTexture, screenPos);\r\n    return texture2D(uDepthTexture, screenPos);\r\n  }\r\n\r\n  float getOcclusion(vec3 origin, vec3 rotatedKernel, float radius) {\r\n    float resultOcclusion = 1.0;\r\n    vec3 sample = origin + (rotatedKernel * radius);\r\n    vec4 offset = uProjectionMatrix * vec4(sample, 1.0);\r\n    vec3 offsetCoord = vec3(offset.xyz);\t\t\t\t\r\n    offsetCoord.xyz /= offset.w;\r\n    offsetCoord.xyz = offsetCoord.xyz * 0.5 + 0.5;\r\n    if ((abs(offsetCoord.x) > 1.0 || abs(offsetCoord.y) > 1.0) && (abs(offsetCoord.x) < 0.0 || abs(offsetCoord.y) < 0.0)) {\r\n        resultOcclusion = 0.0;\r\n    } else {\r\n      float depthBufferValue = unpackDepth(texture2D(uDepthTexture, offsetCoord.xy));\r\n      float sampleZ = -sample.z;\r\n      float bufferZ = depthBufferValue * uNearFar.y;\r\n      float zDiff = abs(bufferZ - sampleZ);\r\n      if (zDiff < radius) {\r\n        if (bufferZ < sampleZ) {\r\n          resultOcclusion = 0.0;\r\n        }\r\n      }\r\n    }\r\n    return resultOcclusion;\r\n  }\r\n\r\n  vec4 getSSAO(in vec2 screenPos) {\r\n    float occlusionA = 0.0;\r\n    float occlusionB = 0.0;\r\n    float occlusionC = 0.0;\r\n\r\n    float linearDepth = unpackDepth(getDepth(screenPos));\r\n    float originDepth = linearDepth * uNearFar.y;\r\n    vec3 origin = getViewRay(screenPos, originDepth);\r\n    vec3 normal = decodeNormal(texture2D(uNormalTexture, screenPos)).xyz;\r\n\r\n    vec3 rvec = texture2D(uNoiseTexture, screenPos.xy * uNoiseScale).xyz * 2.0 - 1.0;\r\n\t\tvec3 tangent = normalize(rvec - normal * dot(rvec, normal));\r\n\t\tvec3 bitangent = normalize(cross(normal, tangent));\r\n\t\tmat3 tbn = mat3(tangent, bitangent, normal);   \r\n\t\tfor (int i = 0; i < kernelSize; i++) {    \t\r\n      vec3 rotatedKernel = tbn * vec3(uSsaoKernel[i].x, uSsaoKernel[i].y, uSsaoKernel[i].z);\r\n      occlusionA += getOcclusion(origin, rotatedKernel, 8.5);\r\n      occlusionB += getOcclusion(origin, rotatedKernel, 16.0);\r\n      occlusionC += getOcclusion(origin, rotatedKernel, 32.0);\r\n    }\r\n\r\n    float tolerance = 0.80;\r\n    float result = (occlusionA + occlusionB + occlusionC) / (fKernelSize * 3.0);\r\n    if (result > tolerance) {\r\n      result = 1.0;\r\n    }\r\n    //return result;\r\n\r\n    return vec4(occlusionA / fKernelSize, occlusionB / fKernelSize, occlusionC / fKernelSize, 1.0);\r\n  }\r\n\r\n  float compareNormalOffset(in vec4 normalA, in vec4 normalB) {\r\n    float result = 0.0; \r\n    result += abs(normalA.x - normalB.x);\r\n    result += abs(normalA.y - normalB.y);\r\n    result += abs(normalA.z - normalB.z);\r\n    return result;\r\n  }\r\n\r\n  bool isEdge(vec2 screenPos) {\r\n    float width = 1.0 / uScreenSize.x;\r\n\t  float height = 1.0 / uScreenSize.y;\r\n    vec2 rightPos = vec2(screenPos.x + width, screenPos.y);\r\n    vec2 bottomPos = vec2(screenPos.x, screenPos.y + height);\r\n    vec2 crossPos = vec2(screenPos.x + width, screenPos.y + height);\r\n    vec2 leftPos = vec2(screenPos.x - width, screenPos.y);\r\n    \r\n    float selection = convertColorToId(getSelection(screenPos));\r\n    float selectionRight = convertColorToId(getSelection(rightPos));\r\n    float selectionBottom = convertColorToId(getSelection(bottomPos));\r\n    float selectionCross = convertColorToId(getSelection(crossPos));\r\n    float selectionLeft = convertColorToId(getSelection(leftPos));\r\n\r\n    vec4 normal = decodeNormal(getNormal(screenPos));\r\n    vec4 normalRight = decodeNormal(getNormal(rightPos));\r\n    vec4 normalBottom = decodeNormal(getNormal(bottomPos));\r\n    vec4 normalCross = decodeNormal(getNormal(crossPos));\r\n\r\n    float compareOffset = 0.3;\r\n    bool normalCompareRight = compareOffset < compareNormalOffset(normal, normalRight);\r\n    bool normalCompareBottom = compareOffset < compareNormalOffset(normal, normalBottom);\r\n    bool normalCompareCross = compareOffset < compareNormalOffset(normal, normalCross);\r\n\r\n    bool isEdgeByNormalCompare = normalCompareRight || normalCompareBottom || normalCompareCross;\r\n    bool isEdgeBySelection = selection != selectionBottom || selection != selectionRight || selection != selectionCross || selection != selectionLeft;\r\n\r\n    return isEdgeByNormalCompare || isEdgeBySelection;\r\n  }\r\n\r\n  bool isShadow(vec2 screenPos) {\r\n    bool result = false;\r\n\r\n    float linearDepth = unpackDepth(getDepth(screenPos));\r\n    float originDepth = linearDepth * uNearFar.y;\r\n    vec3 positionCC = getViewRay(screenPos, originDepth);\r\n    vec4 positionWC = uCameraTransformMatrix * vec4(positionCC, 1.0);\r\n    vec4 positionSC = uSunModelViewMatrix * vec4(positionWC.xyz, 1.0);\r\n\r\n    positionSC = uOrthographicMatrix * positionSC;\r\n    vec3 positionUnitarySCaux = positionSC.xyz / positionSC.w; // Range : -1.0 ~ 1.0\r\n    vec3 positionUnitarySC = positionUnitarySCaux * 0.5 + 0.5; // Range = 0.0 ~ 1.0\r\n\r\n    if (positionUnitarySC.z > 0.9999) {\r\n      return result;\r\n    }\r\n    if (positionUnitarySC.x > 1.0 || positionUnitarySC.x < 0.0 || positionUnitarySC.y > 1.0 || positionUnitarySC.y < 0.0) {\r\n      return result;\r\n    }\r\n\r\n    vec4 fromDepthSunTextureVec4 = texture2D(uLightMapTexture, positionUnitarySC.xy) ;\r\n    fromDepthSunTextureVec4 = fromDepthSunTextureVec4 * 1.001;\r\n    float fromDepthSunTexture = unpackDepth(fromDepthSunTextureVec4);\r\n\r\n    result = positionUnitarySC.z > fromDepthSunTexture;\r\n    return result;\r\n  }\r\n\r\n  void main(void) {\r\n    float width = 1.0 / uScreenSize.x;\r\n\t  float height = 1.0 / uScreenSize.y;\r\n    vec2 screenPos = vec2(gl_FragCoord.x / uScreenSize.x, gl_FragCoord.y / uScreenSize.y);\r\n\r\n    vec4 albedo = getAlbedo(screenPos);\r\n    vec4 normal = decodeNormal(getNormal(screenPos));\r\n\r\n    vec4 selectionColor = getSelection(screenPos);\r\n    float selection = convertColorToId(getSelection(screenPos));\r\n\r\n    vec3 ambientLight = vec3(0.3, 0.3, 0.3);\r\n    vec3 directionalLightColor = vec3(0.9, 0.9, 0.9);\r\n    vec3 directionalVector = normalize(vec3(0.6, 0.6, 0.9));\r\n    float directional = max(dot(normal.xyz, directionalVector), 0.0);\r\n    vec3 vLighting = ambientLight + (directionalLightColor * directional);\r\n\r\n    if (uIsMain == 1) {\r\n      vec3 result = albedo.xyz;\r\n      \r\n      if (uEnableSsao == 1) {\r\n        //float ssaoResult = getSSAO(screenPos);\r\n        float tolerance = 0.80;\r\n        vec4 ssaoResult = getSSAO(screenPos);\r\n\r\n        if (ssaoResult.x < tolerance) {\r\n          result = result * ssaoResult.x;\r\n        }\r\n        if (ssaoResult.y < tolerance) {\r\n          result = result * (ssaoResult.y + 0.1);\r\n        }\r\n        if (ssaoResult.z < tolerance) {\r\n          result = result * (ssaoResult.z + 0.2);\r\n        }\r\n        //result = result * ssaoResult;\r\n      }\r\n\r\n      //result = result * vLighting;\r\n      if (uEnableGlobalLight == 1 && isShadow(screenPos)) {\r\n        result = result * 0.5;\r\n      }\r\n\r\n      if (selection == uSelectedObjectId) {\r\n        result.b = result.b * 1.5;\r\n      }\r\n      if (uEnableEdge == 1 && isEdge(screenPos)) {\r\n        result = result * 0.5;\r\n        if (selection == uSelectedObjectId) {\r\n          result.b = 1.0;\r\n        }\r\n      }\r\n      gl_FragColor = vec4(result, 1.0);\r\n    } else {\r\n      vec4 textureColor = texture2D(uMainTexture, vTextureCoordinate);\r\n      gl_FragColor = vec4(textureColor.rgb, textureColor.a);\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ScreenShader = {\r\n  attributes: attributes,\r\n  uniforms: uniforms,\r\n  vertexShaderSource: vertexShaderSource,\r\n  fragmentShaderSource: fragmentShaderSource,\r\n};","export default class Buffer {\r\n  gl = undefined;\r\n  buffers = {};\r\n  constructor(gl) {\r\n    this.gl = gl;\r\n  }\r\n  get buffers() {\r\n    return this.buffers;\r\n  }\r\n  init() {\r\n    const result = {};\r\n    this.buffers = result;\r\n  }\r\n  bindBuffer(glBuffer, size = 3, attributeLocation) {\r\n    let gl = this.gl;\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, glBuffer);\r\n    gl.vertexAttribPointer(attributeLocation, size, gl.FLOAT, false, 0, 0);\r\n  }\r\n  createBuffer(data) {\r\n    let gl = this.gl;\r\n    let buffer = gl.createBuffer();\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\r\n    gl.bufferData(gl.ARRAY_BUFFER, data, gl.STATIC_DRAW);\r\n    return buffer;\r\n  }\r\n  createIndexBuffer(data) {\r\n    let gl = this.gl;\r\n    let buffer = gl.createBuffer();\r\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer);\r\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, data, gl.STATIC_DRAW);\r\n    return buffer;\r\n  }\r\n  createTexture(image) {\r\n    let gl = this.gl;\r\n    let texWrap = gl.CLAMP_TO_EDGE;\r\n    let texture = gl.createTexture();\r\n    gl.bindTexture(gl.TEXTURE_2D, texture);\r\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, texWrap);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, texWrap);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST_MIPMAP_NEAREST);\r\n    gl.generateMipmap(gl.TEXTURE_2D);\r\n    return texture;\r\n  }\r\n  createNoiseTexture() {\r\n    let pixels = new Uint8Array(4*4*4);\r\n    for (var y = 0; y < 4; y++) {\r\n\t\t\tfor (var x = 0; x < 4; x++) {\r\n\t\t\t\tpixels[(y * 4 + x) * 4 + 0] = Math.floor(255 * Math.random());\r\n\t\t\t\tpixels[(y * 4 + x) * 4 + 1] = Math.floor(255 * Math.random());\r\n\t\t\t\tpixels[(y * 4 + x) * 4 + 2] = Math.floor(255 * Math.random());\r\n\t\t\t\tpixels[(y * 4 + x) * 4 + 3] = Math.floor(255 * Math.random());\r\n\t\t\t}\r\n\t\t}\r\n    let gl = this.gl;\r\n    let texture = gl.createTexture();\r\n    gl.bindTexture(gl.TEXTURE_2D, texture);\r\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, 4, 4, 0, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);\r\n    gl.bindTexture(gl.TEXTURE_2D, null);\r\n    return texture;\r\n  }\r\n  convertFaceColor(faceColors) {\r\n    let colors = [];\r\n    faceColors.forEach((color) => {\r\n      colors = colors.concat(color, color, color, color);\r\n    });\r\n    return colors;\r\n  }\r\n}","const {mat2, mat3, mat4, vec2, vec3, vec4} = self.glMatrix; // eslint-disable-line no-unused-vars\r\n// abstract\r\nexport default class Renderable {\r\n  id;\r\n  name;\r\n  buffer;\r\n  position;\r\n  rotation;\r\n  color;\r\n  selectionColor;\r\n  transformMatrix;\r\n  rotationMatrix;\r\n  constructor() {\r\n    if (this.constructor === Renderable) {\r\n      throw new Error(\"Renderable is abstract class. Created an instance of an abstract class.\");\r\n    }\r\n    this.name = \"Untitled\";\r\n    this.position = vec3.fromValues(0, 0, 0);\r\n    this.rotation = vec3.fromValues(0, 0, 0);\r\n    this.color = vec4.fromValues(0.4, 0.4, 0.4, 1);\r\n    this.selectionColor = vec4.fromValues(0.0, 0.0, 0.0, 1);\r\n    this.dirty = false;\r\n  }\r\n  render() {\r\n    throw new Error(\"render() is abstract method. Abstract methods must be overriding.\");\r\n  }\r\n  getBuffer() {\r\n    throw new Error(\"render() is abstract method. Abstract methods must be overriding.\");\r\n  }\r\n  getTransformMatrix() {\r\n    if (!this.transformMatrix || this.dirty === true) {\r\n      let tm = mat4.create();\r\n      mat4.identity(tm);\r\n      mat4.rotate(tm, tm, Math.radian(this.rotation[1]), vec3.fromValues(0, 1, 0));\r\n      mat4.rotate(tm, tm, Math.radian(this.rotation[2]), vec3.fromValues(0, 0, 1));\r\n      mat4.rotate(tm, tm, Math.radian(this.rotation[0]), vec3.fromValues(1, 0, 0));\r\n      tm[12] = this.position[0];\r\n      tm[13] = this.position[1];\r\n      tm[14] = this.position[2];\r\n      this.transformMatrix = tm;\r\n    }\r\n    return this.transformMatrix;\r\n  }\r\n  getRotationMatrix() {\r\n    if (!this.rotationMatrix || this.dirty === true) {\r\n      this.rotationMatrix = mat4.clone(this.getTransformMatrix());\r\n      this.rotationMatrix[12] = 0;\r\n      this.rotationMatrix[13] = 0;\r\n      this.rotationMatrix[14] = 0;\r\n    }\r\n    return this.rotationMatrix;\r\n  }\r\n  getId() {\r\n    return this.id;\r\n  }\r\n  calcNormal(pa, pb, pc) { // outer(cross) product \r\n    let d0 = vec3.create();\r\n    let d1 = vec3.create();\r\n    d0 = vec3.subtract(d0, pb, pa);\r\n    d1 = vec3.subtract(d1, pc, pb);\r\n    let normal = vec3.create();\r\n    vec3.cross(normal, d0, d1);\r\n    vec3.normalize(normal, normal);\r\n    return normal;\r\n  }\r\n  intersection(a1, a2, b1, b2) {\r\n    let a = this.dot(this.cross(a1, a2, b1), this.cross(a1, a2, b2));\r\n    let b = this.dot(this.cross(b1, b2, a1), this.cross(b1, b2, a2));\r\n    return a <= 0 && b <= 0;\r\n  }\r\n  cross(a, b, c) {\r\n    let d0 = vec3.subtract(vec3.create(), b, a);\r\n    let d1 = vec3.subtract(vec3.create(), c, b);\r\n    return vec3.cross(vec3.create(), d0, d1);\r\n  }\r\n  dot(a, b) {\r\n    return vec3.dot(a, b);\r\n  }\r\n  normal(a, b, c) {\r\n    let crossed = this.cross(a, b, c);\r\n    return vec3.normalize(crossed, crossed);\r\n  }\r\n  getMinMax(positions) {\r\n    let minx = Number.MAX_SAFE_INTEGER;\r\n    let miny = Number.MAX_SAFE_INTEGER;\r\n    let maxx = Number.MIN_SAFE_INTEGER;\r\n    let maxy = Number.MIN_SAFE_INTEGER;\r\n    positions.forEach((position) => {\r\n      minx = position[0] < minx ? position[0] : minx;\r\n      miny = position[1] < miny ? position[1] : miny;\r\n      maxx = position[0] > maxx ? position[0] : maxx;\r\n      maxy = position[1] > maxy ? position[1] : maxy;\r\n    });\r\n    return {\r\n      minx : minx, \r\n      miny : miny, \r\n      maxx : maxx, \r\n      maxy : maxy\r\n    }\r\n  }\r\n  convertIdToColor(id = this.id) {\r\n    const calc = (value, div) => Math.floor(value / div) % 256 / 255;\r\n    return vec4.fromValues(calc(id, 16777216), calc(id, 65536), calc(id, 256), calc(id, 1));\r\n  }\r\n  convertColorToId(color) {\r\n    return (color[0] * 16777216) + (color[1] * 65536) + (color[2] * 256) +(color[3]);\r\n  }\r\n  createRenderableObjectId(renderableList) {\r\n    let result = this.id;\r\n    while (result === undefined) {\r\n      const ID_RANGE = 10000000;\r\n      let randomId = Math.ceil(Math.random() * ID_RANGE);\r\n      let obj = renderableList.get().find((renderableObj) => {\r\n        return renderableObj.id == randomId;\r\n      });\r\n      if (!obj) {\r\n        result = randomId;\r\n        this.id = randomId;\r\n        this.selectionColor = this.convertIdToColor(randomId);\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n}\r\n","const {vec3} = self.glMatrix; // eslint-disable-line no-unused-vars\r\nimport Plane from './Plane.js';\r\n\r\nexport default class Triangle {\r\n  positions; // [vec3, vec3, vec3]\r\n  normal; // vec3\r\n  plane;\r\n  constructor(positionA, positionB, positionC) {\r\n    this.positions = [positionA, positionB, positionC];\r\n    this.getNormal();\r\n  }\r\n  get(index) {\r\n    return this.positions[index];\r\n  }\r\n  getNormal() {\r\n    if (this.normal === undefined) {\r\n      let directionA = vec3.subtract(vec3.create(), this.positions[1], this.positions[0]);\r\n      let directionB = vec3.subtract(vec3.create(), this.positions[2], this.positions[1]);\r\n      let normal = vec3.cross(vec3.create(), directionA, directionB);\r\n      vec3.normalize(normal, normal);\r\n      this.normal = normal;\r\n    }\r\n    return this.normal;\r\n  }\r\n  getPlane() {\r\n    if (!this.plane) {\r\n      this.plane = new Plane(this.positions[0], this.normal);\r\n    }\r\n    return this.plane;\r\n  }\r\n}","import Buffer from '@/assets/webgl/Buffer.js';\r\nimport Renderable from '@/assets/webgl/abstract/Renderable.js';\r\nimport Triangle from '@/assets/webgl/geometry/Triangle.js';\r\n\r\nconst { mat2, mat3, mat4, vec2, vec3, vec4 } = self.glMatrix; // eslint-disable-line no-unused-vars\r\n\r\nexport default class Screen extends Renderable {\r\n  coordinates;\r\n  texture;\r\n  forDebug;\r\n  uniformLocation;\r\n  constructor(coordinates, options) {\r\n    super();\r\n    this.forDebug = false;\r\n    this.init(coordinates, options);\r\n  }\r\n  init(coordinates, options) {\r\n    this.length = 0;\r\n    this.name = \"Untitled Screen\";\r\n    if (coordinates) this.coordinates = coordinates;\r\n    if (options?.position) this.position = vec3.set(this.position, options.position.x, options.position.y, options.position.z);\r\n    if (options?.color) this.color = vec4.set(this.color, options?.color.r, options?.color.g, options?.color.b, options?.color.a);\r\n    if (options?.texture) this.texture = options.texture; \r\n    if (options?.forDebug) this.forDebug = options.forDebug;\r\n    if (options?.uniformLocation) this.uniformLocation = options.uniformLocation;\r\n  }\r\n  render(gl, shaderInfo) {\r\n    let buffer = this.getBuffer(gl, false);\r\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer.indicesGlBuffer);\r\n    gl.bindTexture(gl.TEXTURE_2D, buffer.texture);\r\n    gl.enableVertexAttribArray(shaderInfo.attributeLocations.textureCoordinate);\r\n    buffer.bindBuffer(buffer.textureGlBuffer, 2, shaderInfo.attributeLocations.textureCoordinate);\r\n    gl.enableVertexAttribArray(shaderInfo.attributeLocations.vertexPosition);\r\n    buffer.bindBuffer(buffer.postionsGlBuffer, 3, shaderInfo.attributeLocations.vertexPosition);\r\n\r\n    gl.drawElements(gl.TRIANGLES, buffer.indicesLength, gl.UNSIGNED_SHORT, 0);\r\n    gl.uniform1i(shaderInfo.uniformLocations.textureType, 0);\r\n  }\r\n  getBuffer(gl) {\r\n    this.dirty = (this.buffer === undefined || this.length != this.coordinates.length) ? true : false;\r\n    if (this.dirty === true) {\r\n      this.buffer = new Buffer(gl);\r\n      let color = this.color;\r\n      let selectionColor = this.selectionColor;\r\n      let colors = [];\r\n      let selectionColors = [];\r\n      let positions = [];\r\n      let normals = [];\r\n      let textureCoordinates = [];\r\n\r\n      let rectanglePositions = this.coordinates.map((coordinate) => vec3.fromValues(coordinate[0], coordinate[1], this.position[2]));\r\n      let bbox = this.getMinMax(rectanglePositions);\r\n\r\n      let leftTriangle = new Triangle(rectanglePositions[0], rectanglePositions[2], rectanglePositions[3]);\r\n      let rightTriangle = new Triangle(rectanglePositions[0], rectanglePositions[1], rectanglePositions[2]);\r\n\r\n      let triangles = [leftTriangle, rightTriangle];\r\n      triangles.forEach((triangle) => {\r\n        let trianglePositions = triangle.positions;\r\n        let normal = triangle.getNormal();\r\n        trianglePositions.forEach((position) => { // vec3\r\n          position.forEach((value) => {positions.push(value)});\r\n          normal.forEach((value) => normals.push(value));\r\n          color.forEach((value) => colors.push(value));\r\n          selectionColor.forEach((value) => selectionColors.push(value));\r\n          let rangeX = bbox.maxx - bbox.minx;\r\n          let rangeY = bbox.maxy - bbox.miny;\r\n          textureCoordinates.push((position[0] - bbox.minx) / rangeX);\r\n          textureCoordinates.push((position[1] - bbox.miny) / rangeY);\r\n        });\r\n      });\r\n\r\n      this.length = this.coordinates.length;\r\n      let indices = new Uint16Array(positions.length/3);\r\n      this.buffer.indicesVBO = indices.map((obj, index) => index );\r\n      this.buffer.positionsVBO = new Float32Array(positions);\r\n      this.buffer.colorVBO = new Float32Array(colors);\r\n      this.buffer.selectionColorVBO = new Float32Array(selectionColors);\r\n      this.buffer.normalVBO = new Float32Array(normals);\r\n      this.buffer.textureVBO = new Float32Array(textureCoordinates);\r\n      this.buffer.texture = this.texture;\r\n      this.buffer.postionsGlBuffer = this.buffer.createBuffer(this.buffer.positionsVBO);\r\n      this.buffer.colorGlBuffer = this.buffer.createBuffer(this.buffer.colorVBO);\r\n      this.buffer.selectionColorGlBuffer = this.buffer.createBuffer(this.buffer.selectionColorVBO);\r\n      this.buffer.normalGlBuffer = this.buffer.createBuffer(this.buffer.normalVBO);\r\n      this.buffer.indicesGlBuffer = this.buffer.createIndexBuffer(this.buffer.indicesVBO);\r\n      this.buffer.textureGlBuffer = this.buffer.createBuffer(this.buffer.textureVBO);\r\n      this.buffer.indicesLength = this.buffer.indicesVBO.length;\r\n      this.dirty = false;\r\n    }\r\n    return this.buffer;\r\n  }\r\n}","const {mat2, mat3, mat4, vec2, vec3, vec4} = self.glMatrix; // eslint-disable-line no-unused-vars\r\n\r\nimport ShaderProcess from '@/assets/webgl/abstract/ShaderProcess';\r\nimport Screen from '@/assets/webgl/renderable/Screen.js';\r\nimport Buffer from '@/assets/webgl/Buffer.js';\r\n\r\nclass ScreenShaderProcess extends ShaderProcess {\r\n  screens;\r\n  frameBufferObjs;\r\n  constructor(gl, shader, camera, frameBufferObjs, sun) {\r\n    super(gl, shader);\r\n    this.camera = camera;\r\n    this.frameBufferObjs = frameBufferObjs;\r\n    this.buffer = new Buffer(gl);\r\n    this.sun = sun;\r\n  }\r\n  preprocess() {\r\n    const shaderInfo = this.getShader().shaderInfo;\r\n    this.screens = [];\r\n    this.mainScreen = new Screen([[0, 0], [1, 0], [1, 1], [0, 1]], {reverse : true, forDebug : false, uniformLocation : shaderInfo.uniformLocations.mainTexture});\r\n    this.albedoScreen = new Screen([[0.85, 0.85], [1, 0.85], [1, 1], [0.85, 1]], {reverse : true, forDebug : true, uniformLocation : shaderInfo.uniformLocations.albedoTexture});\r\n    this.selectionScreen = new Screen([[0.85, 0.7], [1, 0.7], [1, 0.85], [0.85, 0.85]], {reverse : true, forDebug : true, uniformLocation : shaderInfo.uniformLocations.selectionTexture});\r\n    this.normalScreen = new Screen([[0.85, 0.55], [1, 0.55], [1, 0.7], [0.85, 0.7]], {reverse : true, forDebug : true, uniformLocation : shaderInfo.uniformLocations.normalTexture});\r\n    this.depthScreen = new Screen([[0.85, 0.40], [1, 0.40], [1, 0.55], [0.85, 0.55]], {reverse : true, forDebug : true, uniformLocation : shaderInfo.uniformLocations.depthTexture});\r\n    this.lightMapDepthScreen = new Screen([[0.92, 0.25], [1, 0.25], [1, 0.40], [0.92, 0.40]], {reverse : true, forDebug : true, uniformLocation : shaderInfo.uniformLocations.lightMapTexture});\r\n    //this.lightMapDepthScreen = new Screen([[0.85, 0.25], [1, 0.25], [1, 0.40], [0.85, 0.40]], {reverse : true, forDebug : true, uniformLocation : shaderInfo.uniformLocations.lightMapTexture});\r\n    this.screens.push(this.mainScreen);\r\n    this.screens.push(this.albedoScreen);\r\n    this.screens.push(this.selectionScreen);\r\n    this.screens.push(this.normalScreen);\r\n    this.screens.push(this.depthScreen);\r\n    this.screens.push(this.lightMapDepthScreen);\r\n    this.noiseTexture = this.buffer.createNoiseTexture();\r\n  }\r\n  process(globalOptions) {\r\n    // /** @type {WebGLRenderingContext} */\r\n    const gl = this.getGl();\r\n    // /** @type {HTMLCanvasElement} */\r\n    const canvas = this.getCanvas();\r\n    const shaderInfo = this.getShader().shaderInfo;\r\n    this.getShader().useProgram();\r\n\r\n    gl.viewport(0, 0, canvas.width, canvas.height);\r\n    gl.enable(gl.CULL_FACE);\r\n    gl.frontFace(gl.CCW);\r\n    gl.lineWidth(globalOptions.lineWidth);\r\n\r\n    const fovy = Math.radian(this.camera.fovyDegree);\r\n    let tangentOfHalfFovy = Math.tan(fovy / 2);\r\n\r\n    let orthographicMatrix = mat4.create();\r\n    mat4.ortho(orthographicMatrix, -8192, 8192, -8192, 8192, 0, 8192);\r\n    gl.uniformMatrix4fv(shaderInfo.uniformLocations.orthographicMatrix, false, orthographicMatrix);\r\n\r\n    let projectionMatrix = mat4.create();\r\n    mat4.perspective(projectionMatrix, fovy, globalOptions.aspect, parseFloat(globalOptions.near), parseFloat(globalOptions.far));\r\n    gl.uniformMatrix4fv(shaderInfo.uniformLocations.projectionMatrix, false, projectionMatrix);\r\n    let cameraTransformMatrix = this.camera.getTransformMatrix();\r\n    gl.uniformMatrix4fv(shaderInfo.uniformLocations.cameraTransformMatrix, false, cameraTransformMatrix);\r\n\r\n    let sunModelViewMatrix = this.sun.getModelViewMatrix();\r\n    gl.uniformMatrix4fv(shaderInfo.uniformLocations.sunModelViewMatrix, false, sunModelViewMatrix);\r\n    let sunNormalMatrix = this.sun.getNormalMatrix();\r\n    gl.uniformMatrix4fv(shaderInfo.uniformLocations.sunNormalMatrix, false, sunNormalMatrix);\r\n\r\n    gl.uniform1i(shaderInfo.uniformLocations.isMain, 0);\r\n    gl.uniform1f(shaderInfo.uniformLocations.selectedObjectId, globalOptions.selectedObjectId);\r\n    gl.uniform1f(shaderInfo.uniformLocations.aspectRatio, globalOptions.aspect);\r\n\r\n    gl.uniform1i(shaderInfo.uniformLocations.enableSsao, globalOptions.enableSsao ? 1 : 0);\r\n    gl.uniform1i(shaderInfo.uniformLocations.enableEdge, globalOptions.enableEdge ? 1 : 0);\r\n    gl.uniform1i(shaderInfo.uniformLocations.enableGlobalLight, globalOptions.enableGlobalLight ? 1 : 0);\r\n\r\n    gl.uniform1f(shaderInfo.uniformLocations.tangentOfHalfFovy, tangentOfHalfFovy);\r\n    gl.uniform2fv(shaderInfo.uniformLocations.screenSize, vec2.fromValues(canvas.width, canvas.height));\r\n    gl.uniform2fv(shaderInfo.uniformLocations.nearFar, vec2.fromValues(parseFloat(globalOptions.near), parseFloat(globalOptions.far)));\r\n    gl.uniform2fv(shaderInfo.uniformLocations.noiseScale, vec2.fromValues(canvas.width / 4.0, canvas.height / 4.0));\r\n\r\n    const ssaoKernelSample = [ 0.33, 0.0, 0.85,\r\n      0.25, 0.3, 0.5,\r\n      0.1, 0.3, 0.85,\r\n      -0.15, 0.2, 0.85,\r\n      -0.33, 0.05, 0.6,\r\n      -0.1, -0.15, 0.85,\r\n      -0.05, -0.32, 0.25,\r\n      0.2, -0.15, 0.85,\r\n      0.6, 0.0, 0.55,\r\n      0.5, 0.6, 0.45,\r\n      -0.01, 0.7, 0.35,\r\n      -0.33, 0.5, 0.45,\r\n      -0.45, 0.0, 0.55,\r\n      -0.65, -0.5, 0.7,\r\n      0.0, -0.5, 0.55,\r\n      0.33, 0.3, 0.35];\r\n    const ssaoKernel = new Float32Array(ssaoKernelSample);\r\n    gl.uniform3fv(shaderInfo.uniformLocations.ssaoKernel, ssaoKernel);\r\n\r\n    this.screens.forEach((ascreen, index) => {\r\n      const textureProperty = gl[\"TEXTURE\" + index];\r\n      gl.activeTexture(textureProperty);\r\n      gl.bindTexture(gl.TEXTURE_2D, ascreen.texture);\r\n      gl.uniform1i(ascreen.uniformLocation, index);\r\n    });\r\n    gl.activeTexture(gl[\"TEXTURE\" + this.screens.length]);\r\n    gl.bindTexture(gl.TEXTURE_2D, this.noiseTexture);\r\n    gl.uniform1i(shaderInfo.uniformLocations.noiseTexture, this.screens.length);\r\n  }\r\n  postprocess(globalOptions) {\r\n    const gl = this.getGl();\r\n    const shaderInfo = this.getShader().shaderInfo;\r\n    gl.disable(gl.DEPTH_TEST);\r\n    gl.uniform1i(shaderInfo.uniformLocations.isMain, 0);\r\n    this.screens.forEach((screen, index) => {\r\n      if (index == 0) {\r\n        gl.uniform1i(shaderInfo.uniformLocations.isMain, 1);\r\n      } else {\r\n        gl.uniform1i(shaderInfo.uniformLocations.isMain, 0);\r\n      }\r\n      gl.activeTexture(gl.TEXTURE0);\r\n      gl.bindTexture(gl.TEXTURE_2D, screen.texture);\r\n      screen.texture = this.frameBufferObjs[index].texture;\r\n      if (!globalOptions.debugMode && screen.forDebug) {return;} \r\n      screen.render(gl, shaderInfo);\r\n    });\r\n    gl.enable(gl.DEPTH_TEST);\r\n  }\r\n}\r\n\r\nexport default ScreenShaderProcess;","const attributes = [\"aVertexPosition\", \"aVertexColor\", \"aVertexSelectionColor\", \"aVertexNormal\", \"aTextureCoordinate\"];\r\nconst uniforms = [\"uModelViewMatrix\", \"uProjectionMatrix\", \"uOrthographicMatrix\", \"uObjectMatrix\", \"uRotationMatrix\", \"uNormalMatrix\", \"uPointSize\", \"uPositionType\", \"uNearFar\", \"uTexture\", \"uTextureType\"];\r\nconst vertexShaderSource = `\r\n  attribute vec3 aVertexPosition;\r\n  attribute vec4 aVertexColor;\r\n  attribute vec4 aVertexSelectionColor;\r\n  attribute vec3 aVertexNormal;\r\n  attribute vec2 aTextureCoordinate;\r\n  \r\n  uniform mat4 uModelViewMatrix;\r\n  uniform mat4 uProjectionMatrix;\r\n  uniform mat4 uOrthographicMatrix;\r\n  uniform mat4 uObjectMatrix;\r\n  uniform mat4 uRotationMatrix;\r\n  uniform mat4 uNormalMatrix;\r\n  uniform float uPointSize;\r\n  uniform vec2 uNearFar;\r\n\r\n  varying vec4 vColor;\r\n  varying vec4 vSelectionColor;\r\n  varying vec3 vTransformedNormal;\r\n  varying float vDepth;\r\n\r\n  vec4 getOrthoPosition() {\r\n    vec4 transformedPosition = uObjectMatrix * vec4(aVertexPosition, 1.0);\r\n    vec4 orthoPosition = uModelViewMatrix * vec4(transformedPosition.xyz, 1.0);\r\n    return orthoPosition;\r\n  }\r\n  vec3 getRotatedNormal() {\r\n    vec3 rotatedModelNormal = (uRotationMatrix * vec4(aVertexNormal, 1.0)).xyz;\r\n    vec3 rotatedNormal = normalize(uNormalMatrix * vec4(rotatedModelNormal, 1.0)).xyz;\r\n    return rotatedNormal;\r\n  }\r\n  float calcDepth(float zValue) {\r\n    return -(zValue / uNearFar.y);\r\n  }\r\n\r\n  void main(void) {\r\n    vColor = aVertexColor;\r\n    vSelectionColor = aVertexSelectionColor;\r\n    gl_PointSize = uPointSize;\r\n\r\n    vec4 orthoPosition = getOrthoPosition();\r\n    vTransformedNormal = getRotatedNormal();\r\n\r\n    vDepth = calcDepth(orthoPosition.z);\r\n    gl_Position = uOrthographicMatrix * orthoPosition;\r\n  }\r\n`;\r\n\r\nconst fragmentShaderSource = `\r\n  precision highp float;\r\n\r\n  varying vec4 vColor;\r\n  varying vec4 vSelectionColor;\r\n  varying vec3 vTransformedNormal;\r\n  varying float vDepth;\r\n\r\n  uniform sampler2D uTexture;\r\n  uniform int uTextureType;\r\n\r\n  vec4 packDepth(float depth) {\r\n    vec4 enc = vec4(1.0, 255.0, 65025.0, 16581375.0) * vDepth;\r\n    enc = fract(enc);\r\n    enc -= enc.yzww * vec4(1.0/255.0, 1.0/255.0, 1.0/255.0, 0.0);\r\n    return enc;\r\n  }\r\n  \r\n  void main(void) {\r\n    gl_FragColor = packDepth(vDepth);\r\n    //gl_FragColor = vec4(vColor.xyz, vColor.a);\r\n  }\r\n`;\r\n\r\nexport const LightMapShader = {\r\n  attributes: attributes,\r\n  uniforms: uniforms,\r\n  vertexShaderSource: vertexShaderSource,\r\n  fragmentShaderSource: fragmentShaderSource,\r\n};","const {mat2, mat3, mat4, vec2, vec3, vec4} = self.glMatrix; // eslint-disable-line no-unused-vars\r\n\r\nimport ShaderProcess from '@/assets/webgl/abstract/ShaderProcess';\r\n\r\nclass LightMapShaderProcess extends ShaderProcess {\r\n  renderableList;\r\n  frameBufferObjs;\r\n  constructor(gl, shader, camera, frameBufferObjs, renderableList, sun) {\r\n    super(gl, shader);\r\n    this.camera = camera;\r\n    this.sun = sun;\r\n    this.frameBufferObjs = frameBufferObjs;\r\n    this.renderableList = renderableList;\r\n  }\r\n  preprocess() {\r\n    \r\n  }\r\n  process(globalOptions) {\r\n    /** @type {WebGLRenderingContext} */\r\n    const gl = this.getGl();\r\n    /** @type {HTMLCanvasElement} */\r\n    //const canvas = this.getCanvas();\r\n    const shaderInfo = this.getShader().shaderInfo;\r\n    this.getShader().useProgram();\r\n\r\n    gl.viewport(0, 0, 8182, 8182);\r\n    //gl.enable(gl.CULL_FACE);\r\n    //gl.frontFace(gl.CCW);\r\n    //gl.lineWidth(globalOptions.lineWidth);\r\n\r\n    let projectionMatrix = mat4.create();\r\n    mat4.perspective(projectionMatrix, this.camera.fovyRadian, globalOptions.aspect, parseFloat(globalOptions.near), parseFloat(globalOptions.far));\r\n\r\n    let orthographicMatrix = mat4.create();\r\n    mat4.ortho(orthographicMatrix, -8192, 8192, -8192, 8192, 0, 8192);\r\n\r\n    gl.uniform2fv(shaderInfo.uniformLocations.nearFar, vec2.fromValues(0, 8192));\r\n\r\n    let modelViewMatrix = this.sun.getModelViewMatrix();\r\n    gl.uniformMatrix4fv(shaderInfo.uniformLocations.projectionMatrix, false, projectionMatrix);\r\n    gl.uniformMatrix4fv(shaderInfo.uniformLocations.modelViewMatrix, false, modelViewMatrix);\r\n    gl.uniformMatrix4fv(shaderInfo.uniformLocations.orthographicMatrix, false, orthographicMatrix);\r\n\r\n    this.frameBufferObjs.forEach((frameBufferObj) => {\r\n      frameBufferObj.clear();\r\n    });\r\n    this.renderableList.get().forEach((renderableObj) => {\r\n      (renderableObj.getId() === undefined) ? renderableObj.createRenderableObjectId(this.renderableList) : undefined;\r\n      renderableObj.render(gl, shaderInfo, this.frameBufferObjs);\r\n    });\r\n  }\r\n  postprocess() {\r\n    //\r\n  }\r\n}\r\n\r\nexport default LightMapShaderProcess;","const {mat2, mat3, mat4, vec2, vec3, vec4} = self.glMatrix; // eslint-disable-line no-unused-vars\r\nimport Shader from './Shader.js';\r\n\r\nimport Camera from './Camera.js';\r\nimport Sun from './Sun.js';\r\nimport FrameBufferObject from './functional/FrameBufferObject.js';\r\nimport RenderableObjectList from './functional/RenderableObjectList.js';\r\n\r\nimport { DefaultShader } from './shader/DefaultShader.js';\r\nimport DefaultShaderProcess from './shader/DefaultShaderProcess.js';\r\nimport { ScreenShader } from './shader/ScreenShader.js';\r\nimport ScreenShaderProcess from './shader/ScreenShaderProcess.js';\r\nimport { LightMapShader } from './shader/LightMapShader.js';\r\nimport LightMapShaderProcess from './shader/LightMapShaderProcess.js';\r\n\r\nMath.degree = (radian) => radian * 180 / Math.PI;\r\nMath.radian = (degree) => degree * Math.PI / 180;\r\nMath.randomInt = () => Math.round(Math.random() * 10);\r\nArray.prototype.get = function(index) {return this[this.loopIndex(index)]};\r\nArray.prototype.getPrev = function(index) {return this[this.loopIndex(index - 1)]};\r\nArray.prototype.getNext = function(index) {return this[this.loopIndex(index + 1)]};\r\nArray.prototype.loopIndex = function(index) {\r\n  if (index < 0) return index % this.length + this.length;\r\n  else return index % this.length;\r\n};\r\n\r\nexport default class WebGL {\r\n  gl;\r\n  shader;\r\n  buffer;\r\n  camera;\r\n  canvas;\r\n  shaderProcesses;\r\n  frameBufferObjs;\r\n  renderableObjectList;\r\n  globalOptions;\r\n\r\n  albedoFbo;\r\n  selectionFbo;\r\n  depthFbo;\r\n  normalFbo;\r\n  constructor(canvas, globalOptions = {}) {\r\n    this.frameBufferObjs = [];\r\n    this.defaultFrameBufferObjs = [];\r\n    this.lightMapFrameBufferObjs = [];\r\n\r\n    this.renderableObjectList = new RenderableObjectList();\r\n    this.shaderProcesses = [];\r\n    this.globalOptions = globalOptions;\r\n    this.init(canvas);\r\n  }\r\n  init(canvas) {\r\n    console.log(\"Init Start WebGL.\");\r\n    let version = \"\";\r\n    try {\r\n      this.canvas = canvas;\r\n      if (canvas.getContext(\"webgl2\")) {\r\n        this.gl = canvas.getContext(\"webgl2\");\r\n        version = \"webgl2\";\r\n      } else if (canvas.getContext(\"webgl\")) {\r\n        this.gl = canvas.getContext(\"webgl\");\r\n        version = \"webgl\";\r\n      } else if (canvas.getContext(\"experimental-webgl\")) {\r\n        this.gl = canvas.getContext(\"experimental-webgl\");\r\n        version = \"experimental-webgl\";\r\n      }\r\n      if (!this.gl) {\r\n        throw new Error(\"Unable to initialize WebGL. Your browser may not support it.\");\r\n      }\r\n    } catch(e) {\r\n      console.log(\"Unable to initialize WebGL. Your browser may not support it.\");\r\n      console.error(e);\r\n    }\r\n    console.log(\"Init Success \" + version);\r\n  }\r\n  checkMultiRenders() {\r\n    const ext = this.gl.getExtension('WEBGL_draw_buffers');\r\n    return (ext > -1) ? true : false;\r\n  }\r\n  resizeCanvas() {\r\n    const canvas = this.canvas;\r\n    const displayWidth  = canvas.clientWidth;\r\n    const displayHeight = canvas.clientHeight;\r\n    const isChanged = (canvas.width !== displayWidth) || (canvas.height !== displayHeight);\r\n    if (isChanged) {\r\n      canvas.width  = displayWidth ;\r\n      canvas.height = displayHeight;\r\n      this.frameBufferObjs.forEach((frameBufferObj) => {\r\n        if (!frameBufferObj.options.isNotInit) {\r\n          frameBufferObj.init();\r\n        }\r\n      });\r\n      console.log(\"resizeCanvas\");\r\n    }\r\n    this.globalOptions.aspect = (canvas.width / canvas.height);\r\n    return isChanged;\r\n  }\r\n  startRender() {\r\n    const gl = this.gl;\r\n    gl.enable(gl.DEPTH_TEST);\r\n    gl.depthFunc(gl.LEQUAL);\r\n    this.resizeCanvas();\r\n\r\n    this.defaultShader = new Shader(gl);\r\n    if (this.checkMultiRenders()) {\r\n      this.defaultShader.init(DefaultShader);\r\n    } else {\r\n      this.defaultShader.init(DefaultShader);\r\n    }\r\n    this.defaultShaderInfo = this.defaultShader.shaderInfo;\r\n\r\n    this.screenShader = new Shader(gl);\r\n    this.screenShader.init(ScreenShader);\r\n    this.screenShaderInfo = this.screenShader.shaderInfo;\r\n\r\n    this.lightMapShader = new Shader(gl);\r\n    this.lightMapShader.init(LightMapShader);\r\n    this.lightMapShaderInfo = this.lightMapShader.shaderInfo;\r\n    \r\n    this.camera = new Camera({fovyDegree : this.globalOptions.fovyDegree});\r\n\r\n    this.sun = new Sun({position:{x:0, y:0, z: 8192 / 2}});\r\n    this.sun.rotationOrbit(0.5, 0.8, vec3.fromValues(0,0,0));\r\n\r\n    this.frameBufferObjs.push(this.getMainFbo());\r\n    this.frameBufferObjs.push(this.getAlbedoFbo());\r\n    this.frameBufferObjs.push(this.getSelectionFbo());\r\n    this.frameBufferObjs.push(this.getNormalFbo());\r\n    this.frameBufferObjs.push(this.getDepthFbo());\r\n    this.frameBufferObjs.push(this.getLightMapFbo());\r\n\r\n    this.defaultFrameBufferObjs = [];\r\n    this.defaultFrameBufferObjs.push(this.getMainFbo());\r\n    this.defaultFrameBufferObjs.push(this.getAlbedoFbo());\r\n    this.defaultFrameBufferObjs.push(this.getSelectionFbo());\r\n    this.defaultFrameBufferObjs.push(this.getNormalFbo());\r\n    this.defaultFrameBufferObjs.push(this.getDepthFbo());\r\n    this.lightMapFrameBufferObjs.push(this.getLightMapFbo());\r\n\r\n    this.shaderProcesses.push(new DefaultShaderProcess(gl, this.defaultShader, this.camera, this.defaultFrameBufferObjs, this.renderableObjectList));\r\n    this.shaderProcesses.push(new LightMapShaderProcess(gl, this.lightMapShader, this.camera, this.lightMapFrameBufferObjs, this.renderableObjectList, this.sun));\r\n    this.shaderProcesses.push(new ScreenShaderProcess(gl, this.screenShader, this.camera, this.frameBufferObjs, this.sun));\r\n\r\n    this.shaderProcesses.forEach((shaderProcess) => {\r\n      shaderProcess.preprocess();\r\n    });\r\n    this.render();\r\n  }\r\n  setOptions() {\r\n    this.resizeCanvas();\r\n    this.camera.syncFovyDegree(this.globalOptions.fovyDegree);\r\n    if (this.globalOptions.cullFace) {\r\n      this.gl.enable(this.gl.CULL_FACE);\r\n    } else {\r\n      this.gl.disable(this.gl.CULL_FACE);\r\n    }\r\n    if (this.globalOptions.depthTest) {\r\n      this.gl.enable(this.gl.DEPTH_TEST);\r\n    } else {\r\n      this.gl.disable(this.gl.DEPTH_TEST);\r\n    }\r\n  }\r\n  render() {\r\n    this.scene();\r\n    requestAnimationFrame(this.render.bind(this));\r\n  }\r\n  scene() {\r\n    this.setOptions();\r\n    this.shaderProcesses.forEach((shaderProcess) => {\r\n      shaderProcess.process(this.globalOptions);\r\n    });\r\n    this.shaderProcesses.forEach((shaderProcess) => {\r\n      shaderProcess.postprocess(this.globalOptions);\r\n    });\r\n  }\r\n  getMainFbo() {\r\n    const textureType = 1;\r\n    const clearColor = vec3.fromValues(0.2, 0.2, 0.2);\r\n    if (!this.mainFbo) {\r\n      this.mainFbo = new FrameBufferObject(this.gl, this.gl.canvas, this.defaultShaderInfo, {name:\"main\" ,textureType, clearColor}, this.globalOptions);\r\n    }\r\n    return this.mainFbo;\r\n  }\r\n  getAlbedoFbo() {\r\n    const textureType = 1;\r\n    if (!this.albedoFbo) {\r\n      this.albedoFbo = new FrameBufferObject(this.gl, this.gl.canvas, this.defaultShaderInfo, {name:\"albedo\" ,textureType}, this.globalOptions);\r\n    }\r\n    return this.albedoFbo;\r\n  }\r\n  getSelectionFbo() {\r\n    const textureType = 2;\r\n    if (!this.selectionFbo) {\r\n      this.selectionFbo = new FrameBufferObject(this.gl, this.gl.canvas, this.defaultShaderInfo, {name:\"selection\" ,textureType}, this.globalOptions);\r\n    }\r\n    return this.selectionFbo;\r\n  }\r\n  getDepthFbo() {\r\n    const textureType = 3;\r\n    if (!this.depthFbo) {\r\n      this.depthFbo = new FrameBufferObject(this.gl, this.gl.canvas, this.defaultShaderInfo, {name:\"depth\" ,textureType}, this.globalOptions);\r\n    }\r\n    return this.depthFbo;\r\n  }\r\n  getNormalFbo() {\r\n    const textureType = 4;\r\n    if (!this.normalFbo) {\r\n      this.normalFbo = new FrameBufferObject(this.gl, this.gl.canvas, this.defaultShaderInfo, {name:\"normal\" ,textureType}, this.globalOptions);\r\n    }\r\n    return this.normalFbo;\r\n  }\r\n  getLightMapFbo() {\r\n    const textureType = 5;\r\n    if (!this.lightMapFbo) {\r\n      this.lightMapFbo = new FrameBufferObject(this.gl, this.gl.canvas, this.defaultShaderInfo, {\r\n        name:\"light\" , \r\n        textureType : textureType,\r\n        width : 8182,\r\n        height : 8182,\r\n    }, this.globalOptions);\r\n    }\r\n    return this.lightMapFbo;\r\n  }\r\n  get gl() {\r\n    return this.gl;\r\n  }\r\n}","const { mat2, mat3, mat4, vec2, vec3, vec4 } = self.glMatrix; // eslint-disable-line no-unused-vars\r\n\r\n/**\r\n * TextureCoordinator\r\n */\r\nexport default class TextureCoordinator {\r\n    /**\r\n     * \r\n     * @param {vec2}   textureSize      ex) [128, 128]\r\n     * @param {vec2}   texturePosition  ex) [0, 3]\r\n     * @param {number} pixelWidth       ex) 16\r\n     * @returns {vec4} bbox             ex) [0, 48, 16, 64]\r\n     */\r\n    static calcTextureCoordinate(textureSize, texturePosition, pixelWidth) {\r\n      let minWidth = pixelWidth * texturePosition[0];\r\n      let minHeight = pixelWidth * texturePosition[1];\r\n      let maxWidth = pixelWidth * texturePosition[0] + pixelWidth;\r\n      let maxHeight = pixelWidth * texturePosition[1] + pixelWidth;\r\n      if (minWidth < 0 || minHeight < 0 || maxWidth > textureSize[0] || maxHeight > textureSize[1]) {\r\n        throw new Error(\"incorrect texture coordinate.\");\r\n      }\r\n      return vec4.fromValues(minWidth / textureSize[0], minHeight / textureSize[1], maxWidth / textureSize[0], maxHeight / textureSize[1]);\r\n    }\r\n}","import Buffer from '@/assets/webgl/Buffer.js';\r\nimport Renderable from '@/assets/webgl/abstract/Renderable.js';\r\nimport TextureCoordinator from '../functional/TextureCoodinator';\r\nconst {mat2, mat3, mat4, vec2, vec3, vec4} = self.glMatrix; // eslint-disable-line no-unused-vars\r\n\r\nexport default class Cube extends Renderable {\r\n  size;\r\n  constructor(options) {\r\n    super();\r\n    this.init(options);\r\n  }\r\n  \r\n  init(options) {\r\n    this.texturePosition = [0, 0];\r\n    this.size = vec3.fromValues(128, 128, 128); // size : width, length, height\r\n    this.name = \"Untitled Cube\";\r\n    if (options?.name) this.name = options.name;\r\n    if (options?.position) this.position = vec3.set(this.position, options.position.x, options.position.y, options.position.z);\r\n    if (options?.size) this.size = vec3.set(this.size, options.size.width, options.size.length, options.size.height);\r\n    if (options?.rotation) this.rotation = vec3.set(this.rotation, options.rotation.pitch, options.rotation.roll, options.rotation.heading);\r\n    if (options?.color) this.color = vec4.set(this.color, options?.color.r,options?.color.g, options?.color.b, options?.color.a);\r\n    if (options?.texture) this.texture = options.texture;\r\n    if (options?.texturePosition) this.texturePosition = options.texturePosition;\r\n    if (options?.image) this.image = options.image;\r\n  }\r\n  // overriding\r\n  render(gl, shaderInfo, frameBufferObjs) {\r\n    let tm = this.getTransformMatrix();\r\n    let rm = this.getRotationMatrix();\r\n    gl.uniformMatrix4fv(shaderInfo.uniformLocations.objectMatrix, false, tm);\r\n    gl.uniformMatrix4fv(shaderInfo.uniformLocations.rotationMatrix, false, rm);\r\n\r\n    let buffer = this.getBuffer(gl, shaderInfo);\r\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer.indicesGlBuffer);\r\n    gl.enableVertexAttribArray(shaderInfo.attributeLocations.vertexNormal);\r\n    buffer.bindBuffer(buffer.normalGlBuffer, 3, shaderInfo.attributeLocations.vertexNormal);\r\n    gl.enableVertexAttribArray(shaderInfo.attributeLocations.vertexPosition);\r\n    buffer.bindBuffer(buffer.positionsGlBuffer, 3, shaderInfo.attributeLocations.vertexPosition);\r\n    gl.enableVertexAttribArray(shaderInfo.attributeLocations.vertexColor);\r\n    buffer.bindBuffer(buffer.colorGlBuffer, 4, shaderInfo.attributeLocations.vertexColor);\r\n    gl.enableVertexAttribArray(shaderInfo.attributeLocations.vertexSelectionColor);\r\n    buffer.bindBuffer(buffer.selectionColorGlBuffer, 4, shaderInfo.attributeLocations.vertexSelectionColor);\r\n\r\n    frameBufferObjs.forEach((frameBufferObj) => {\r\n      frameBufferObj.bind(shaderInfo);\r\n      const textureType = frameBufferObj.textureType;\r\n      if (textureType ==  1) {\r\n        gl.bindTexture(gl.TEXTURE_2D, buffer.texture);\r\n        gl.enableVertexAttribArray(shaderInfo.attributeLocations.textureCoordinate);\r\n        buffer.bindBuffer(buffer.textureGlBuffer, 2, shaderInfo.attributeLocations.textureCoordinate);\r\n      }\r\n      gl.drawElements(gl.TRIANGLES, buffer.indicesLength, gl.UNSIGNED_SHORT, 0);\r\n      frameBufferObj.unbind();\r\n    });\r\n  }\r\n  // overriding\r\n  getBuffer(gl) {\r\n    if (this.buffer === undefined) {\r\n      this.buffer = new Buffer(gl);\r\n      if (this.texture) {\r\n        this.buffer.texture = this.texture;\r\n        this.textureSize = vec2.fromValues(512, 512);\r\n      }\r\n      let w = this.size[0]/2;\r\n      let l = this.size[1]/2;\r\n      let h = this.size[2];\r\n      let color = this.color;\r\n      let p0 = vec3.fromValues(-w, -l, 0);\r\n      let p1 = vec3.fromValues(w, -l, 0);\r\n      let p2 = vec3.fromValues(w, l, 0);\r\n      let p3 = vec3.fromValues(-w, l, 0);\r\n      let p4 = vec3.fromValues(-w, -l, h);\r\n      let p5 = vec3.fromValues(w, -l, h);\r\n      let p6 = vec3.fromValues(w, l, h);\r\n      let p7 = vec3.fromValues(-w, l, h);\r\n      let n0 = this.normal(p0, p2, p1);\r\n      let n1 = this.normal(p0, p3, p2);\r\n      let n2 = this.normal(p4, p5, p6);\r\n      let n3 = this.normal(p4, p6, p7);\r\n      let n4 = this.normal(p3, p0, p4);\r\n      let n5 = this.normal(p3, p4, p7);\r\n      let n6 = this.normal(p1, p2, p6);\r\n      let n7 = this.normal(p1, p6, p5);\r\n      let n8 = this.normal(p0, p1, p5);\r\n      let n9 = this.normal(p0, p5, p4);\r\n      let n10 = this.normal(p2, p3, p7);\r\n      let n11 = this.normal(p2, p7, p6);\r\n      let selectionColor = this.selectionColor;\r\n\r\n      this.buffer.positionsVBO = new Float32Array([\r\n        p0[0], p0[1], p0[2], // bottom face\r\n        p2[0], p2[1], p2[2],\r\n        p1[0], p1[1], p1[2],\r\n        p0[0], p0[1], p0[2],\r\n        p3[0], p3[1], p3[2],\r\n        p2[0], p2[1], p2[2],\r\n        p4[0], p4[1], p4[2], // top face\r\n        p5[0], p5[1], p5[2],\r\n        p6[0], p6[1], p6[2],\r\n        p4[0], p4[1], p4[2],\r\n        p6[0], p6[1], p6[2],\r\n        p7[0], p7[1], p7[2],\r\n        p3[0], p3[1], p3[2], // left face\r\n        p0[0], p0[1], p0[2],\r\n        p4[0], p4[1], p4[2],\r\n        p3[0], p3[1], p3[2],\r\n        p4[0], p4[1], p4[2],\r\n        p7[0], p7[1], p7[2],\r\n        p1[0], p1[1], p1[2], // right face\r\n        p2[0], p2[1], p2[2],\r\n        p6[0], p6[1], p6[2],\r\n        p1[0], p1[1], p1[2],\r\n        p6[0], p6[1], p6[2],\r\n        p5[0], p5[1], p5[2],\r\n        p0[0], p0[1], p0[2], // forward Face\r\n        p1[0], p1[1], p1[2],\r\n        p5[0], p5[1], p5[2],\r\n        p0[0], p0[1], p0[2],\r\n        p5[0], p5[1], p5[2],\r\n        p4[0], p4[1], p4[2],\r\n        p2[0], p2[1], p2[2], // backward Face\r\n        p3[0], p3[1], p3[2],\r\n        p7[0], p7[1], p7[2],\r\n        p2[0], p2[1], p2[2],\r\n        p7[0], p7[1], p7[2],\r\n        p6[0], p6[1], p6[2],\r\n      ]);\r\n      this.buffer.normalVBO = new Float32Array([\r\n        n0[0], n0[1], n0[2], // bottom face\r\n        n0[0], n0[1], n0[2],\r\n        n0[0], n0[1], n0[2],\r\n        n1[0], n1[1], n1[2],\r\n        n1[0], n1[1], n1[2],\r\n        n1[0], n1[1], n1[2],\r\n        n2[0], n2[1], n2[2], // top face\r\n        n2[0], n2[1], n2[2],\r\n        n2[0], n2[1], n2[2],\r\n        n3[0], n3[1], n3[2],\r\n        n3[0], n3[1], n3[2],\r\n        n3[0], n3[1], n3[2],\r\n        n4[0], n4[1], n4[2], // left face\r\n        n4[0], n4[1], n4[2],\r\n        n4[0], n4[1], n4[2],\r\n        n5[0], n5[1], n5[2],\r\n        n5[0], n5[1], n5[2],\r\n        n5[0], n5[1], n5[2],\r\n        n6[0], n6[1], n6[2], // right face\r\n        n6[0], n6[1], n6[2],\r\n        n6[0], n6[1], n6[2],\r\n        n7[0], n7[1], n7[2],\r\n        n7[0], n7[1], n7[2],\r\n        n7[0], n7[1], n7[2],\r\n        n8[0], n8[1], n8[2], // forward Face\r\n        n8[0], n8[1], n8[2],\r\n        n8[0], n8[1], n8[2],\r\n        n9[0], n9[1], n9[2],\r\n        n9[0], n9[1], n9[2],\r\n        n9[0], n9[1], n9[2],\r\n        n10[0], n10[1], n10[2], // backward Face\r\n        n10[0], n10[1], n10[2],\r\n        n10[0], n10[1], n10[2],\r\n        n11[0], n11[1], n11[2],\r\n        n11[0], n11[1], n11[2],\r\n        n11[0], n11[1], n11[2],\r\n      ]);\r\n      this.buffer.colorVBO = new Float32Array([\r\n        color[0], color[1], color[2], color[3], // bottom face\r\n        color[0], color[1], color[2], color[3],\r\n        color[0], color[1], color[2], color[3],\r\n        color[0], color[1], color[2], color[3],\r\n        color[0], color[1], color[2], color[3],\r\n        color[0], color[1], color[2], color[3],\r\n        color[0], color[1], color[2], color[3], // top face\r\n        color[0], color[1], color[2], color[3],\r\n        color[0], color[1], color[2], color[3],\r\n        color[0], color[1], color[2], color[3],\r\n        color[0], color[1], color[2], color[3],\r\n        color[0], color[1], color[2], color[3],\r\n        color[0], color[1], color[2], color[3], // left face\r\n        color[0], color[1], color[2], color[3],\r\n        color[0], color[1], color[2], color[3],\r\n        color[0], color[1], color[2], color[3],\r\n        color[0], color[1], color[2], color[3],\r\n        color[0], color[1], color[2], color[3],\r\n        color[0], color[1], color[2], color[3], // right face\r\n        color[0], color[1], color[2], color[3],\r\n        color[0], color[1], color[2], color[3],\r\n        color[0], color[1], color[2], color[3],\r\n        color[0], color[1], color[2], color[3],\r\n        color[0], color[1], color[2], color[3],\r\n        color[0], color[1], color[2], color[3], // forward Face\r\n        color[0], color[1], color[2], color[3],\r\n        color[0], color[1], color[2], color[3],\r\n        color[0], color[1], color[2], color[3],\r\n        color[0], color[1], color[2], color[3],\r\n        color[0], color[1], color[2], color[3],\r\n        color[0], color[1], color[2], color[3], // backward Face\r\n        color[0], color[1], color[2], color[3],\r\n        color[0], color[1], color[2], color[3],\r\n        color[0], color[1], color[2], color[3],\r\n        color[0], color[1], color[2], color[3],\r\n        color[0], color[1], color[2], color[3],\r\n      ]);\r\n      this.buffer.selectionColorVBO = new Float32Array([\r\n        selectionColor[0], selectionColor[1], selectionColor[2], selectionColor[3], // bottom face\r\n        selectionColor[0], selectionColor[1], selectionColor[2], selectionColor[3],\r\n        selectionColor[0], selectionColor[1], selectionColor[2], selectionColor[3],\r\n        selectionColor[0], selectionColor[1], selectionColor[2], selectionColor[3],\r\n        selectionColor[0], selectionColor[1], selectionColor[2], selectionColor[3],\r\n        selectionColor[0], selectionColor[1], selectionColor[2], selectionColor[3],\r\n        selectionColor[0], selectionColor[1], selectionColor[2], selectionColor[3], // top face\r\n        selectionColor[0], selectionColor[1], selectionColor[2], selectionColor[3],\r\n        selectionColor[0], selectionColor[1], selectionColor[2], selectionColor[3],\r\n        selectionColor[0], selectionColor[1], selectionColor[2], selectionColor[3],\r\n        selectionColor[0], selectionColor[1], selectionColor[2], selectionColor[3],\r\n        selectionColor[0], selectionColor[1], selectionColor[2], selectionColor[3],\r\n        selectionColor[0], selectionColor[1], selectionColor[2], selectionColor[3], // left face\r\n        selectionColor[0], selectionColor[1], selectionColor[2], selectionColor[3],\r\n        selectionColor[0], selectionColor[1], selectionColor[2], selectionColor[3],\r\n        selectionColor[0], selectionColor[1], selectionColor[2], selectionColor[3],\r\n        selectionColor[0], selectionColor[1], selectionColor[2], selectionColor[3],\r\n        selectionColor[0], selectionColor[1], selectionColor[2], selectionColor[3],\r\n        selectionColor[0], selectionColor[1], selectionColor[2], selectionColor[3], // right face\r\n        selectionColor[0], selectionColor[1], selectionColor[2], selectionColor[3],\r\n        selectionColor[0], selectionColor[1], selectionColor[2], selectionColor[3],\r\n        selectionColor[0], selectionColor[1], selectionColor[2], selectionColor[3],\r\n        selectionColor[0], selectionColor[1], selectionColor[2], selectionColor[3],\r\n        selectionColor[0], selectionColor[1], selectionColor[2], selectionColor[3],\r\n        selectionColor[0], selectionColor[1], selectionColor[2], selectionColor[3], // forward Face\r\n        selectionColor[0], selectionColor[1], selectionColor[2], selectionColor[3],\r\n        selectionColor[0], selectionColor[1], selectionColor[2], selectionColor[3],\r\n        selectionColor[0], selectionColor[1], selectionColor[2], selectionColor[3],\r\n        selectionColor[0], selectionColor[1], selectionColor[2], selectionColor[3],\r\n        selectionColor[0], selectionColor[1], selectionColor[2], selectionColor[3],\r\n        selectionColor[0], selectionColor[1], selectionColor[2], selectionColor[3], // backward Face\r\n        selectionColor[0], selectionColor[1], selectionColor[2], selectionColor[3],\r\n        selectionColor[0], selectionColor[1], selectionColor[2], selectionColor[3],\r\n        selectionColor[0], selectionColor[1], selectionColor[2], selectionColor[3],\r\n        selectionColor[0], selectionColor[1], selectionColor[2], selectionColor[3],\r\n        selectionColor[0], selectionColor[1], selectionColor[2], selectionColor[3],\r\n      ]);\r\n\r\n      let textureCoordinate = TextureCoordinator.calcTextureCoordinate(this.textureSize, this.texturePosition, 16);\r\n      let textureCoordinates = [];\r\n      this.buffer.positionsGlBuffer = this.buffer.createBuffer(this.buffer.positionsVBO); \r\n      this.buffer.normalGlBuffer = this.buffer.createBuffer(this.buffer.normalVBO); \r\n      this.buffer.colorGlBuffer = this.buffer.createBuffer(this.buffer.colorVBO); \r\n      this.buffer.selectionColorGlBuffer = this.buffer.createBuffer(this.buffer.selectionColorVBO); \r\n      let positionCount = this.buffer.positionsVBO.length/3;\r\n      let indices = new Uint16Array(positionCount);\r\n      this.buffer.indicesVBO = indices.map((obj, index) => {\r\n        textureCoordinates.push(textureCoordinate[0]);\r\n        textureCoordinates.push(textureCoordinate[1]);\r\n\r\n        textureCoordinates.push(textureCoordinate[2]);\r\n        textureCoordinates.push(textureCoordinate[1]);\r\n\r\n        textureCoordinates.push(textureCoordinate[2]);\r\n        textureCoordinates.push(textureCoordinate[3]);\r\n\r\n        textureCoordinates.push(textureCoordinate[0]);\r\n        textureCoordinates.push(textureCoordinate[1]);\r\n\r\n        textureCoordinates.push(textureCoordinate[2]);\r\n        textureCoordinates.push(textureCoordinate[3]);\r\n        \r\n        textureCoordinates.push(textureCoordinate[0]);\r\n        textureCoordinates.push(textureCoordinate[3]);\r\n        return index;\r\n      });\r\n      this.buffer.textureVBO = new Float32Array(textureCoordinates);\r\n      this.buffer.textureGlBuffer = this.buffer.createBuffer(this.buffer.textureVBO);\r\n      this.buffer.indicesGlBuffer = this.buffer.createIndexBuffer(this.buffer.indicesVBO);\r\n      this.buffer.indicesLength = this.buffer.indicesVBO.length;\r\n    }\r\n    return this.buffer;\r\n  }\r\n}","const { mat2, mat3, mat4, vec2, vec3, vec4 } = self.glMatrix; // eslint-disable-line no-unused-vars\r\nimport Triangle from '../geometry/Triangle.js';\r\n\r\n/**\r\n * Tessellator\r\n */\r\nexport default class Tessellator {\r\n    /*static tessellate(positions) {\r\n        return this.validateConvex(positions);\r\n    }*/\r\n    static tessellate(positions, isCCW = true) {\r\n        let result = [];\r\n        let plane = this.validateConvex(positions);\r\n        plane.forEach((ConvexPolygon) => {\r\n            let triangles = this.toTriangles(ConvexPolygon, isCCW);\r\n            result = result.concat(triangles);\r\n        })\r\n        return result;\r\n    }\r\n    static validateConvex(positions, convexs = []) {\r\n        if (this.isConvex(positions)) {\r\n            convexs.push(positions);\r\n        } else {\r\n            let clockwisePosition = positions.find((position, index) => this.getPositionNormal(positions, index) < 0);\r\n            let clockwiseIndex = positions.indexOf(clockwisePosition);\r\n            let nearestPositions = this.sortedNearest(positions, clockwiseIndex);\r\n            nearestPositions.some((nearestPosition) => {\r\n                let splits = this.split(positions, clockwisePosition, nearestPosition);\r\n\r\n                let isIntersection = this.validateIntersection(positions, clockwisePosition, nearestPosition);\r\n                //console.log(isIntersection);\r\n                if (isIntersection) {\r\n                    return false;\r\n                }\r\n\r\n                let polygonA = this.validateAngle(splits[0]); \r\n                let polygonB = this.validateAngle(splits[1]);\r\n                if (polygonA ^ polygonB == 0) {\r\n                    this.validateConvex(splits[0], convexs);\r\n                    this.validateConvex(splits[1], convexs);\r\n                    return true;\r\n                }\r\n            })\r\n        }\r\n        return convexs;\r\n    }\r\n    static validateIntersection(positions, startPosition, endPosition) {\r\n        let intersection = positions.find((position, index) => {\r\n            let crnt = positions.get(index);\r\n            let next = positions.getNext(index);\r\n            if (this.intersection(startPosition, endPosition, crnt, next)) {\r\n                return true;\r\n            }\r\n        });\r\n        return intersection !== undefined;\r\n    }\r\n    static isConvex(positions) {\r\n        let cw = positions.find((position, index) => {\r\n            return (this.getPositionNormal(positions, index) < 0);\r\n        });\r\n        return cw === undefined;\r\n    }\r\n    static toTriangles(positions, isCCW = true) {\r\n        let length = positions.length;\r\n        //if (length < 3) throw new Error(\"Position count is not available.\");\r\n        var result = [];\r\n        for (let i = 1; i < length - 1; i++) {\r\n            if (isCCW) result.push(new Triangle(positions[0], positions[i], positions[i + 1]));\r\n            else result.push(new Triangle(positions[0], positions[i + 1], positions[i]));\r\n        }\r\n        return result;\r\n    }\r\n    static split(positions, positionA, positionB) {\r\n        let positionsA = this.createSplits(positions, positionA, positionB);\r\n        let positionsB = this.createSplits(positions, positionB, positionA);\r\n        return [positionsA, positionsB];\r\n    }\r\n    static createSplits(positions, startPosition, endPosition) {\r\n        let list = [];\r\n        list.push(startPosition);\r\n        list.push(endPosition);\r\n        let index = positions.indexOf(endPosition);\r\n        for (let i = 0; i < positions.length - 1; i++) {\r\n            let crnt = positions.get(index);\r\n            let next = positions.getNext(index);\r\n            if (next == startPosition || next == endPosition) {\r\n                break;\r\n            } else if (!this.compare(crnt, next)) {\r\n                list.push(next);\r\n            }\r\n            index++;\r\n        }\r\n        return list;\r\n    }\r\n    static validateCCW(positions) {\r\n        let sum = 0;\r\n        positions.forEach((position, index) => {\r\n            let normal = this.getPositionNormal(positions, index);\r\n            let angle = Math.degree(this.getAngle(positions, index));\r\n            if (normal >= 0) sum += angle;\r\n            else sum -= angle;\r\n        });\r\n        return sum;\r\n    }\r\n    static validateAngle(positions) {\r\n        let angleSum = 0;\r\n        let reverseAngleSum = 0;\r\n        positions.forEach((position, index) => {\r\n            let normal = this.getPositionNormal(positions, index);\r\n            let angle = Math.degree(this.getAngle(positions, index));\r\n            if (normal > 0) angleSum += angle;\r\n            else reverseAngleSum += angle;\r\n        });\r\n        return angleSum > reverseAngleSum;\r\n    }\r\n    static getPositionNormal(positions, index) {\r\n        let prev = positions.getPrev(index);\r\n        let crnt = positions.get(index);\r\n        let next = positions.getNext(index);\r\n        return this.normal(prev, crnt, next)[2];\r\n    }\r\n    static getAngle(positions, index) {\r\n        let prev = positions.getPrev(index);\r\n        let crnt = positions.get(index);\r\n        let next = positions.getNext(index);\r\n        let d0 = vec3.subtract(vec3.create(), crnt, prev);\r\n        let d1 = vec3.subtract(vec3.create(), next, crnt);\r\n        return vec3.angle(d0, d1);\r\n    }\r\n    static sortedNearest(positions, index) {\r\n        let prev = positions.getPrev(index);\r\n        let crnt = positions.get(index);\r\n        let next = positions.getNext(index);\r\n        let filtedPositions = positions.filter((position) => {\r\n            return !(position == prev || position == crnt || position == next);\r\n        });\r\n        let nearestPositions = filtedPositions.sort((a, b) => {\r\n            let distanceA = vec3.squaredDistance(crnt, a);\r\n            let distanceB = vec3.squaredDistance(crnt, b);\r\n            if (distanceA < distanceB) return -1;\r\n            else if (distanceA > distanceB) return 1;\r\n            else return 0;\r\n        });\r\n        return nearestPositions;\r\n    }\r\n    static intersection(a1, a2, b1, b2) {\r\n        let a = this.dot(this.cross(a1, a2, b1), this.cross(a1, a2, b2));\r\n        let b = this.dot(this.cross(b1, b2, a1), this.cross(b1, b2, a2));\r\n        if (a == 0 && b == 0) {\r\n            return false;\r\n        }\r\n        return a <= 0 && b <= 0;\r\n    }\r\n    static compare(a, b) {\r\n        return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\r\n    }\r\n    static cross(a, b, c) {\r\n        let d0 = vec3.subtract(vec3.create(), b, a);\r\n        let d1 = vec3.subtract(vec3.create(), c, b);\r\n        return vec3.cross(vec3.create(), d0, d1);\r\n    }\r\n    static dot(a, b) {\r\n        return vec3.dot(a, b);\r\n    }\r\n    static normal(a, b, c) {\r\n        let crossed = this.cross(a, b, c);\r\n        return vec3.normalize(crossed, crossed);\r\n    }\r\n}","import Buffer from '@/assets/webgl/Buffer.js';\r\nimport Renderable from '@/assets/webgl/abstract/Renderable.js';\r\nimport Triangle from '@/assets/webgl/geometry/Triangle';\r\nimport Tessellator from '@/assets/webgl/functional/Tessellator.js';\r\n\r\nconst { mat2, mat3, mat4, vec2, vec3, vec4 } = self.glMatrix; // eslint-disable-line no-unused-vars\r\n\r\nexport default class Polygon extends Renderable {\r\n  height;\r\n  coordinates;\r\n  triangles;\r\n  image;\r\n\r\n  constructor(coordinates, options) {\r\n    super();\r\n    this.init(coordinates, options);\r\n  }\r\n\r\n  init(coordinates, options) {\r\n    this.triangles = [];\r\n    this.height = 3.0;\r\n    this.name = \"Untitled Polygon\";\r\n    if (coordinates) this.coordinates = coordinates;\r\n    if (options?.name) this.name = options.name;\r\n    if (options?.height) this.height = options.height;\r\n    if (options?.position) this.position = vec3.set(this.position, options.position.x, options.position.y, options.position.z);\r\n    if (options?.rotation) this.rotation = vec3.set(this.rotation, options.rotation.pitch, options.rotation.roll, options.rotation.heading);\r\n    if (options?.color) this.color = vec4.set(this.color, options?.color.r, options?.color.g, options?.color.b, options?.color.a);\r\n    if (options?.texture) this.texture = options.texture;\r\n    if (options?.image) this.image = options.image;\r\n  }\r\n  render(gl, shaderInfo, frameBufferObjs) {\r\n    let tm = this.getTransformMatrix();\r\n    let rm = this.getRotationMatrix();\r\n    gl.uniformMatrix4fv(shaderInfo.uniformLocations.objectMatrix, false, tm);\r\n    gl.uniformMatrix4fv(shaderInfo.uniformLocations.rotationMatrix, false, rm);\r\n\r\n    let buffer = this.getBuffer(gl, shaderInfo);\r\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer.indicesGlBuffer);\r\n    gl.enableVertexAttribArray(shaderInfo.attributeLocations.vertexNormal);\r\n    buffer.bindBuffer(buffer.normalGlBuffer, 3, shaderInfo.attributeLocations.vertexNormal);\r\n    gl.enableVertexAttribArray(shaderInfo.attributeLocations.vertexPosition);\r\n    buffer.bindBuffer(buffer.positionsGlBuffer, 3, shaderInfo.attributeLocations.vertexPosition);\r\n    gl.enableVertexAttribArray(shaderInfo.attributeLocations.vertexColor);\r\n    buffer.bindBuffer(buffer.colorGlBuffer, 4, shaderInfo.attributeLocations.vertexColor);\r\n    gl.enableVertexAttribArray(shaderInfo.attributeLocations.vertexSelectionColor);\r\n    buffer.bindBuffer(buffer.selectionColorGlBuffer, 4, shaderInfo.attributeLocations.vertexSelectionColor);\r\n\r\n    frameBufferObjs.forEach((frameBufferObj) => {\r\n      const textureType = frameBufferObj.textureType;\r\n      frameBufferObj.bind(shaderInfo);\r\n      if (textureType ==  1) {\r\n        gl.bindTexture(gl.TEXTURE_2D, buffer.texture);\r\n        gl.enableVertexAttribArray(shaderInfo.attributeLocations.textureCoordinate);\r\n        buffer.bindBuffer(buffer.textureGlBuffer, 2, shaderInfo.attributeLocations.textureCoordinate);\r\n      }\r\n      gl.drawElements(gl.TRIANGLES, buffer.indicesLength, gl.UNSIGNED_SHORT, 0);\r\n      frameBufferObj.unbind();\r\n    });\r\n  }\r\n  // overriding\r\n  getBuffer(gl) {\r\n    if (this.buffer === undefined || this.dirty === true) {\r\n      this.buffer = new Buffer(gl);\r\n      let color = this.color;\r\n      let colors = [];\r\n      let selectionColor = this.selectionColor;\r\n      let selectionColors = [];\r\n      let positions = [];\r\n      let normals = [];\r\n      let textureCoordinates = [];\r\n\r\n      let topPositions = this.coordinates.map((coordinate) => vec3.fromValues(coordinate[0], coordinate[1], this.height));\r\n      let bottomPositions = this.coordinates.map((coordinate) => vec3.fromValues(coordinate[0], coordinate[1], 0));\r\n      let bbox = this.getMinMax(topPositions);\r\n      bbox.minz = 0;\r\n      bbox.maxz = this.height;\r\n\r\n      if (Tessellator.validateCCW(topPositions) < 0) {\r\n        topPositions.reverse();\r\n        bottomPositions.reverse();\r\n      }\r\n      \r\n      let topTriangles = Tessellator.tessellate(topPositions);\r\n      let bottomTriangles = Tessellator.tessellate(bottomPositions, false);\r\n      let sideTriangles = this.createSideTriangle(topPositions, bottomPositions, true);\r\n\r\n      let triangles = [];\r\n      triangles = triangles.concat(topTriangles);\r\n      triangles = triangles.concat(bottomTriangles);\r\n      triangles = triangles.concat(sideTriangles);\r\n      this.triangles = triangles;\r\n      triangles.forEach((triangle) => {\r\n        let trianglePositions = triangle.positions;\r\n        let normal = triangle.getNormal();\r\n        trianglePositions.forEach((position) => { // vec3\r\n          position.forEach((value) => positions.push(value));\r\n          normal.forEach((value) => normals.push(value));\r\n          color.forEach((value) => colors.push(value));\r\n          selectionColor.forEach((value) => selectionColors.push(value));\r\n          let xoffset = bbox.maxx - bbox.minx;\r\n          let yoffset = bbox.maxy - bbox.miny;\r\n          let zoffset = bbox.maxz - bbox.minz;\r\n          if (normal[0] == 1 || normal[0] == -1) {\r\n            textureCoordinates.push((position[1] - bbox.miny) / yoffset);\r\n            textureCoordinates.push((position[2] - bbox.minz) / zoffset);\r\n          } else if (normal[1] == 1 || normal[1] == -1) {\r\n            textureCoordinates.push((position[0] - bbox.minx) / xoffset);\r\n            textureCoordinates.push((position[2] - bbox.minz) / zoffset);\r\n          } else if (normal[2] == 1 || normal[2] == -1) {\r\n            textureCoordinates.push((position[0] - bbox.minx) / xoffset);\r\n            textureCoordinates.push((position[1] - bbox.miny) / yoffset);\r\n          }\r\n        });\r\n      });\r\n\r\n      let indices = new Uint16Array(positions.length/3);\r\n      this.buffer.indicesVBO = indices.map((obj, index) => index);\r\n      this.buffer.positionsVBO = new Float32Array(positions);\r\n      this.buffer.normalVBO = new Float32Array(normals);\r\n      this.buffer.colorVBO = new Float32Array(colors);\r\n      this.buffer.selectionColorVBO = new Float32Array(selectionColors);\r\n      this.buffer.textureVBO = new Float32Array(textureCoordinates);\r\n      if (this.texture) {\r\n        this.buffer.texture = this.texture;\r\n      } else if (this.image) {\r\n        this.buffer.texture = this.buffer.createTexture(this.image);\r\n      }\r\n      this.buffer.positionsGlBuffer = this.buffer.createBuffer(this.buffer.positionsVBO);\r\n      this.buffer.colorGlBuffer = this.buffer.createBuffer(this.buffer.colorVBO);\r\n      this.buffer.selectionColorGlBuffer = this.buffer.createBuffer(this.buffer.selectionColorVBO);\r\n      this.buffer.normalGlBuffer = this.buffer.createBuffer(this.buffer.normalVBO);\r\n      this.buffer.indicesGlBuffer = this.buffer.createIndexBuffer(this.buffer.indicesVBO);\r\n      this.buffer.textureGlBuffer = this.buffer.createBuffer(this.buffer.textureVBO);\r\n      this.buffer.indicesLength = this.buffer.indicesVBO.length;\r\n      this.dirty = false;\r\n    }\r\n    return this.buffer;\r\n  }\r\n  createSideTriangle(topPositions, bottomPositions, isCCW = true) {\r\n    let triangles = [];\r\n    if (topPositions.length != bottomPositions.length) {\r\n      throw new Error(\"plane length is not matched.\");\r\n    }\r\n    let length = topPositions.length;\r\n    for (let i = 0; i < length; i++) {\r\n      let topA = topPositions.getPrev(i);\r\n      let topB = topPositions.get(i);\r\n      let bottomA = bottomPositions.getPrev(i);\r\n      let bottomB = bottomPositions.get(i);\r\n      if (isCCW) {\r\n        triangles.push(new Triangle(topB, topA, bottomA));\r\n        triangles.push(new Triangle(topB, bottomA, bottomB));\r\n      } else {\r\n        triangles.push(new Triangle(topB, bottomA, topA));\r\n        triangles.push(new Triangle(topB, bottomB, bottomA));\r\n      }\r\n    }\r\n    return triangles;\r\n  }\r\n  createRandomColor() {\r\n    let r = Math.round(Math.random() * 10) / 10;\r\n    let g = Math.round(Math.random() * 10) / 10;\r\n    let b = Math.round(Math.random() * 10) / 10;\r\n    return vec4.fromValues(r, g, b, 1.0);\r\n  }\r\n}","import Buffer from '@/assets/webgl/Buffer.js';\r\nimport Renderable from '@/assets/webgl/abstract/Renderable.js';\r\nimport Triangle from '@/assets/webgl/geometry/Triangle.js';\r\n\r\nconst { mat2, mat3, mat4, vec2, vec3, vec4 } = self.glMatrix; // eslint-disable-line no-unused-vars\r\n\r\nexport default class Rectangle extends Renderable {\r\n  coordinates;\r\n  image;\r\n  texture;\r\n  reverse;\r\n\r\n  constructor(coordinates, options) {\r\n    super();\r\n    this.init(coordinates, options);\r\n  }\r\n  init(coordinates, options) {\r\n    this.length = 0;\r\n    this.reverse = false;\r\n    this.name = \"Untitled Rectangle\";\r\n    if (options?.id) {\r\n      this.id = options.id;\r\n      this.selectionColor = this.convertIdToColor(options.id);\r\n    }\r\n    if (coordinates) this.coordinates = coordinates;\r\n    if (options?.position) this.position = vec3.set(this.position, options.position.x, options.position.y, options.position.z);\r\n    if (options?.color) this.color = vec4.set(this.color, options?.color.r, options?.color.g, options?.color.b, options?.color.a);\r\n    if (options?.texture) this.texture = options.texture; \r\n    if (options?.image && !options?.texture) this.image = options.image;\r\n    if (options?.reverse) this.reverse = true; \r\n  }\r\n  render(gl, shaderInfo, frameBufferObjs) {\r\n    let tm = this.getTransformMatrix();\r\n    let rm = this.getRotationMatrix();\r\n    gl.uniformMatrix4fv(shaderInfo.uniformLocations.objectMatrix, false, tm);\r\n    gl.uniformMatrix4fv(shaderInfo.uniformLocations.rotationMatrix, false, rm);\r\n\r\n    let buffer = this.getBuffer(gl, false);\r\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer.indicesGlBuffer);\r\n    gl.enableVertexAttribArray(shaderInfo.attributeLocations.vertexPosition);\r\n    buffer.bindBuffer(buffer.postionsGlBuffer, 3, shaderInfo.attributeLocations.vertexPosition);\r\n    gl.enableVertexAttribArray(shaderInfo.attributeLocations.vertexNormal);\r\n    buffer.bindBuffer(buffer.normalGlBuffer, 3, shaderInfo.attributeLocations.vertexNormal);\r\n    gl.enableVertexAttribArray(shaderInfo.attributeLocations.vertexColor);\r\n    buffer.bindBuffer(buffer.colorGlBuffer, 4, shaderInfo.attributeLocations.vertexColor);\r\n    gl.enableVertexAttribArray(shaderInfo.attributeLocations.vertexSelectionColor);\r\n    buffer.bindBuffer(buffer.selectionColorGlBuffer, 4, shaderInfo.attributeLocations.vertexSelectionColor);\r\n\r\n    frameBufferObjs.forEach((frameBufferObj) => {\r\n      //const textureType = frameBufferObj.textureType;\r\n      frameBufferObj.bind(shaderInfo);\r\n      if (this.image || this.texture) {\r\n        gl.bindTexture(gl.TEXTURE_2D, buffer.texture);\r\n        gl.enableVertexAttribArray(shaderInfo.attributeLocations.textureCoordinate);\r\n        buffer.bindBuffer(buffer.textureGlBuffer, 2, shaderInfo.attributeLocations.textureCoordinate);\r\n      }\r\n      gl.drawElements(gl.TRIANGLES, buffer.indicesLength, gl.UNSIGNED_SHORT, 0);\r\n      frameBufferObj.unbind();\r\n    });\r\n  }\r\n  getBuffer(gl) {\r\n    this.dirty = (this.buffer === undefined || this.length != this.coordinates.length) ? true : false;\r\n    if (this.dirty === true) {\r\n      this.buffer = new Buffer(gl);\r\n      let color = this.color;\r\n      let selectionColor = this.selectionColor;\r\n      let colors = [];\r\n      let selectionColors = [];\r\n      let positions = [];\r\n      let normals = [];\r\n      let textureCoordinates = [];\r\n\r\n      let rectanglePositions = this.coordinates.map((coordinate) => vec3.fromValues(coordinate[0], coordinate[1], this.position[2]));\r\n      let bbox = this.getMinMax(rectanglePositions);\r\n\r\n      let leftTriangle = new Triangle(rectanglePositions[0], rectanglePositions[1], rectanglePositions[2]);\r\n      let rightTriangle = new Triangle(rectanglePositions[0], rectanglePositions[2], rectanglePositions[3]);\r\n\r\n      let triangles = [leftTriangle, rightTriangle];\r\n      triangles.forEach((triangle) => {\r\n        let trianglePositions = triangle.positions;\r\n        let normal = triangle.getNormal();\r\n        trianglePositions.forEach((position) => { // vec3\r\n          position.forEach((value) => {positions.push(value)});\r\n          normal.forEach((value) => normals.push(value));\r\n          color.forEach((value) => colors.push(value));\r\n          selectionColor.forEach((value) => selectionColors.push(value));\r\n          let rangeX = bbox.maxx - bbox.minx;\r\n          let rangeY = bbox.maxy - bbox.miny;\r\n          textureCoordinates.push((position[0] - bbox.minx) / rangeX);\r\n          textureCoordinates.push((position[1] - bbox.miny) / rangeY);\r\n        });\r\n      });\r\n\r\n      this.length = this.coordinates.length;\r\n      let indices = new Uint16Array(positions.length/3);\r\n      this.buffer.indicesVBO = indices.map((obj, index) => index );\r\n      this.buffer.positionsVBO = new Float32Array(positions);\r\n      this.buffer.colorVBO = new Float32Array(colors);\r\n      this.buffer.selectionColorVBO = new Float32Array(selectionColors);\r\n      this.buffer.normalVBO = new Float32Array(normals);\r\n      this.buffer.textureVBO = new Float32Array(textureCoordinates);\r\n      if (this.texture) {\r\n        this.buffer.texture = this.texture;\r\n      } else if (!this.texture && this.image) {\r\n        let texture = this.buffer.createTexture(this.image);\r\n        this.buffer.texture = texture;\r\n        this.texture = texture;\r\n      }\r\n      this.buffer.postionsGlBuffer = this.buffer.createBuffer(this.buffer.positionsVBO);\r\n      this.buffer.colorGlBuffer = this.buffer.createBuffer(this.buffer.colorVBO);\r\n      this.buffer.selectionColorGlBuffer = this.buffer.createBuffer(this.buffer.selectionColorVBO);\r\n      this.buffer.normalGlBuffer = this.buffer.createBuffer(this.buffer.normalVBO);\r\n      this.buffer.indicesGlBuffer = this.buffer.createIndexBuffer(this.buffer.indicesVBO);\r\n      this.buffer.textureGlBuffer = this.buffer.createBuffer(this.buffer.textureVBO);\r\n      this.buffer.indicesLength = this.buffer.indicesVBO.length;\r\n      this.dirty = false;\r\n    }\r\n    return this.buffer;\r\n  }\r\n}","import Buffer from '@/assets/webgl/Buffer.js';\r\nimport Renderable from '@/assets/webgl/abstract/Renderable.js';\r\n\r\nconst { mat2, mat3, mat4, vec2, vec3, vec4 } = self.glMatrix; // eslint-disable-line no-unused-vars\r\n\r\nexport default class Point extends Renderable {\r\n  constructor(options) {\r\n    super();\r\n    this.init(options);\r\n  }\r\n  init(options) {\r\n    this.name = \"Untitled Point\";\r\n    if (options?.height) this.height = options.height;\r\n    if (options?.position) this.position = vec3.set(this.position, options.position.x, options.position.y, options.position.z);\r\n    if (options?.color) this.color = vec4.set(this.color, options?.color.r, options?.color.g, options?.color.b, options?.color.a);\r\n  }\r\n  render(gl, shaderInfo, frameBufferObjs) {\r\n    let tm = this.getTransformMatrix();\r\n    gl.uniformMatrix4fv(shaderInfo.uniformLocations.objectMatrix, false, tm);\r\n\r\n    let buffer = this.getBuffer(gl, shaderInfo);\r\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer.indicesGlBuffer);\r\n    frameBufferObjs.forEach((frameBufferObj) => {\r\n      const textureType = frameBufferObj.textureType;\r\n      frameBufferObj.bind();\r\n      //gl.uniform1i(shaderInfo.uniformLocations.textureType, 0);\r\n      if (textureType == 4) {\r\n        gl.enableVertexAttribArray(shaderInfo.attributeLocations.vertexColor);\r\n        buffer.bindBuffer(buffer.selectionColorGlBuffer, 4, shaderInfo.attributeLocations.vertexColor);\r\n      } else {\r\n        gl.enableVertexAttribArray(shaderInfo.attributeLocations.vertexColor);\r\n        buffer.bindBuffer(buffer.colorGlBuffer, 4, shaderInfo.attributeLocations.vertexColor);\r\n      }\r\n      gl.enableVertexAttribArray(shaderInfo.attributeLocations.vertexPosition);\r\n      buffer.bindBuffer(buffer.positionsGlBuffer, 3, shaderInfo.attributeLocations.vertexPosition);\r\n      \r\n      gl.disable(gl.DEPTH_TEST);\r\n      gl.drawElements(gl.POINTS, buffer.indicesLength, gl.UNSIGNED_SHORT, 0);\r\n      gl.enable(gl.DEPTH_TEST);\r\n      frameBufferObj.unbind();\r\n    });\r\n  }\r\n  getBuffer(gl) {\r\n    if (this.buffer === undefined || this.dirty === true) {\r\n      this.buffer = new Buffer(gl);\r\n\r\n      let colors = [];\r\n      let selectionColors = [];\r\n      let positions = [];\r\n      positions.push(this.position);\r\n      this.color.forEach((value) => colors.push(value));\r\n      this.selectionColor.forEach((value) => selectionColors.push(value));\r\n\r\n      let indices = new Uint16Array(positions.length);\r\n      this.buffer.indicesVBO = indices.map((obj, index) => index);\r\n      this.buffer.positionsVBO = new Float32Array(positions);\r\n      this.buffer.colorVBO = new Float32Array(colors);\r\n      this.buffer.selectionColorVBO = new Float32Array(selectionColors);\r\n\r\n      this.buffer.positionsGlBuffer = this.buffer.createBuffer(this.buffer.positionsVBO);\r\n      this.buffer.colorGlBuffer = this.buffer.createBuffer(this.buffer.colorVBO);\r\n      this.buffer.selectionColorGlBuffer = this.buffer.createBuffer(this.buffer.selectionColorVBO);\r\n      this.buffer.indicesGlBuffer = this.buffer.createIndexBuffer(this.buffer.indicesVBO);\r\n      this.buffer.indicesLength = this.buffer.indicesVBO.length;\r\n      \r\n      this.dirty = false;\r\n    }\r\n    return this.buffer;\r\n  }\r\n}","import Buffer from '@/assets/webgl/Buffer.js';\r\nimport Renderable from '@/assets/webgl/abstract/Renderable.js';\r\n\r\nconst { mat2, mat3, mat4, vec2, vec3, vec4 } = self.glMatrix; // eslint-disable-line no-unused-vars\r\n\r\nexport default class Line extends Renderable {\r\n  coordinates;\r\n  length;\r\n\r\n  constructor(coordinates, options) {\r\n    super();\r\n    this.init(coordinates, options);\r\n  }\r\n  init(coordinates, options) {\r\n    this.length = 0;\r\n    this.name = \"Untitled Line\";\r\n    if (coordinates) this.coordinates = coordinates;\r\n    if (options?.height) this.height = options.height;\r\n    if (options?.color) this.color = vec4.set(this.color, options?.color.r, options?.color.g, options?.color.b, options?.color.a);\r\n  }\r\n  render(gl, shaderInfo, renderOptions) {\r\n    let tm = this.getTransformMatrix();\r\n    gl.uniformMatrix4fv(shaderInfo.uniformLocations.objectMatrix, false, tm);\r\n\r\n    let buffer = this.getBuffer(gl, false);\r\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer.indicesGlBuffer);\r\n    gl.enableVertexAttribArray(shaderInfo.attributeLocations.vertexPosition);\r\n    gl.enableVertexAttribArray(shaderInfo.attributeLocations.vertexColor);\r\n\r\n    let textureType = buffer.texture ? 1 : 0;\r\n    textureType = (renderOptions?.textureType !== undefined) ? renderOptions?.textureType : textureType;\r\n    gl.uniform1i(shaderInfo.uniformLocations.textureType, textureType);\r\n\r\n    if (textureType == 4) { // selection\r\n      buffer.bindBuffer(buffer.selectionColorGlBuffer, 4, shaderInfo.attributeLocations.vertexColor);\r\n    } else {\r\n      buffer.bindBuffer(buffer.colorGlBuffer, 4, shaderInfo.attributeLocations.vertexColor);\r\n    }\r\n    buffer.bindBuffer(buffer.positionsGlBuffer, 3, shaderInfo.attributeLocations.vertexPosition);\r\n    //buffer.bindBuffer(buffer.colorGlBuffer, 4, shaderInfo.attributeLocations.vertexColor);\r\n\r\n    gl.disable(gl.DEPTH_TEST);\r\n    gl.drawElements(gl.LINE_STRIP, buffer.indicesLength, gl.UNSIGNED_SHORT, 0);\r\n    gl.enable(gl.DEPTH_TEST);\r\n  }\r\n  getBuffer(gl) {\r\n    if (this.buffer === undefined || this.length != this.coordinates.length || this.dirty === true) {\r\n      this.buffer = new Buffer(gl);\r\n\r\n      let colors = [];\r\n      let selectionColors = [];\r\n      let positions = [];\r\n\r\n      this.coordinates.forEach((coordinate) => {\r\n        coordinate.forEach((value) => positions.push(value));\r\n        this.color.forEach((value) => colors.push(value));\r\n        this.selectionColor.forEach((value) => selectionColors.push(value));\r\n      });\r\n\r\n      this.length = this.coordinates.length;\r\n      let indices = new Uint16Array(this.length);\r\n      this.buffer.indicesVBO = indices.map((obj, index) => index );\r\n      this.buffer.positionsVBO = new Float32Array(positions);\r\n      this.buffer.colorVBO = new Float32Array(colors);\r\n      this.buffer.selectionColorVBO = new Float32Array(selectionColors);\r\n\r\n      this.buffer.positionsGlBuffer = this.buffer.createBuffer(this.buffer.positionsVBO);\r\n      this.buffer.colorGlBuffer = this.buffer.createBuffer(this.buffer.colorVBO);\r\n      this.buffer.selectionColorGlBuffer = this.buffer.createBuffer(this.buffer.selectionColorVBO);\r\n      this.buffer.indicesGlBuffer = this.buffer.createIndexBuffer(this.buffer.indicesVBO);\r\n      this.buffer.indicesLength = this.buffer.indicesVBO.length;\r\n\r\n      this.dirty = false;\r\n    }\r\n    return this.buffer;\r\n  }\r\n}","import Buffer from '@/assets/webgl/Buffer.js';\r\nimport Renderable from '@/assets/webgl/abstract/Renderable.js';\r\nimport Triangle from '../geometry/Triangle.js';\r\nimport Tessellator from '../functional/Tessellator.js';\r\n\r\nconst { mat2, mat3, mat4, vec2, vec3, vec4 } = self.glMatrix; // eslint-disable-line no-unused-vars\r\n\r\nexport default class Cylinder extends Renderable {\r\n  height;\r\n  triangles;\r\n  image;\r\n\r\n  constructor(options) {\r\n    super();\r\n    this.init(options);\r\n  }\r\n\r\n  init(options) {\r\n    this.triangles = [];\r\n    this.radius = 1.0;\r\n    this.height = 3.0;\r\n    this.density = 36;\r\n    this.name = \"Untitled Cylinder\";\r\n    if (options?.radius) this.radius = options.radius;\r\n    if (options?.height) this.height = options.height;\r\n    if (options?.density) this.density = options.density;\r\n    if (options?.position) this.position = vec3.set(this.position, options.position.x, options.position.y, options.position.z);\r\n    if (options?.rotation) this.rotation = vec3.set(this.rotation, options.rotation.pitch, options.rotation.roll, options.rotation.heading);\r\n    if (options?.color) this.color = vec4.set(this.color, options?.color.r, options?.color.g, options?.color.b, options?.color.a);\r\n    if (options?.image) this.image = options.image;\r\n  }\r\n\r\n  rotate(xValue, yValue, tm) {\r\n    let pitchAxis = vec3.fromValues(1, 0, 0);\r\n    //let headingMatrix = mat4.fromZRotation(mat4.create(), xValue);\r\n    let pitchMatrix = mat4.fromRotation(mat4.create(), yValue, pitchAxis);\r\n\r\n     return mat4.multiply(tm, tm, pitchMatrix);\r\n  }\r\n\r\n  render(gl, shaderInfo, frameBufferObjs) {\r\n    let tm = this.getTransformMatrix();\r\n    let rm = this.getRotationMatrix();\r\n    gl.uniformMatrix4fv(shaderInfo.uniformLocations.objectMatrix, false, tm);\r\n    gl.uniformMatrix4fv(shaderInfo.uniformLocations.rotationMatrix, false, rm);\r\n\r\n    let buffer = this.getBuffer(gl, false);\r\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer.indicesGlBuffer);\r\n    gl.enableVertexAttribArray(shaderInfo.attributeLocations.vertexPosition);\r\n    buffer.bindBuffer(buffer.positionsGlBuffer, 3, shaderInfo.attributeLocations.vertexPosition);\r\n    gl.enableVertexAttribArray(shaderInfo.attributeLocations.vertexNormal);\r\n    buffer.bindBuffer(buffer.normalGlBuffer, 3, shaderInfo.attributeLocations.vertexNormal);\r\n    gl.enableVertexAttribArray(shaderInfo.attributeLocations.vertexColor);\r\n    buffer.bindBuffer(buffer.colorGlBuffer, 4, shaderInfo.attributeLocations.vertexColor);\r\n    gl.enableVertexAttribArray(shaderInfo.attributeLocations.vertexSelectionColor);\r\n    buffer.bindBuffer(buffer.selectionColorGlBuffer, 4, shaderInfo.attributeLocations.vertexSelectionColor);\r\n\r\n    frameBufferObjs.forEach((frameBufferObj) => {\r\n      frameBufferObj.bind();\r\n      if (this.image || this.texture) {\r\n        gl.bindTexture(gl.TEXTURE_2D, buffer.texture);\r\n        gl.enableVertexAttribArray(shaderInfo.attributeLocations.textureCoordinate);\r\n        buffer.bindBuffer(buffer.textureGlBuffer, 2, shaderInfo.attributeLocations.textureCoordinate);\r\n      }\r\n      gl.drawElements(gl.TRIANGLES, buffer.indicesLength, gl.UNSIGNED_SHORT, 0);\r\n      frameBufferObj.unbind();\r\n    });\r\n  }\r\n  // overriding\r\n  getBuffer(gl) {\r\n    if (this.buffer === undefined || this.dirty === true) {\r\n      this.buffer = new Buffer(gl);\r\n      let color = this.color;\r\n      let selectionColor = this.selectionColor;\r\n      let colors = [];\r\n      let selectionColors = [];\r\n      let positions = [];\r\n      let normals = [];\r\n      let textureCoordinates = [];\r\n\r\n      this.coordinates = [];\r\n      let angleOffset = (360 / this.density);\r\n      let origin = vec2.fromValues(0.0, 0.0);\r\n      //console.log(origin);\r\n\r\n      let rotateVec2 = vec2.fromValues(0.0, 0.0 + this.radius);\r\n      for (let i = 0; i < this.density; i++) {\r\n        let angle = Math.radian(i * angleOffset);\r\n        let rotated = vec2.rotate(vec2.create(), rotateVec2, origin, angle);\r\n        this.coordinates.push(rotated);\r\n      }\r\n\r\n      let topPositions = this.coordinates.map((coordinate) => vec3.fromValues(coordinate[0], coordinate[1], this.height));\r\n      let bottomPositions = this.coordinates.map((coordinate) => vec3.fromValues(coordinate[0], coordinate[1], 0.0));\r\n      let bbox = this.getMinMax(topPositions);\r\n      bbox.minz = this.position[2];\r\n      bbox.maxz = this.position[2] + this.height;\r\n\r\n      if (Tessellator.validateCCW(topPositions) < 0) {\r\n        topPositions.reverse();\r\n        bottomPositions.reverse();\r\n      }\r\n      \r\n      let topOrigin = vec3.fromValues(0.0, 0.0, this.height);\r\n      let topTriangles = topPositions.map((topPosition, index) => {\r\n        let nextPosition = topPositions.getNext(index);\r\n        return new Triangle(topOrigin, topPosition, nextPosition);\r\n      });\r\n      let bottomOrigin = vec3.fromValues(0.0, 0.0, 0.0);\r\n      let bottomTriangles = bottomPositions.map((bottomPosition, index) => {\r\n        let nextPosition = bottomPositions.getNext(index);\r\n        return new Triangle(bottomOrigin, nextPosition, bottomPosition);\r\n      });\r\n      let sideTriangles = this.createSideTriangle(topPositions, bottomPositions, true);\r\n\r\n      let triangles = [];\r\n      triangles = triangles.concat(topTriangles);\r\n      triangles = triangles.concat(bottomTriangles);\r\n      triangles = triangles.concat(sideTriangles);\r\n      this.triangles = triangles;\r\n      triangles.forEach((triangle) => {\r\n        let trianglePositions = triangle.positions;\r\n        let normal = triangle.getNormal();\r\n        trianglePositions.forEach((position) => { // vec3\r\n          position.forEach((value) => positions.push(value));\r\n          normal.forEach((value) => normals.push(value));\r\n          color.forEach((value) => colors.push(value));\r\n          selectionColor.forEach((value) => selectionColors.push(value));\r\n          let xoffset = bbox.maxx - bbox.minx;\r\n          let yoffset = bbox.maxy - bbox.miny;\r\n          let zoffset = bbox.maxz - bbox.minz;\r\n          if (normal[0] == 1 || normal[0] == -1) {\r\n            textureCoordinates.push((position[1] - bbox.miny) / yoffset);\r\n            textureCoordinates.push((position[2] - bbox.minz) / zoffset);\r\n          } else if (normal[1] == 1 || normal[1] == -1) {\r\n            textureCoordinates.push((position[0] - bbox.minx) / xoffset);\r\n            textureCoordinates.push((position[2] - bbox.minz) / zoffset);\r\n          } else if (normal[2] == 1 || normal[2] == -1) {\r\n            textureCoordinates.push((position[0] - bbox.minx) / xoffset);\r\n            textureCoordinates.push((position[1] - bbox.miny) / yoffset);\r\n          }\r\n        });\r\n      });\r\n\r\n      let indices = new Uint16Array(positions.length);\r\n      this.buffer.indicesVBO = indices.map((obj, index) => index);\r\n      this.buffer.positionsVBO = new Float32Array(positions);\r\n      this.buffer.normalVBO = new Float32Array(normals);\r\n      this.buffer.colorVBO = new Float32Array(colors);\r\n      this.buffer.selectionColorVBO = new Float32Array(selectionColors);\r\n      this.buffer.textureVBO = new Float32Array(textureCoordinates);\r\n      if (this.image) {\r\n        let texture = this.buffer.createTexture(this.image);\r\n        this.buffer.texture = texture;\r\n        this.texture = texture;\r\n      }\r\n      this.buffer.positionsGlBuffer = this.buffer.createBuffer(this.buffer.positionsVBO);\r\n      this.buffer.colorGlBuffer = this.buffer.createBuffer(this.buffer.colorVBO);\r\n      this.buffer.selectionColorGlBuffer = this.buffer.createBuffer(this.buffer.selectionColorVBO);\r\n      this.buffer.normalGlBuffer = this.buffer.createBuffer(this.buffer.normalVBO);\r\n      this.buffer.indicesGlBuffer = this.buffer.createIndexBuffer(this.buffer.indicesVBO);\r\n      this.buffer.textureGlBuffer = this.buffer.createBuffer(this.buffer.textureVBO);\r\n      this.buffer.indicesLength = this.buffer.indicesVBO.length;\r\n      this.dirty = false;\r\n    }\r\n    return this.buffer;\r\n  }\r\n  createSideTriangle(topPositions, bottomPositions, isCCW = true) {\r\n    let triangles = [];\r\n    if (topPositions.length != bottomPositions.length) {\r\n      throw new Error(\"plane length is not matched.\");\r\n    }\r\n    let length = topPositions.length;\r\n    for (let i = 0; i < length; i++) {\r\n      let topA = topPositions.getPrev(i);\r\n      let topB = topPositions.get(i);\r\n      let bottomA = bottomPositions.getPrev(i);\r\n      let bottomB = bottomPositions.get(i);\r\n      if (isCCW) {\r\n        triangles.push(new Triangle(topB, topA, bottomA));\r\n        triangles.push(new Triangle(topB, bottomA, bottomB));\r\n      } else {\r\n        triangles.push(new Triangle(topB, bottomA, topA));\r\n        triangles.push(new Triangle(topB, bottomB, bottomA));\r\n      }\r\n    }\r\n    return triangles;\r\n  }\r\n  createRandomColor() {\r\n    let r = Math.round(Math.random() * 10) / 10;\r\n    let g = Math.round(Math.random() * 10) / 10;\r\n    let b = Math.round(Math.random() * 10) / 10;\r\n    return vec4.fromValues(r, g, b, 1.0);\r\n  }\r\n}","import Buffer from '@/assets/webgl/Buffer.js';\r\nimport Renderable from '@/assets/webgl/abstract/Renderable.js';\r\nimport Triangle from '@/assets/webgl/geometry/Triangle';\r\n\r\nconst { mat2, mat3, mat4, vec2, vec3, vec4 } = self.glMatrix; // eslint-disable-line no-unused-vars\r\n\r\nexport default class Obj extends Renderable {\r\n  constructor(options, objData) {\r\n    super();\r\n    this.init(options, objData);\r\n  }\r\n  init(options, objData) {\r\n    this.triangles = [];\r\n    this.radius = 1.0;\r\n    this.height = 3.0;\r\n    this.density = 36;\r\n    this.scale = 1.0;\r\n\r\n    this.name = \"Untitled OBJ File\";\r\n\r\n    if (options?.radius) this.radius = options.radius;\r\n    if (options?.height) this.height = options.height;\r\n    if (options?.density) this.density = options.density;\r\n    if (options?.position) this.position = vec3.set(this.position, options.position.x, options.position.y, options.position.z);\r\n    if (options?.rotation) this.rotation = vec3.set(this.rotation, options.rotation.pitch, options.rotation.roll, options.rotation.heading);\r\n    if (options?.color) this.color = vec4.set(this.color, options?.color.r, options?.color.g, options?.color.b, options?.color.a);\r\n    if (options?.image) this.image = options.image;\r\n    if (options?.scale) this.scale = options.scale;\r\n\r\n    this.objData = objData;\r\n  }\r\n  render(gl, shaderInfo, frameBufferObjs) {\r\n    let tm = this.getTransformMatrix();\r\n    let rm = this.getRotationMatrix();\r\n    gl.uniformMatrix4fv(shaderInfo.uniformLocations.objectMatrix, false, tm);\r\n    gl.uniformMatrix4fv(shaderInfo.uniformLocations.rotationMatrix, false, rm);\r\n    let buffer = this.getBuffer(gl, false);\r\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer.indicesGlBuffer);\r\n    gl.enableVertexAttribArray(shaderInfo.attributeLocations.vertexPosition);\r\n    buffer.bindBuffer(buffer.positionsGlBuffer, 3, shaderInfo.attributeLocations.vertexPosition);\r\n    gl.enableVertexAttribArray(shaderInfo.attributeLocations.vertexNormal);\r\n    buffer.bindBuffer(buffer.normalGlBuffer, 3, shaderInfo.attributeLocations.vertexNormal);\r\n    gl.enableVertexAttribArray(shaderInfo.attributeLocations.vertexColor);\r\n    buffer.bindBuffer(buffer.colorGlBuffer, 4, shaderInfo.attributeLocations.vertexColor);\r\n    gl.enableVertexAttribArray(shaderInfo.attributeLocations.vertexSelectionColor);\r\n    buffer.bindBuffer(buffer.selectionColorGlBuffer, 4, shaderInfo.attributeLocations.vertexSelectionColor);\r\n    frameBufferObjs.forEach((frameBufferObj) => {\r\n      frameBufferObj.bind();\r\n      if (this.image || this.texture) {\r\n        gl.bindTexture(gl.TEXTURE_2D, buffer.texture);\r\n        gl.enableVertexAttribArray(shaderInfo.attributeLocations.textureCoordinate);\r\n        buffer.bindBuffer(buffer.textureGlBuffer, 2, shaderInfo.attributeLocations.textureCoordinate);\r\n      }\r\n      gl.drawElements(gl.TRIANGLES, buffer.indicesLength, gl.UNSIGNED_SHORT, 0);\r\n      frameBufferObj.unbind();\r\n    });\r\n  }\r\n  // overriding\r\n  getBuffer(gl) {\r\n    if (this.buffer === undefined || this.dirty === true) {\r\n      this.buffer = new Buffer(gl);\r\n      let color = this.color;\r\n      let selectionColor = this.selectionColor;\r\n      let colors = [];\r\n      let selectionColors = [];\r\n      let positions = [];\r\n      let normals = [];\r\n      let textureCoordinates = [];\r\n      //let indices = [];\r\n      let coordinates = [];\r\n\r\n      let objData = this.objData;\r\n\r\n\r\n\r\n      //let pt = PolyTree;\r\n      //let house = House;\r\n      \r\n\r\n      let scaler = this.scale;\r\n      /*let randomValue = Math.randomInt();\r\n      if (randomValue % 3 == 0) {\r\n        pt = House;\r\n        scaler = 1;\r\n      } else if (randomValue % 3 == 1) {\r\n        pt = PolyTree;\r\n        scaler = 1.5;\r\n      } else {\r\n        pt = WoodenWatch;\r\n        scaler = 5;\r\n      }*/\r\n      //pt = house;\r\n      //pt = PolyTree;\r\n\r\n      let minX = Number.MAX_SAFE_INTEGER;\r\n      let minY = Number.MAX_SAFE_INTEGER;\r\n      let minZ = Number.MAX_SAFE_INTEGER;\r\n      let maxX = Number.MIN_SAFE_INTEGER;\r\n      let maxY = Number.MIN_SAFE_INTEGER;\r\n      let maxZ = Number.MIN_SAFE_INTEGER;\r\n\r\n      let triangles = [];\r\n      objData.vertices.forEach((vertice) => {\r\n        let xyz = vertice.split(\" \").filter(block => block !== '');\r\n        let x = xyz[0] * scaler;\r\n        let y = xyz[1] * scaler;\r\n        let z = xyz[2] * scaler;\r\n        coordinates.push(vec3.fromValues(x, z, y));\r\n      });\r\n\r\n      let allCoordinates = [];\r\n      objData.allVertices.forEach((vertice) => {\r\n        let xyz = vertice.split(\" \").filter(block => block !== '');\r\n        let x = xyz[0] * scaler;\r\n        let y = xyz[1] * scaler;\r\n        let z = xyz[2] * scaler;\r\n\r\n        if (minX > x) minX = x;\r\n        if (minY > y) minY = y;\r\n        if (minZ > z) minZ = z;\r\n        if (maxX < x) maxX = x;\r\n        if (maxY < y) maxY = y;\r\n        if (maxZ < z) maxZ = z;\r\n        allCoordinates.push(vec3.fromValues(x, z, y));\r\n      });\r\n      console.log(minX, minY, minZ, maxX, maxY, maxZ);\r\n\r\n      let sizeX = (minX * -1) + maxX;\r\n      let sizeY = (minY * -1) + maxY; \r\n      let sizeZ = (minZ * -1) + maxZ; \r\n      console.log(sizeX, sizeY, sizeZ);\r\n\r\n      /*pt.vertices.replaceAll('v ', '').split('\\n').forEach((vertice) => {\r\n        let xyz = vertice.split(\" \");\r\n        coordinates.push(vec3.fromValues(xyz[0] * scaler, xyz[2] * scaler, xyz[1] * scaler));\r\n      });*/\r\n      /*pt.normals.replaceAll('vn ', '').split('\\n').forEach((normal) => {\r\n        normal.split(\" \").forEach((data) => {\r\n          normals.push(data);\r\n        });\r\n      });*/\r\n      /*pt.textureCoordinates.replaceAll('vt ', '').split('\\n').forEach((textureCoordinate) => {\r\n        textureCoordinate.split(\" \").forEach((data) => {\r\n          textureCoordinates.push(data);\r\n        });\r\n      });*/\r\n\r\n      objData.faces.forEach((face) => {\r\n        let splitedFaces = face.split(\" \").filter(block => block !== '');\r\n        let length = splitedFaces.length;\r\n        if (length >= 3) {\r\n          let face = splitedFaces.map((theIndex) => {\r\n            return parseInt(theIndex.split(\"/\")[0]);\r\n          })\r\n          let theCoordinates = face.map((theIndex) => {\r\n            //theIndex = theIndex.replace(\"-\", \"\");\r\n            if (theIndex < 0) {\r\n              return coordinates[coordinates.length + theIndex];\r\n            } else {\r\n              return allCoordinates[theIndex - 1];\r\n            }\r\n          });\r\n          for (let loop = 2; loop < length; loop++) {\r\n            triangles.push(new Triangle(theCoordinates[0], theCoordinates[loop], theCoordinates[loop-1]));\r\n            color.forEach((value) => colors.push(value));\r\n            color.forEach((value) => colors.push(value));\r\n            color.forEach((value) => colors.push(value));\r\n          }\r\n        } \r\n      });\r\n\r\n\r\n      /*let testColor = vec4.fromValues(0.5, 0.3, 0.1, 0.0);\r\n      pt.indices1.replaceAll('f ', '').split('\\n').forEach((indicesText) => {\r\n        let indicesSplited = indicesText.split(\" \");\r\n        let length = indicesSplited.length;\r\n        if (length >= 3) {\r\n          let theIndices = indicesSplited.map((theIndex) => {\r\n            return theIndex.split(\"/\")[0];\r\n          })\r\n          let theCoordinates = theIndices.map((theIndex) => {\r\n            return coordinates[theIndex - 1];\r\n          });\r\n          for (let loop = 2; loop < length; loop++) {\r\n            triangles.push(new Triangle(theCoordinates[0], theCoordinates[loop], theCoordinates[loop-1]));\r\n            testColor.forEach((value) => colors.push(value));\r\n            testColor.forEach((value) => colors.push(value));\r\n            testColor.forEach((value) => colors.push(value));\r\n          }\r\n        } \r\n      });\r\n\r\n      if (pt?.indices2) {\r\n        pt.indices2.replaceAll('f ', '').split('\\n').forEach((indicesText) => {\r\n          let indicesSplited = indicesText.split(\" \");\r\n          let length = indicesSplited.length;\r\n          if (length >= 3) {\r\n            let theIndices = indicesSplited.map((theIndex) => {\r\n              return theIndex.split(\"/\")[0];\r\n            })\r\n            let theCoordinates = theIndices.map((theIndex) => {\r\n              return coordinates[theIndex - 1];\r\n            });\r\n            for (let loop = 2; loop < length; loop++) {\r\n              triangles.push(new Triangle(theCoordinates[0], theCoordinates[loop], theCoordinates[loop-1]));\r\n              color.forEach((value) => colors.push(value));\r\n              color.forEach((value) => colors.push(value));\r\n              color.forEach((value) => colors.push(value));\r\n            }\r\n          } \r\n        });\r\n      }*/\r\n\r\n      triangles.forEach((triangle) => {\r\n        let trianglePositions = triangle.positions;\r\n        let normal = triangle.getNormal();\r\n        trianglePositions.forEach((position) => { // vec3\r\n          position.forEach((value) => positions.push(value));\r\n          normal.forEach((value) => normals.push(value));\r\n          //color.forEach((value) => colors.push(value));\r\n          selectionColor.forEach((value) => selectionColors.push(value));\r\n          \r\n          /*let xoffset = bbox.maxx - bbox.minx;\r\n          let yoffset = bbox.maxy - bbox.miny;\r\n          let zoffset = bbox.maxz - bbox.minz;\r\n          if (normal[0] == 1 || normal[0] == -1) {\r\n            textureCoordinates.push((position[1] - bbox.miny) / yoffset);\r\n            textureCoordinates.push((position[2] - bbox.minz) / zoffset);\r\n          } else if (normal[1] == 1 || normal[1] == -1) {\r\n            textureCoordinates.push((position[0] - bbox.minx) / xoffset);\r\n            textureCoordinates.push((position[2] - bbox.minz) / zoffset);\r\n          } else if (normal[2] == 1 || normal[2] == -1) {\r\n            textureCoordinates.push((position[0] - bbox.minx) / xoffset);\r\n            textureCoordinates.push((position[1] - bbox.miny) / yoffset);\r\n          }*/\r\n        });\r\n      });\r\n\r\n\r\n      this.coordinates = [];\r\n\r\n      let indices = new Uint16Array(positions.length);\r\n      this.buffer.indicesVBO = indices.map((obj, index) => index);\r\n      //this.buffer.indicesVBO = new Uint16Array(indices);\r\n      this.buffer.positionsVBO = new Float32Array(positions);\r\n      this.buffer.normalVBO = new Float32Array(normals);\r\n      this.buffer.colorVBO = new Float32Array(colors);\r\n      this.buffer.selectionColorVBO = new Float32Array(selectionColors);\r\n      this.buffer.textureVBO = new Float32Array(textureCoordinates);\r\n      if (this.image) {\r\n        let texture = this.buffer.createTexture(this.image);\r\n        this.buffer.texture = texture;\r\n        this.texture = texture;\r\n      }\r\n      this.buffer.positionsGlBuffer = this.buffer.createBuffer(this.buffer.positionsVBO);\r\n      this.buffer.colorGlBuffer = this.buffer.createBuffer(this.buffer.colorVBO);\r\n      this.buffer.selectionColorGlBuffer = this.buffer.createBuffer(this.buffer.selectionColorVBO);\r\n      this.buffer.normalGlBuffer = this.buffer.createBuffer(this.buffer.normalVBO);\r\n      this.buffer.indicesGlBuffer = this.buffer.createIndexBuffer(this.buffer.indicesVBO);\r\n      this.buffer.textureGlBuffer = this.buffer.createBuffer(this.buffer.textureVBO);\r\n      this.buffer.indicesLength = this.buffer.indicesVBO.length;\r\n      this.dirty = false;\r\n    }\r\n    return this.buffer;\r\n  }\r\n}","import Buffer from '@/assets/webgl/Buffer.js';\r\nimport Renderable from '@/assets/webgl/abstract/Renderable.js';\r\n\r\nconst { mat2, mat3, mat4, vec2, vec3, vec4 } = self.glMatrix; // eslint-disable-line no-unused-vars\r\n\r\nexport default class BatchObject extends Renderable {\r\n  height;\r\n  coordinates;\r\n  triangles;\r\n  image;\r\n\r\n  constructor(buffer) {\r\n    super();\r\n    this.init(buffer);\r\n  }\r\n\r\n  init(buffer) {\r\n    this.name = \"Untitled BatchObject\";\r\n\r\n    this.triangles = [];\r\n    this.colors = buffer.colors;\r\n    this.selectionColors = buffer.selectionColors;\r\n    this.positions = buffer.positions;\r\n    this.normals = buffer.normals;\r\n    this.textures = buffer.textures;\r\n    this.textureCoordinates = buffer.textureCoordinates;\r\n  }\r\n  render(gl, shaderInfo, frameBufferObjs) {\r\n    let tm = this.getTransformMatrix();\r\n    let rm = this.getRotationMatrix();\r\n    gl.uniformMatrix4fv(shaderInfo.uniformLocations.objectMatrix, false, tm);\r\n    gl.uniformMatrix4fv(shaderInfo.uniformLocations.rotationMatrix, false, rm);\r\n\r\n    let buffer = this.getBuffer(gl, shaderInfo);\r\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer.indicesGlBuffer);\r\n    gl.enableVertexAttribArray(shaderInfo.attributeLocations.vertexNormal);\r\n    buffer.bindBuffer(buffer.normalGlBuffer, 3, shaderInfo.attributeLocations.vertexNormal);\r\n    gl.enableVertexAttribArray(shaderInfo.attributeLocations.vertexPosition);\r\n    buffer.bindBuffer(buffer.positionsGlBuffer, 3, shaderInfo.attributeLocations.vertexPosition);\r\n    gl.enableVertexAttribArray(shaderInfo.attributeLocations.vertexColor);\r\n    buffer.bindBuffer(buffer.colorGlBuffer, 4, shaderInfo.attributeLocations.vertexColor);\r\n    gl.enableVertexAttribArray(shaderInfo.attributeLocations.vertexSelectionColor);\r\n    buffer.bindBuffer(buffer.selectionColorGlBuffer, 4, shaderInfo.attributeLocations.vertexSelectionColor);\r\n\r\n    gl.bindTexture(gl.TEXTURE_2D, buffer.texture);\r\n    gl.enableVertexAttribArray(shaderInfo.attributeLocations.textureCoordinate);\r\n    buffer.bindBuffer(buffer.textureGlBuffer, 2, shaderInfo.attributeLocations.textureCoordinate);\r\n\r\n    frameBufferObjs.forEach((frameBufferObj) => {\r\n      frameBufferObj.bind();\r\n      gl.drawElements(gl.TRIANGLES, buffer.indicesLength, gl.UNSIGNED_SHORT, 0);\r\n      frameBufferObj.unbind();\r\n    });\r\n  }\r\n  // overriding\r\n  getBuffer(gl) {\r\n    if (this.buffer === undefined || this.dirty === true) {\r\n      this.buffer = new Buffer(gl);\r\n\r\n      let colors = this.colors;\r\n      let selectionColors = this.selectionColors;\r\n      let positions = this.positions;\r\n      let normals = this.normals;\r\n      let textureCoordinates = this.textureCoordinates;\r\n      let textures = this.textures;\r\n      \r\n      this.buffer.texture = textures[0];\r\n\r\n      let indices = new Uint16Array(positions.length/3);\r\n      this.buffer.indicesVBO = indices.map((obj, index) => index);\r\n      this.buffer.positionsVBO = new Float32Array(positions);\r\n      this.buffer.normalVBO = new Float32Array(normals);\r\n      this.buffer.colorVBO = new Float32Array(colors);\r\n      this.buffer.selectionColorVBO = new Float32Array(selectionColors);\r\n      this.buffer.textureVBO = new Float32Array(textureCoordinates);\r\n      this.buffer.positionsGlBuffer = this.buffer.createBuffer(this.buffer.positionsVBO);\r\n      this.buffer.colorGlBuffer = this.buffer.createBuffer(this.buffer.colorVBO);\r\n      this.buffer.selectionColorGlBuffer = this.buffer.createBuffer(this.buffer.selectionColorVBO);\r\n      this.buffer.normalGlBuffer = this.buffer.createBuffer(this.buffer.normalVBO);\r\n      this.buffer.indicesGlBuffer = this.buffer.createIndexBuffer(this.buffer.indicesVBO);\r\n      this.buffer.textureGlBuffer = this.buffer.createBuffer(this.buffer.textureVBO);\r\n      this.buffer.indicesLength = this.buffer.indicesVBO.length;\r\n      this.dirty = false;\r\n    }\r\n    return this.buffer;\r\n  }\r\n}","const {mat2, mat3, mat4, vec2, vec3, vec4} = self.glMatrix; // eslint-disable-line no-unused-vars\r\n\r\nFloat32Array.prototype.concat = function() {\r\n\tvar bytesPerIndex = 4,\r\n\t\tbuffers = Array.prototype.slice.call(arguments);\r\n\tbuffers.unshift(this);\r\n\tbuffers = buffers.map(function (item) {\r\n\t\tif (item instanceof Float32Array) {\r\n\t\t\treturn item.buffer;\r\n\t\t} else if (item instanceof ArrayBuffer) {\r\n\t\t\tif (item.byteLength / bytesPerIndex % 1 !== 0) {\r\n\t\t\t\tthrow new Error('One of the ArrayBuffers is not from a Float32Array');\t\r\n\t\t\t}\r\n\t\t\treturn item;\r\n\t\t} else {\r\n\t\t\tthrow new Error('You can only concat Float32Array, or ArrayBuffers');\r\n\t\t}\r\n\t});\r\n\tvar concatenatedByteLength = buffers\r\n\t\t.map(function (a) {return a.byteLength;})\r\n\t\t.reduce(function (a,b) {return a + b;}, 0);\r\n\tvar concatenatedArray = new Float32Array(concatenatedByteLength / bytesPerIndex);\r\n\tvar offset = 0;\r\n\tbuffers.forEach(function (buffer) {\r\n\t\tconcatenatedArray.set(new Float32Array(buffer), offset);\r\n\t\toffset += buffer.byteLength / bytesPerIndex;\r\n\t});\r\n\treturn concatenatedArray;\r\n};\r\n\r\nimport BatchObject from '../renderable/BatchObject.js';\r\n\r\nexport default class BufferBatch {\r\n\r\n  static batch100(gl, renderableObjs) {\r\n    let results = [];\r\n    let unit = 500;\r\n    for (let loop = 0; loop < renderableObjs.length; loop+= unit) {\r\n      let result = this.batch(gl, renderableObjs.slice(loop, loop + unit));\r\n      results.push(result);\r\n    }\r\n    return results;\r\n  }\r\n\r\n  static batch(gl, renderableObjs) {\r\n    let positionsList = [];\r\n    let normalsList = [];\r\n    let colorsList = [];\r\n    let selectionColorsList = [];\r\n    let textureCoordinatesList = [];\r\n    let textureList = [];\r\n    renderableObjs.forEach((renderableObj) => {\r\n      let position = renderableObj.position;\r\n      let buffer = renderableObj.getBuffer(gl);\r\n      let movedPositions = [];\r\n      buffer.positionsVBO.forEach((VBO, index) =>{\r\n        let count = index % 3;\r\n        if (count == 0) {\r\n          movedPositions.push(VBO + position[0]);\r\n        } else if (count == 1) {\r\n          movedPositions.push(VBO + position[1]);\r\n        } else {\r\n          movedPositions.push(VBO + position[2]);\r\n        }\r\n      })\r\n      positionsList.push(movedPositions);\r\n      normalsList.push(buffer.normalVBO);\r\n      colorsList.push(buffer.colorVBO);\r\n      selectionColorsList.push(buffer.selectionColorVBO);\r\n      textureCoordinatesList.push(buffer.textureVBO);\r\n      textureList.push(buffer.texture);\r\n    }); \r\n    let buffer = {\r\n      positions : this.concatFloat32(positionsList),\r\n      normals : this.concatFloat32(normalsList),\r\n      colors : this.concatFloat32(colorsList),\r\n      selectionColors : this.concatFloat32(selectionColorsList),\r\n      textureCoordinates : this.concatFloat32(textureCoordinatesList),\r\n      textures : textureList,\r\n    };\r\n    return new BatchObject(buffer);\r\n  }\r\n\r\n  static concatFloat32(floatObjs) {\r\n    if (!floatObjs || floatObjs.length <= 0) {\r\n      console.log(\"========================\");\r\n      return;\r\n    }\r\n    \r\n    let result = [];\r\n    for (let loop = 0; loop < floatObjs.length; loop++) {\r\n      //result = result.concat(floatObjs[loop]);\r\n      this.concat(result, floatObjs[loop]);\r\n    }\r\n    return new Float32Array(result);\r\n  }\r\n  static concat(target, list) {\r\n    list.forEach((data) => {\r\n      target.push(data); \r\n    });\r\n  }\r\n}","import { render } from \"./WebglComponent.vue?vue&type=template&id=25fdf0ba&scoped=true\"\nimport script from \"./WebglComponent.vue?vue&type=script&lang=js\"\nexport * from \"./WebglComponent.vue?vue&type=script&lang=js\"\n\nimport \"./WebglComponent.vue?vue&type=style&index=0&id=25fdf0ba&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\gitspace\\\\webgl\\\\webgl\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-25fdf0ba\"]])\n\nexport default __exports__","import { render } from \"./MainView.vue?vue&type=template&id=1d9a955b\"\nimport script from \"./MainView.vue?vue&type=script&lang=js\"\nexport * from \"./MainView.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\gitspace\\\\webgl\\\\webgl\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import MainView from '@/views/MainView.vue'\r\nimport { createRouter, createWebHistory } from 'vue-router'\r\n\r\nconst routes = [\r\n  {\r\n    path: '/',\r\n    name: 'MainView',\r\n    component: MainView\r\n  }\r\n]\r\nconst router = createRouter({\r\n  history: createWebHistory(),\r\n  routes\r\n})\r\nexport default router\r\n","import { createStore } from 'vuex'\n\nexport default createStore({\n  state: {\n  },\n  getters: {\n  },\n  mutations: {\n  },\n  actions: {\n  },\n  modules: {\n  }\n})\n","import { createApp } from 'vue'\r\nimport App from './App.vue'\r\nimport router from './router'\r\nimport store from './store'\r\n\r\nconst WEBGL_APP = createApp(App);\r\n\r\nWEBGL_APP.use(store);\r\nWEBGL_APP.use(router);\r\nWEBGL_APP.mount('#app');","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkwebgl\"] = self[\"webpackChunkwebgl\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(6729); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_createBlock","_component_router_view","name","__exports__","render","_component_webgl_component","class","style","oncontextmenu","ondragstart","onselectstart","_createElementVNode","_hoisted_4","_hoisted_37","id","width","height","_hoisted_3","onClick","$data","_hoisted_5","_createElementBlock","_hoisted_8","$options","_hoisted_10","type","accept","onChange","_hoisted_12","scale","$event","min","max","step","_hoisted_14","rotationZ","onInput","_hoisted_16","rotationX","_hoisted_18","rotationY","_hoisted_19","_hoisted_21","fovyDegree","_hoisted_23","near","_hoisted_25","far","_hoisted_26","cullFace","_hoisted_28","depthTest","_hoisted_29","debugMode","_hoisted_30","_hoisted_31","enableSsao","_hoisted_33","enableGlobalLight","_hoisted_34","enableEdge","_hoisted_35","_hoisted_36","blockSize","_hoisted_47","_hoisted_48","length","change","readonly","_Fragment","_renderList","renderable","index","key","selected","_hoisted_50","_component_first_person_controller_component","blocks","_component_third_person_controller_component","mat2","mat3","mat4","vec2","vec3","vec4","self","glMatrix","props","webGl","Object","data","keyEvent","undefined","controllerStatus","mouseStatus","keyStatus","globalOptions","cameraZAxis","BLOCK_SIZE","MOVE_FACTOR","ROTATE_FACTOR","mounted","this","init","unmounted","clearInterval","methods","initKey","initMouse","canvas","document","getElementById","onmousedown","e","button","exitPointerLock","requestPointerLock","onmousemove","camera","xValue","movementX","rotate","yValue","movementY","onmouseup","moveMs","setInterval","w","moveForward","s","a","moveRight","d","q","moveUp","window","onkeydown","ctrlStatus","ctrlKey","onkeyup","Line","constructor","pos","dir","position","direction","Plane","normal","set","distance","getIntersection","line","test","Math","abs","Number","MIN_VALUE","lambda","x","y","z","fromValues","moveStatus","moveObject","moveObjectOffset","movePlane","moveCameraPosition","rotateStatus","rotateObject","pivotPosition","zoomStatus","zoomCameraPosition","zoomCameraRay","altStatus","shiftStatus","ontouchstart","target","changedTouches","touchStartPosition","clientX","clientY","mouseX","mouseY","ratioX","ratioY","depth","depthFbo","getDepth","getScreenPosition","console","log","getRay","preventDefault","ontouchmove","targetTouches","startPosition","touchMovedPosition","ray","movedPosition","objectOffset","selectedObject","$parent","getSelectedObject","dirty","moveCamera","scaledRay","create","add","setPosition","ontouchend","onwheel","selectionColor","selectionFbo","getColor","offset","deltaY","ondblclick","normalFbo","getNormal","rm","getRotationMatrix","normalVec4","rotatedNormal","transformMat4","heading","atan2","pitch","asin","degree","createObject","rotation","roll","diselectObj","selectObj","OFFSET","blockX","floor","blockY","blockZ","originX","originY","originZ","origin","polygon","createDirt","sub","removeObj","rotationOrbit","shiftKey","altKey","getViewRay","rotationMatrix","ray4","ray3","Shader","gl","shaderInfo","shaderObject","vertexShader","createShader","VERTEX_SHADER","vertexShaderSource","fragmentShader","FRAGMENT_SHADER","fragmentShaderSource","shaderProgram","createShaderProgram","getProgramParameter","LINK_STATUS","error","useProgram","attributeLocations","attributes","forEach","attribute","result","replace","char","toLowerCase","getAttribLocation","uniformLocations","uniforms","uniform","getUniformLocation","shaderType","shaderSource","shader","compileShader","status","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","createProgram","attachShader","linkProgram","Camera","options","getTransformMatrix","transformMatrix","up","right","fovyRadian","radian","syncFovyDegree","cameraPosition","endPosition","offsetPosition","subtract","pitchAxis","headingMatrix","fromZRotation","pitchMatrix","fromRotation","totalRotationMatrix","multiply","translatedCameraPosition","translatedCameraPositionVec4","transformedCameraPosition","transformedCameraPositionVec3","returnedCameraPosition","totalMatrix3","fromMat4","rotatedDirection","transformMat3","rotatedUp","identity","rollMatrix","lookAt","zAxis","normalize","xAxis","cross","yAxis","factor","moveMatrix","translate","setPositionSync","setRotationSync","getModelViewMatrix","mvm","invert","calcRight","clone","getNormalMatrix","normalMatrix4","modelViewMatrixInv","transpose","tc","relFar","fovy","aspectRatio","tangentOfHalfFovy","tan","hfar","wfar","Sun","FrameBufferObject","frameBuffer","createFramebuffer","depthBuffer","createRenderbuffer","texture","createTexture","textureType","clearColor","Int32Array","activeTexture","TEXTURE0","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_MAG_FILTER","LINEAR","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","texImage2D","RGBA","UNSIGNED_BYTE","bindFramebuffer","FRAMEBUFFER","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","DEPTH_COMPONENT16","framebufferRenderbuffer","DEPTH_ATTACHMENT","framebufferTexture2D","COLOR_ATTACHMENT0","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","Error","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","bind","uniform1i","unbind","pixels","Uint8Array","readPixels","pixelsF32","Float32Array","decodeNormal","convertColorToId","unpackDepth","convertIdToColor","calc","value","div","color","convertColor255ToId","rgba_depth","RenderableObjectList","renderableObjects","findById","find","renderableObject","get","push","pop","size","removeAll","DefaultShader","ShaderProcess","privateGl","privateShader","getGl","getCanvas","getShader","getShaderInfo","preprocess","process","postprocess","DefaultShaderProcess","frameBufferObjs","renderableList","super","projectionMatrix","perspective","aspect","parseFloat","modelViewMatrix","normalMatrix","uniformMatrix4fv","uniform2fv","nearFar","uniform1f","pointSize","frameBufferObj","renderableObj","getId","createRenderableObjectId","ScreenShader","Buffer","buffers","bindBuffer","glBuffer","attributeLocation","ARRAY_BUFFER","vertexAttribPointer","FLOAT","createBuffer","buffer","bufferData","STATIC_DRAW","createIndexBuffer","ELEMENT_ARRAY_BUFFER","image","texWrap","pixelStorei","UNPACK_FLIP_Y_WEBGL","NEAREST","NEAREST_MIPMAP_NEAREST","generateMipmap","createNoiseTexture","random","REPEAT","convertFaceColor","faceColors","colors","concat","Renderable","getBuffer","tm","calcNormal","pa","pb","pc","d0","d1","intersection","a1","a2","b1","b2","dot","b","c","crossed","getMinMax","positions","minx","MAX_SAFE_INTEGER","miny","maxx","MIN_SAFE_INTEGER","maxy","ID_RANGE","randomId","ceil","obj","Triangle","positionA","positionB","positionC","directionA","directionB","getPlane","plane","Screen","coordinates","forDebug","r","g","uniformLocation","indicesGlBuffer","enableVertexAttribArray","textureCoordinate","textureGlBuffer","vertexPosition","postionsGlBuffer","drawElements","TRIANGLES","indicesLength","UNSIGNED_SHORT","selectionColors","normals","textureCoordinates","rectanglePositions","map","coordinate","bbox","leftTriangle","rightTriangle","triangles","triangle","trianglePositions","rangeX","rangeY","indices","Uint16Array","indicesVBO","positionsVBO","colorVBO","selectionColorVBO","normalVBO","textureVBO","colorGlBuffer","selectionColorGlBuffer","normalGlBuffer","ScreenShaderProcess","sun","screens","mainScreen","reverse","mainTexture","albedoScreen","albedoTexture","selectionScreen","selectionTexture","normalScreen","normalTexture","depthScreen","depthTexture","lightMapDepthScreen","lightMapTexture","noiseTexture","viewport","enable","CULL_FACE","frontFace","CCW","lineWidth","orthographicMatrix","ortho","cameraTransformMatrix","sunModelViewMatrix","sunNormalMatrix","isMain","selectedObjectId","screenSize","noiseScale","ssaoKernelSample","ssaoKernel","uniform3fv","ascreen","textureProperty","disable","DEPTH_TEST","screen","LightMapShader","LightMapShaderProcess","PI","randomInt","round","Array","prototype","loopIndex","getPrev","getNext","WebGL","defaultFrameBufferObjs","lightMapFrameBufferObjs","renderableObjectList","shaderProcesses","version","getContext","checkMultiRenders","ext","getExtension","resizeCanvas","displayWidth","clientWidth","displayHeight","clientHeight","isChanged","isNotInit","startRender","depthFunc","LEQUAL","defaultShader","defaultShaderInfo","screenShader","screenShaderInfo","lightMapShader","lightMapShaderInfo","getMainFbo","getAlbedoFbo","getSelectionFbo","getNormalFbo","getDepthFbo","getLightMapFbo","shaderProcess","setOptions","scene","requestAnimationFrame","mainFbo","albedoFbo","lightMapFbo","TextureCoordinator","textureSize","texturePosition","pixelWidth","minWidth","minHeight","maxWidth","maxHeight","Cube","objectMatrix","vertexNormal","positionsGlBuffer","vertexColor","vertexSelectionColor","l","h","p0","p1","p2","p3","p4","p5","p6","p7","n0","n1","n2","n3","n4","n5","n6","n7","n8","n9","n10","n11","calcTextureCoordinate","positionCount","Tessellator","isCCW","validateConvex","ConvexPolygon","toTriangles","convexs","isConvex","clockwisePosition","getPositionNormal","clockwiseIndex","indexOf","nearestPositions","sortedNearest","some","nearestPosition","splits","split","isIntersection","validateIntersection","polygonA","validateAngle","polygonB","crnt","next","cw","i","positionsA","createSplits","positionsB","list","compare","sum","angle","getAngle","angleSum","reverseAngleSum","prev","filtedPositions","filter","sort","distanceA","squaredDistance","distanceB","Polygon","topPositions","bottomPositions","minz","maxz","validateCCW","topTriangles","tessellate","bottomTriangles","sideTriangles","createSideTriangle","xoffset","yoffset","zoffset","topA","topB","bottomA","bottomB","createRandomColor","Rectangle","Point","POINTS","renderOptions","LINE_STRIP","Cylinder","radius","density","angleOffset","rotateVec2","rotated","topOrigin","topPosition","nextPosition","bottomOrigin","bottomPosition","Obj","objData","scaler","minX","minY","minZ","maxX","maxY","maxZ","vertices","vertice","xyz","block","allCoordinates","allVertices","sizeX","sizeY","sizeZ","faces","face","splitedFaces","theIndex","parseInt","theCoordinates","loop","BatchObject","textures","bytesPerIndex","slice","call","arguments","unshift","item","ArrayBuffer","byteLength","concatenatedByteLength","reduce","concatenatedArray","BufferBatch","renderableObjs","results","unit","batch","positionsList","normalsList","colorsList","selectionColorsList","textureCoordinatesList","textureList","movedPositions","VBO","count","concatFloat32","floatObjs","components","FirstPersonControllerComponent","ThirdPersonControllerComponent","thirdMode","drawTools","renderTools","showDraw","showRender","consoleTools","showConsole","loadedObjs","localOptions","initConsole","computed","initImage","dist","initPosition","base","initBlocks","rotateSelectedObject","uploadObj","_this","file","files","reader","FileReader","onload","progressEvent","objText","startFace","groups","groupNum","replaceAll","lines","readAsText","removeBlocks","blockObj","MAX_HEIGHT","MAX_VALUE","xpos","ypos","zpos","createRandomValue","initGround","isAdd","createdList","randomValue","createStone","createObsidian","images","imagePaths","imageLength","loadedCount","imagePath","Image","crossOrigin","src","correctCoord","halfWidth","halfHeight","rectangle","getExtrusion","url","fetch","then","response","json","extrusions","features","feature","geometry","resultCoordinates","properties","build_height","posx","poxy","extrusion","createPolygon","reload","isBatch","setTimeout","filteredObjs","batch100","setZeroPosition","loadedObj","object","createCylinder","cylinder","createPoint","point","createLine","createCube","cube","consoleLimit","consoleToHtml","consoleDiv","querySelector","textContent","substring","Date","toLocaleString","from","el","insertValue","JSON","stringify","scrollTop","scrollHeight","logCopy","unsetConsole","WebglComponent","routes","path","component","MainView","router","createRouter","history","createWebHistory","createStore","state","getters","mutations","actions","modules","WEBGL_APP","createApp","App","use","store","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","keys","every","splice","n","getter","__esModule","definition","o","defineProperty","enumerable","globalThis","Function","prop","hasOwnProperty","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}